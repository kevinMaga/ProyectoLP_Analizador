
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT AND AND_LOGICAL AND_WORD ARRAY ARRAY_POP ARRAY_PUSH ARROW AS BOOLEAN BREAK CALLABLE CASE CATCH CLASS CLONE CLOSEINTER COMA COMENTARIO_LINEA COMENTARIO_MULTILINEA COMENTARIO_SHELL COUNT DECLARE DECREMENT DEFAULT DELIM_FIN DELIM_INICIO DIE DIVIDE DIVIDE_ASSIGN DOBLEDIVIDE DOBLEPUNTO ECHO ELSE ELSEIF EMPTY ENDFOR ENDFOREACH ENDIF ENDSWITCH ENDWHILE EQUAL EVAL EXIT EXTENDS FGETS FINAL FINALLY FLOAT FN FOR FOREACH FUNCTION GLOBAL GOTO GREATER_EQUAL ID IDENTICAL IF IGUAL IMPLEMENTS INCLUDE INCREMENT INSTANCEOF INSTEADOF INTERFACE IN_ARRAY ISSET LBRACE LBRACKET LESS_EQUAL LIST LLLAVE LPAREN MATCH MAYOR MAYORIGUAL MENOR MENORIGUAL MENOR_MAYOR MINUS MINUS_ASSIGN MOD MODULO_ASSIGN NEW NOT_EQUAL NOT_IDENTICAL NOT_LOGICAL NUMBER NUMERAL OR OR_LOGICAL OR_WORD PLUS PLUS_ASSIGN POT PRINT PRIVATE PROTECTED PUBLIC PUNTO PUNTOYCOMA RBRACE RBRACKET READLINE REQUIRE RETURN RLLAVE RPAREN SORT STATIC STRING STRLEN STRPOS SWITCH THROW TIMES TIMES_ASSIGN TRAIT TRY UNSET USE VAR VARIABLE VIRGULILLA WHILE XOR XOR_WORD YIELD YIELD_FROM\n    imprimir : PRINT LPAREN valor RPAREN PUNTOYCOMA\n             | PRINT LPAREN argumentos RPAREN PUNTOYCOMA\n             | ECHO valor PUNTOYCOMA\n             | ECHO concatenar PUNTOYCOMA\n    \n    argumentos : valor\n               | argumentos COMA valor\n    \n    solicitud_datos : READLINE LPAREN STRING RPAREN PUNTOYCOMA\n    \n    concatenar : valor\n                | valor PUNTO concatenar\n    \n  input : VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA\n\n  indexacion : VARIABLE LBRACKET valor RBRACKET\n                  | VARIABLE LBRACKET valor RBRACKET PUNTOYCOMAnumero : NUMBER\n            | MINUS NUMBER\n            | FLOAT\n  \n    valor : NUMBER\n          | FLOAT\n          | STRING\n          | BOOLEAN\n          | VARIABLE\n    operadores : AND_LOGICAL\n                 | OR_LOGICAL\n    operadorAritmetico : PLUS\n                          | MINUS\n                          | TIMES\n                          | DIVIDE\n                          | MOD\n                          | POT\n     comparadorNum : MAYOR\n                      | MAYORIGUAL\n                      | MENOR\n                      | MENORIGUAL\n     comparador : EQUAL\n                 | NOT_IDENTICAL\n                 | NOT_EQUAL\n                 | IGUAL\n                 | IDENTICAL\n     comparaciones : comparacion  \n\t\t\t\t\t | comparacion operadores comparaciones\n\t comparacion :  VARIABLE comparadorNum VARIABLE \n            | valor comparador valor \n\t \n    condicion : condicion_simple\n              | condicion compuesta_logica condicion\n    \n    condicion_simple : valor comparador valor\n    \n    compuesta_logica : AND_LOGICAL\n                     | OR_LOGICAL\n    OperacionASIG : VARIABLE PLUS_ASSIGN NUMBER\n                    | VARIABLE MINUS_ASSIGN NUMBER\n                    | VARIABLE TIMES_ASSIGN NUMBER\n                    | VARIABLE DIVIDE_ASSIGN NUMBER\n                    | VARIABLE MODULO_ASSIGN NUMBER\n                    | VARIABLE PLUS_ASSIGN NUMBER PUNTOYCOMA\n                    | VARIABLE MINUS_ASSIGN NUMBER PUNTOYCOMA\n                    | VARIABLE TIMES_ASSIGN NUMBER PUNTOYCOMA\n                    | VARIABLE DIVIDE_ASSIGN NUMBER PUNTOYCOMA\n                    | VARIABLE MODULO_ASSIGN NUMBER PUNTOYCOMA\n    incrementoDecremento : VARIABLE INCREMENT\n                            | VARIABLE DECREMENT\n                            | VARIABLE INCREMENT PUNTOYCOMA\n                            | VARIABLE DECREMENT PUNTOYCOMA\n     operacion : VARIABLE operadorAritmetico VARIABLE\n                 | operacion operadorAritmetico operacion\n     operaciones : operacion\n                    | operacion PUNTOYCOMA\n                    | operacion operadorAritmetico operaciones \n                    | VARIABLE IGUAL operaciones array : VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA\n            | VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA\n            | VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA\n            | VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA\n  \n    lista : LBRACKET RBRACKET\n          | LBRACKET elementos RBRACKET\n    \n    elemento : valor\n             | lista\n             | clave_valor\n    \n    elementos : elemento\n              | elementos COMA elemento\n    \n    clave_valor : valor ARROW valor\n    \n    diccionario : LBRACE pares RBRACE\n    \n    pares : par\n          | pares COMA par\n    \n    par : STRING ARROW valor\n    estructurasControl : WHILE\n                        | IF\n                        | ELSE\n                        | FOR\n  \n    if : IF LPAREN comparaciones RPAREN LLLAVE declaraciones RLLAVE\n       | IF LPAREN VARIABLE RPAREN LLLAVE declaraciones RLLAVE\n     else : RLLAVE ELSE LLLAVE declaraciones RLLAVE\n          | ELSE LLLAVE declaraciones RLLAVE\n\n          \n    declaraciones : declaracion\n                  | declaraciones declaracion\n    \n    declaracion : IF\n                | asignacion\n                | ELSE\n                | operacion\n                | WHILE\n                | FOR\n                | funcioninbuilt\n    \n    asignacion : VARIABLE IGUAL valor PUNTOYCOMA\n                | VARIABLE IGUAL valor \n    \n    while : WHILE LBRACE condicion RBRACE bloque\n    \n    bloque : LBRACE instrucciones RBRACE\n    \n    instrucciones : instruccion\n                  | instrucciones instruccion\n    \n    instruccion : asignacion\n                | imprimir\n    \n    funcioninbuilt : funciones LPAREN operaciones RPAREN\n                   | funciones LPAREN RPAREN\n    \n    funciones : STRLEN\n                | STRPOS\n                | ARRAY_PUSH\n                | ARRAY_POP\n                | IN_ARRAY\n                | COUNT\n                | SORT\n    \n    funcion_anonima : FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE\n    \n    parametros : STRING\n               | parametros COMA STRING\n    '
    
_lr_action_items = {'PRINT':([0,],[2,]),'ECHO':([0,],[3,]),'$end':([1,14,16,22,23,],[0,-3,-4,-1,-2,]),'LPAREN':([2,],[4,]),'NUMBER':([3,4,15,19,],[7,7,7,7,]),'FLOAT':([3,4,15,19,],[8,8,8,8,]),'STRING':([3,4,15,19,],[9,9,9,9,]),'BOOLEAN':([3,4,15,19,],[10,10,10,10,]),'VARIABLE':([3,4,15,19,],[11,11,11,11,]),'PUNTOYCOMA':([5,6,7,8,9,10,11,17,18,20,21,],[14,16,-16,-17,-18,-19,-20,22,23,-8,-9,]),'PUNTO':([5,7,8,9,10,11,20,],[15,-16,-17,-18,-19,-20,15,]),'RPAREN':([7,8,9,10,11,12,13,24,],[-16,-17,-18,-19,-20,17,18,-6,]),'COMA':([7,8,9,10,11,12,13,24,],[-16,-17,-18,-19,-20,-5,19,-6,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'imprimir':([0,],[1,]),'valor':([3,4,15,19,],[5,12,20,24,]),'concatenar':([3,15,],[6,21,]),'argumentos':([4,],[13,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> imprimir","S'",1,None,None,None),
  ('imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA','imprimir',5,'p_imprimir','Sintactico_analizador.py',20),
  ('imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA','imprimir',5,'p_imprimir','Sintactico_analizador.py',21),
  ('imprimir -> ECHO valor PUNTOYCOMA','imprimir',3,'p_imprimir','Sintactico_analizador.py',22),
  ('imprimir -> ECHO concatenar PUNTOYCOMA','imprimir',3,'p_imprimir','Sintactico_analizador.py',23),
  ('argumentos -> valor','argumentos',1,'p_argumentos','Sintactico_analizador.py',32),
  ('argumentos -> argumentos COMA valor','argumentos',3,'p_argumentos','Sintactico_analizador.py',33),
  ('solicitud_datos -> READLINE LPAREN STRING RPAREN PUNTOYCOMA','solicitud_datos',5,'p_solicitud_datos','Sintactico_analizador.py',43),
  ('concatenar -> valor','concatenar',1,'p_concatenar','Sintactico_analizador.py',51),
  ('concatenar -> valor PUNTO concatenar','concatenar',3,'p_concatenar','Sintactico_analizador.py',52),
  ('input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA','input',7,'p_input','Sintactico_analizador.py',56),
  ('indexacion -> VARIABLE LBRACKET valor RBRACKET','indexacion',4,'p_indexacion','Sintactico_analizador.py',60),
  ('indexacion -> VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA','indexacion',5,'p_indexacion','Sintactico_analizador.py',61),
  ('numero -> NUMBER','numero',1,'p_numero','Sintactico_analizador.py',64),
  ('numero -> MINUS NUMBER','numero',2,'p_numero','Sintactico_analizador.py',65),
  ('numero -> FLOAT','numero',1,'p_numero','Sintactico_analizador.py',66),
  ('valor -> NUMBER','valor',1,'p_valor','Sintactico_analizador.py',71),
  ('valor -> FLOAT','valor',1,'p_valor','Sintactico_analizador.py',72),
  ('valor -> STRING','valor',1,'p_valor','Sintactico_analizador.py',73),
  ('valor -> BOOLEAN','valor',1,'p_valor','Sintactico_analizador.py',74),
  ('valor -> VARIABLE','valor',1,'p_valor','Sintactico_analizador.py',75),
  ('operadores -> AND_LOGICAL','operadores',1,'p_operadores','Sintactico_analizador.py',79),
  ('operadores -> OR_LOGICAL','operadores',1,'p_operadores','Sintactico_analizador.py',80),
  ('operadorAritmetico -> PLUS','operadorAritmetico',1,'p_operadorAritmetico','Sintactico_analizador.py',86),
  ('operadorAritmetico -> MINUS','operadorAritmetico',1,'p_operadorAritmetico','Sintactico_analizador.py',87),
  ('operadorAritmetico -> TIMES','operadorAritmetico',1,'p_operadorAritmetico','Sintactico_analizador.py',88),
  ('operadorAritmetico -> DIVIDE','operadorAritmetico',1,'p_operadorAritmetico','Sintactico_analizador.py',89),
  ('operadorAritmetico -> MOD','operadorAritmetico',1,'p_operadorAritmetico','Sintactico_analizador.py',90),
  ('operadorAritmetico -> POT','operadorAritmetico',1,'p_operadorAritmetico','Sintactico_analizador.py',91),
  ('comparadorNum -> MAYOR','comparadorNum',1,'p_comparadorNum','Sintactico_analizador.py',97),
  ('comparadorNum -> MAYORIGUAL','comparadorNum',1,'p_comparadorNum','Sintactico_analizador.py',98),
  ('comparadorNum -> MENOR','comparadorNum',1,'p_comparadorNum','Sintactico_analizador.py',99),
  ('comparadorNum -> MENORIGUAL','comparadorNum',1,'p_comparadorNum','Sintactico_analizador.py',100),
  ('comparador -> EQUAL','comparador',1,'p_comparador','Sintactico_analizador.py',105),
  ('comparador -> NOT_IDENTICAL','comparador',1,'p_comparador','Sintactico_analizador.py',106),
  ('comparador -> NOT_EQUAL','comparador',1,'p_comparador','Sintactico_analizador.py',107),
  ('comparador -> IGUAL','comparador',1,'p_comparador','Sintactico_analizador.py',108),
  ('comparador -> IDENTICAL','comparador',1,'p_comparador','Sintactico_analizador.py',109),
  ('comparaciones -> comparacion','comparaciones',1,'p_comparaciones','Sintactico_analizador.py',114),
  ('comparaciones -> comparacion operadores comparaciones','comparaciones',3,'p_comparaciones','Sintactico_analizador.py',115),
  ('comparacion -> VARIABLE comparadorNum VARIABLE','comparacion',3,'p_comparacion','Sintactico_analizador.py',118),
  ('comparacion -> valor comparador valor','comparacion',3,'p_comparacion','Sintactico_analizador.py',119),
  ('condicion -> condicion_simple','condicion',1,'p_condicion','Sintactico_analizador.py',127),
  ('condicion -> condicion compuesta_logica condicion','condicion',3,'p_condicion','Sintactico_analizador.py',128),
  ('condicion_simple -> valor comparador valor','condicion_simple',3,'p_condicion_simple','Sintactico_analizador.py',137),
  ('compuesta_logica -> AND_LOGICAL','compuesta_logica',1,'p_compuesta_logica','Sintactico_analizador.py',144),
  ('compuesta_logica -> OR_LOGICAL','compuesta_logica',1,'p_compuesta_logica','Sintactico_analizador.py',145),
  ('OperacionASIG -> VARIABLE PLUS_ASSIGN NUMBER','OperacionASIG',3,'p_operacionesASIG','Sintactico_analizador.py',153),
  ('OperacionASIG -> VARIABLE MINUS_ASSIGN NUMBER','OperacionASIG',3,'p_operacionesASIG','Sintactico_analizador.py',154),
  ('OperacionASIG -> VARIABLE TIMES_ASSIGN NUMBER','OperacionASIG',3,'p_operacionesASIG','Sintactico_analizador.py',155),
  ('OperacionASIG -> VARIABLE DIVIDE_ASSIGN NUMBER','OperacionASIG',3,'p_operacionesASIG','Sintactico_analizador.py',156),
  ('OperacionASIG -> VARIABLE MODULO_ASSIGN NUMBER','OperacionASIG',3,'p_operacionesASIG','Sintactico_analizador.py',157),
  ('OperacionASIG -> VARIABLE PLUS_ASSIGN NUMBER PUNTOYCOMA','OperacionASIG',4,'p_operacionesASIG','Sintactico_analizador.py',158),
  ('OperacionASIG -> VARIABLE MINUS_ASSIGN NUMBER PUNTOYCOMA','OperacionASIG',4,'p_operacionesASIG','Sintactico_analizador.py',159),
  ('OperacionASIG -> VARIABLE TIMES_ASSIGN NUMBER PUNTOYCOMA','OperacionASIG',4,'p_operacionesASIG','Sintactico_analizador.py',160),
  ('OperacionASIG -> VARIABLE DIVIDE_ASSIGN NUMBER PUNTOYCOMA','OperacionASIG',4,'p_operacionesASIG','Sintactico_analizador.py',161),
  ('OperacionASIG -> VARIABLE MODULO_ASSIGN NUMBER PUNTOYCOMA','OperacionASIG',4,'p_operacionesASIG','Sintactico_analizador.py',162),
  ('incrementoDecremento -> VARIABLE INCREMENT','incrementoDecremento',2,'p_incrementoDecremento','Sintactico_analizador.py',167),
  ('incrementoDecremento -> VARIABLE DECREMENT','incrementoDecremento',2,'p_incrementoDecremento','Sintactico_analizador.py',168),
  ('incrementoDecremento -> VARIABLE INCREMENT PUNTOYCOMA','incrementoDecremento',3,'p_incrementoDecremento','Sintactico_analizador.py',169),
  ('incrementoDecremento -> VARIABLE DECREMENT PUNTOYCOMA','incrementoDecremento',3,'p_incrementoDecremento','Sintactico_analizador.py',170),
  ('operacion -> VARIABLE operadorAritmetico VARIABLE','operacion',3,'p_operacion','Sintactico_analizador.py',176),
  ('operacion -> operacion operadorAritmetico operacion','operacion',3,'p_operacion','Sintactico_analizador.py',177),
  ('operaciones -> operacion','operaciones',1,'p_operaciones','Sintactico_analizador.py',182),
  ('operaciones -> operacion PUNTOYCOMA','operaciones',2,'p_operaciones','Sintactico_analizador.py',183),
  ('operaciones -> operacion operadorAritmetico operaciones','operaciones',3,'p_operaciones','Sintactico_analizador.py',184),
  ('operaciones -> VARIABLE IGUAL operaciones','operaciones',3,'p_operaciones','Sintactico_analizador.py',185),
  ('array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA','array',6,'p_array','Sintactico_analizador.py',192),
  ('array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA','array',7,'p_array','Sintactico_analizador.py',193),
  ('array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA','array',5,'p_array','Sintactico_analizador.py',194),
  ('array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA','array',6,'p_array','Sintactico_analizador.py',195),
  ('lista -> LBRACKET RBRACKET','lista',2,'p_lista','Sintactico_analizador.py',202),
  ('lista -> LBRACKET elementos RBRACKET','lista',3,'p_lista','Sintactico_analizador.py',203),
  ('elemento -> valor','elemento',1,'p_elemento','Sintactico_analizador.py',210),
  ('elemento -> lista','elemento',1,'p_elemento','Sintactico_analizador.py',211),
  ('elemento -> clave_valor','elemento',1,'p_elemento','Sintactico_analizador.py',212),
  ('elementos -> elemento','elementos',1,'p_elementos','Sintactico_analizador.py',217),
  ('elementos -> elementos COMA elemento','elementos',3,'p_elementos','Sintactico_analizador.py',218),
  ('clave_valor -> valor ARROW valor','clave_valor',3,'p_clave_valor','Sintactico_analizador.py',231),
  ('diccionario -> LBRACE pares RBRACE','diccionario',3,'p_diccionario','Sintactico_analizador.py',240),
  ('pares -> par','pares',1,'p_pares','Sintactico_analizador.py',246),
  ('pares -> pares COMA par','pares',3,'p_pares','Sintactico_analizador.py',247),
  ('par -> STRING ARROW valor','par',3,'p_par','Sintactico_analizador.py',256),
  ('estructurasControl -> WHILE','estructurasControl',1,'p_estructurasControl','Sintactico_analizador.py',268),
  ('estructurasControl -> IF','estructurasControl',1,'p_estructurasControl','Sintactico_analizador.py',269),
  ('estructurasControl -> ELSE','estructurasControl',1,'p_estructurasControl','Sintactico_analizador.py',270),
  ('estructurasControl -> FOR','estructurasControl',1,'p_estructurasControl','Sintactico_analizador.py',271),
  ('if -> IF LPAREN comparaciones RPAREN LLLAVE declaraciones RLLAVE','if',7,'p_if','Sintactico_analizador.py',275),
  ('if -> IF LPAREN VARIABLE RPAREN LLLAVE declaraciones RLLAVE','if',7,'p_if','Sintactico_analizador.py',276),
  ('else -> RLLAVE ELSE LLLAVE declaraciones RLLAVE','else',5,'p_else','Sintactico_analizador.py',286),
  ('else -> ELSE LLLAVE declaraciones RLLAVE','else',4,'p_else','Sintactico_analizador.py',287),
  ('declaraciones -> declaracion','declaraciones',1,'p_declaraciones','Sintactico_analizador.py',295),
  ('declaraciones -> declaraciones declaracion','declaraciones',2,'p_declaraciones','Sintactico_analizador.py',296),
  ('declaracion -> IF','declaracion',1,'p_declaracion','Sintactico_analizador.py',300),
  ('declaracion -> asignacion','declaracion',1,'p_declaracion','Sintactico_analizador.py',301),
  ('declaracion -> ELSE','declaracion',1,'p_declaracion','Sintactico_analizador.py',302),
  ('declaracion -> operacion','declaracion',1,'p_declaracion','Sintactico_analizador.py',303),
  ('declaracion -> WHILE','declaracion',1,'p_declaracion','Sintactico_analizador.py',304),
  ('declaracion -> FOR','declaracion',1,'p_declaracion','Sintactico_analizador.py',305),
  ('declaracion -> funcioninbuilt','declaracion',1,'p_declaracion','Sintactico_analizador.py',306),
  ('asignacion -> VARIABLE IGUAL valor PUNTOYCOMA','asignacion',4,'p_asignacion','Sintactico_analizador.py',310),
  ('asignacion -> VARIABLE IGUAL valor','asignacion',3,'p_asignacion','Sintactico_analizador.py',311),
  ('while -> WHILE LBRACE condicion RBRACE bloque','while',5,'p_while','Sintactico_analizador.py',320),
  ('bloque -> LBRACE instrucciones RBRACE','bloque',3,'p_bloque','Sintactico_analizador.py',327),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones','Sintactico_analizador.py',333),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','Sintactico_analizador.py',334),
  ('instruccion -> asignacion','instruccion',1,'p_instruccion','Sintactico_analizador.py',343),
  ('instruccion -> imprimir','instruccion',1,'p_instruccion','Sintactico_analizador.py',344),
  ('funcioninbuilt -> funciones LPAREN operaciones RPAREN','funcioninbuilt',4,'p_funcioninbuilt','Sintactico_analizador.py',355),
  ('funcioninbuilt -> funciones LPAREN RPAREN','funcioninbuilt',3,'p_funcioninbuilt','Sintactico_analizador.py',356),
  ('funciones -> STRLEN','funciones',1,'p_funcionesdefin','Sintactico_analizador.py',361),
  ('funciones -> STRPOS','funciones',1,'p_funcionesdefin','Sintactico_analizador.py',362),
  ('funciones -> ARRAY_PUSH','funciones',1,'p_funcionesdefin','Sintactico_analizador.py',363),
  ('funciones -> ARRAY_POP','funciones',1,'p_funcionesdefin','Sintactico_analizador.py',364),
  ('funciones -> IN_ARRAY','funciones',1,'p_funcionesdefin','Sintactico_analizador.py',365),
  ('funciones -> COUNT','funciones',1,'p_funcionesdefin','Sintactico_analizador.py',366),
  ('funciones -> SORT','funciones',1,'p_funcionesdefin','Sintactico_analizador.py',367),
  ('funcion_anonima -> FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE','funcion_anonima',7,'p_funcion_anonima','Sintactico_analizador.py',375),
  ('parametros -> STRING','parametros',1,'p_parametros','Sintactico_analizador.py',381),
  ('parametros -> parametros COMA STRING','parametros',3,'p_parametros','Sintactico_analizador.py',382),
]
