Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    AND
    AND_WORD
    AS
    BREAK
    CALLABLE
    CASE
    CATCH
    CLASS
    CLONE
    CLOSEINTER
    COMENTARIO_LINEA
    COMENTARIO_MULTILINEA
    COMENTARIO_SHELL
    DECLARE
    DEFAULT
    DIE
    DIVIDE_ASSIGN
    DOBLEDIVIDE
    DOBLEPUNTO
    ELSEIF
    EMPTY
    ENDFOR
    ENDFOREACH
    ENDIF
    ENDSWITCH
    ENDWHILE
    EVAL
    EXIT
    EXTENDS
    FINAL
    FINALLY
    FOREACH
    GLOBAL
    GOTO
    GREATER_EQUAL
    IMPLEMENTS
    INCLUDE
    INSTANCEOF
    INSTEADOF
    INTERFACE
    ISSET
    LESS_EQUAL
    LIST
    MATCH
    MENOR_MAYOR
    MODULO_ASSIGN
    NEW
    NOT_LOGICAL
    NUMERAL
    OR
    OR_WORD
    PRIVATE
    PROTECTED
    PUBLIC
    REQUIRE
    RETURN
    STATIC
    SWITCH
    THROW
    TIMES_ASSIGN
    TRAIT
    TRY
    UNSET
    USE
    VAR
    VIRGULILLA
    XOR
    XOR_WORD
    YIELD
    YIELD_FROM

Grammar

Rule 0     S' -> padre
Rule 1     padre -> PHP_START cuerpo PHP_END
Rule 2     cuerpo -> instrucciones
Rule 3     cuerpo -> empty
Rule 4     instrucciones -> instruccion
Rule 5     instrucciones -> instrucciones instruccion
Rule 6     instruccion -> imprimir
Rule 7     instruccion -> solicitud_datos
Rule 8     instruccion -> input
Rule 9     instruccion -> indexacion
Rule 10    instruccion -> estructurasControl
Rule 11    instruccion -> asignacion
Rule 12    instruccion -> estructurasDatos
Rule 13    instruccion -> funciones
Rule 14    imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA
Rule 15    imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA
Rule 16    imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA
Rule 17    imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
Rule 18    imprimir -> ECHO valor PUNTOYCOMA
Rule 19    imprimir -> ECHO concatenar PUNTOYCOMA
Rule 20    valor -> NUMBER
Rule 21    valor -> FLOAT
Rule 22    valor -> STRING
Rule 23    valor -> BOOLEAN
Rule 24    valor -> VARIABLE
Rule 25    valor -> ID
Rule 26    argumentos -> valor
Rule 27    argumentos -> argumentos COMA valor
Rule 28    concatenar -> valor
Rule 29    concatenar -> valor PUNTO concatenar
Rule 30    solicitud_datos -> READLINE LPAREN STRING RPAREN PUNTOYCOMA
Rule 31    input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
Rule 32    indexacion -> VARIABLE LBRACKET valor RBRACKET
Rule 33    indexacion -> VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
Rule 34    estructurasControl -> while
Rule 35    estructurasControl -> if
Rule 36    estructurasControl -> else
Rule 37    estructurasControl -> for_statement
Rule 38    if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
Rule 39    if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
Rule 40    comparaciones -> comparacion
Rule 41    comparaciones -> comparacion operadores comparaciones
Rule 42    comparacion -> VARIABLE comparadorNum VARIABLE
Rule 43    comparacion -> valor comparador valor
Rule 44    comparadorNum -> MAYOR
Rule 45    comparadorNum -> MAYORIGUAL
Rule 46    comparadorNum -> MENOR
Rule 47    comparadorNum -> MENORIGUAL
Rule 48    comparador -> EQUAL
Rule 49    comparador -> NOT_IDENTICAL
Rule 50    comparador -> NOT_EQUAL
Rule 51    comparador -> IGUAL
Rule 52    comparador -> IDENTICAL
Rule 53    operadores -> AND_LOGICAL
Rule 54    operadores -> OR_LOGICAL
Rule 55    asignacion -> VARIABLE IGUAL valor PUNTOYCOMA
Rule 56    asignacion -> VARIABLE IGUAL valor
Rule 57    operacion -> VARIABLE operadorAritmetico VARIABLE
Rule 58    operacion -> operacion operadorAritmetico operacion
Rule 59    operadorAritmetico -> PLUS
Rule 60    operadorAritmetico -> MINUS
Rule 61    operadorAritmetico -> TIMES
Rule 62    operadorAritmetico -> DIVIDE
Rule 63    operadorAritmetico -> MOD
Rule 64    operadorAritmetico -> POT
Rule 65    else -> RLLAVE ELSE LLLAVE instrucciones RLLAVE
Rule 66    else -> ELSE LLLAVE instrucciones RLLAVE
Rule 67    while -> WHILE LBRACE condicion RBRACE bloque
Rule 68    condicion -> condicion_simple
Rule 69    condicion -> condicion compuesta_logica condicion
Rule 70    condicion_simple -> valor comparador valor
Rule 71    compuesta_logica -> AND_LOGICAL
Rule 72    compuesta_logica -> OR_LOGICAL
Rule 73    bloque -> LBRACE instrucciones RBRACE
Rule 74    for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
Rule 75    initialization -> VARIABLE IGUAL valor
Rule 76    initialization -> empty
Rule 77    increment -> VARIABLE INCREMENT
Rule 78    increment -> VARIABLE DECREMENT
Rule 79    increment -> VARIABLE PLUS_ASSIGN valor
Rule 80    increment -> VARIABLE MINUS_ASSIGN valor
Rule 81    increment -> empty
Rule 82    empty -> <empty>
Rule 83    estructurasDatos -> array
Rule 84    estructurasDatos -> lista
Rule 85    estructurasDatos -> diccionario
Rule 86    array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
Rule 87    array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
Rule 88    array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
Rule 89    array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
Rule 90    elementos -> elemento
Rule 91    elementos -> elementos COMA elemento
Rule 92    elemento -> valor
Rule 93    elemento -> lista
Rule 94    elemento -> clave_valor
Rule 95    clave_valor -> valor ARROW valor
Rule 96    lista -> LBRACKET RBRACKET
Rule 97    lista -> LBRACKET elementos RBRACKET
Rule 98    diccionario -> LBRACE pares RBRACE
Rule 99    pares -> par
Rule 100   pares -> pares COMA par
Rule 101   par -> STRING ARROW valor
Rule 102   funciones -> funcioninbuilt
Rule 103   funciones -> funcion_anonima
Rule 104   funciones -> arrow_function
Rule 105   funcioninbuilt -> funcionesdefin LPAREN operaciones RPAREN
Rule 106   funcioninbuilt -> funcionesdefin LPAREN RPAREN
Rule 107   funcionesdefin -> STRLEN
Rule 108   funcionesdefin -> STRPOS
Rule 109   funcionesdefin -> ARRAY_PUSH
Rule 110   funcionesdefin -> ARRAY_POP
Rule 111   funcionesdefin -> IN_ARRAY
Rule 112   funcionesdefin -> COUNT
Rule 113   funcionesdefin -> SORT
Rule 114   operaciones -> operacion
Rule 115   operaciones -> operacion PUNTOYCOMA
Rule 116   operaciones -> operacion operadorAritmetico operaciones
Rule 117   operaciones -> VARIABLE IGUAL operaciones
Rule 118   funcion_anonima -> FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE
Rule 119   parametros -> STRING
Rule 120   parametros -> parametros COMA STRING
Rule 121   arrow_function -> VARIABLE EQUAL FN LPAREN parameter_list RPAREN ARROW expression
Rule 122   parameter_list -> VARIABLE
Rule 123   parameter_list -> VARIABLE COMA parameter_list
Rule 124   expression -> VARIABLE
Rule 125   expression -> NUMBER
Rule 126   expression -> VARIABLE TIMES VARIABLE
Rule 127   expression -> VARIABLE PLUS VARIABLE
Rule 128   expression -> VARIABLE MINUS VARIABLE
Rule 129   expression -> VARIABLE DIVIDE VARIABLE

Terminals, with rules where they appear

ABSTRACT             : 
AND                  : 
AND_LOGICAL          : 53 71
AND_WORD             : 
ARRAY                : 86 87
ARRAY_POP            : 110
ARRAY_PUSH           : 109
ARROW                : 95 101 121
AS                   : 
BOOLEAN              : 23
BREAK                : 
CALLABLE             : 
CASE                 : 
CATCH                : 
CLASS                : 
CLONE                : 
CLOSEINTER           : 
COMA                 : 27 91 100 120 123
COMENTARIO_LINEA     : 
COMENTARIO_MULTILINEA : 
COMENTARIO_SHELL     : 
COUNT                : 112
DECLARE              : 
DECREMENT            : 78
DEFAULT              : 
DIE                  : 
DIVIDE               : 62 129
DIVIDE_ASSIGN        : 
DOBLEDIVIDE          : 
DOBLEPUNTO           : 
ECHO                 : 18 19
ELSE                 : 65 66
ELSEIF               : 
EMPTY                : 
ENDFOR               : 
ENDFOREACH           : 
ENDIF                : 
ENDSWITCH            : 
ENDWHILE             : 
EQUAL                : 48 121
EVAL                 : 
EXIT                 : 
EXTENDS              : 
FGETS                : 31
FINAL                : 
FINALLY              : 
FLOAT                : 21
FN                   : 121
FOR                  : 74
FOREACH              : 
FUNCTION             : 118
GLOBAL               : 
GOTO                 : 
GREATER_EQUAL        : 
ID                   : 25
IDENTICAL            : 52
IF                   : 38 39
IGUAL                : 31 51 55 56 75 86 87 88 89 117
IMPLEMENTS           : 
INCLUDE              : 
INCREMENT            : 77
INSTANCEOF           : 
INSTEADOF            : 
INTERFACE            : 
IN_ARRAY             : 111
ISSET                : 
LBRACE               : 67 73 98 118
LBRACKET             : 32 33 88 89 96 97
LESS_EQUAL           : 
LIST                 : 
LLLAVE               : 38 39 65 66 74
LPAREN               : 14 15 16 17 30 31 38 39 74 86 87 105 106 118 121
MATCH                : 
MAYOR                : 44
MAYORIGUAL           : 45
MENOR                : 46
MENORIGUAL           : 47
MENOR_MAYOR          : 
MINUS                : 60 128
MINUS_ASSIGN         : 80
MOD                  : 63
MODULO_ASSIGN        : 
NEW                  : 
NOT_EQUAL            : 50
NOT_IDENTICAL        : 49
NOT_LOGICAL          : 
NUMBER               : 20 125
NUMERAL              : 
OR                   : 
OR_LOGICAL           : 54 72
OR_WORD              : 
PHP_END              : 1
PHP_START            : 1
PLUS                 : 59 127
PLUS_ASSIGN          : 79
POT                  : 64
PRINT                : 14 15
PRINT_R              : 16 17
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
PUNTO                : 29
PUNTOYCOMA           : 14 15 16 17 18 19 30 31 33 55 74 74 86 87 88 89 115
RBRACE               : 67 73 98 118
RBRACKET             : 32 33 88 89 96 97
READLINE             : 30
REQUIRE              : 
RETURN               : 
RLLAVE               : 38 39 65 65 66 74
RPAREN               : 14 15 16 17 30 31 38 39 74 86 87 105 106 118 121
SORT                 : 113
STATIC               : 
STRING               : 22 30 101 119 120
STRLEN               : 107
STRPOS               : 108
SWITCH               : 
THROW                : 
TIMES                : 61 126
TIMES_ASSIGN         : 
TRAIT                : 
TRY                  : 
UNSET                : 
USE                  : 
VAR                  : 
VARIABLE             : 24 31 31 32 33 39 42 42 55 56 57 57 75 77 78 79 80 86 87 88 89 117 121 122 123 124 126 126 127 127 128 128 129 129
VIRGULILLA           : 
WHILE                : 67
XOR                  : 
XOR_WORD             : 
YIELD                : 
YIELD_FROM           : 
error                : 

Nonterminals, with rules where they appear

argumentos           : 15 17 27
array                : 83
arrow_function       : 104
asignacion           : 11
bloque               : 67
clave_valor          : 94
comparacion          : 40 41
comparaciones        : 38 41
comparador           : 43 70
comparadorNum        : 42
compuesta_logica     : 69
concatenar           : 19 29
condicion            : 67 69 69 74
condicion_simple     : 68
cuerpo               : 1
diccionario          : 85
elemento             : 90 91
elementos            : 87 89 91 97
else                 : 36
empty                : 3 76 81
estructurasControl   : 10
estructurasDatos     : 12
expression           : 121
for_statement        : 37
funcion_anonima      : 103
funciones            : 13
funcionesdefin       : 105 106
funcioninbuilt       : 102
if                   : 35
imprimir             : 6
increment            : 74
indexacion           : 9
initialization       : 74
input                : 8
instruccion          : 4 5
instrucciones        : 2 5 38 39 65 66 73 74 118
lista                : 84 93
operacion            : 58 58 114 115 116
operaciones          : 105 116 117
operadorAritmetico   : 57 58 116
operadores           : 41
padre                : 0
par                  : 99 100
parameter_list       : 121 123
parametros           : 118 120
pares                : 98 100
solicitud_datos      : 7
valor                : 14 16 18 26 27 28 29 32 33 43 43 55 56 70 70 75 79 80 92 95 95 101
while                : 34

Parsing method: LALR

state 0

    (0) S' -> . padre
    (1) padre -> . PHP_START cuerpo PHP_END

    PHP_START       shift and go to state 2

    padre                          shift and go to state 1

state 1

    (0) S' -> padre .



state 2

    (1) padre -> PHP_START . cuerpo PHP_END
    (2) cuerpo -> . instrucciones
    (3) cuerpo -> . empty
    (4) instrucciones -> . instruccion
    (5) instrucciones -> . instrucciones instruccion
    (82) empty -> .
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (15) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (16) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . ECHO valor PUNTOYCOMA
    (19) imprimir -> . ECHO concatenar PUNTOYCOMA
    (30) solicitud_datos -> . READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (31) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (32) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (33) indexacion -> . VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (34) estructurasControl -> . while
    (35) estructurasControl -> . if
    (36) estructurasControl -> . else
    (37) estructurasControl -> . for_statement
    (55) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (56) asignacion -> . VARIABLE IGUAL valor
    (83) estructurasDatos -> . array
    (84) estructurasDatos -> . lista
    (85) estructurasDatos -> . diccionario
    (102) funciones -> . funcioninbuilt
    (103) funciones -> . funcion_anonima
    (104) funciones -> . arrow_function
    (67) while -> . WHILE LBRACE condicion RBRACE bloque
    (38) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (39) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (65) else -> . RLLAVE ELSE LLLAVE instrucciones RLLAVE
    (66) else -> . ELSE LLLAVE instrucciones RLLAVE
    (74) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (86) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (87) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (88) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (89) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (96) lista -> . LBRACKET RBRACKET
    (97) lista -> . LBRACKET elementos RBRACKET
    (98) diccionario -> . LBRACE pares RBRACE
    (105) funcioninbuilt -> . funcionesdefin LPAREN operaciones RPAREN
    (106) funcioninbuilt -> . funcionesdefin LPAREN RPAREN
    (118) funcion_anonima -> . FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE
    (121) arrow_function -> . VARIABLE EQUAL FN LPAREN parameter_list RPAREN ARROW expression
    (107) funcionesdefin -> . STRLEN
    (108) funcionesdefin -> . STRPOS
    (109) funcionesdefin -> . ARRAY_PUSH
    (110) funcionesdefin -> . ARRAY_POP
    (111) funcionesdefin -> . IN_ARRAY
    (112) funcionesdefin -> . COUNT
    (113) funcionesdefin -> . SORT

    PHP_END         reduce using rule 82 (empty -> .)
    PRINT           shift and go to state 15
    PRINT_R         shift and go to state 16
    ECHO            shift and go to state 17
    READLINE        shift and go to state 18
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 31
    IF              shift and go to state 33
    RLLAVE          shift and go to state 34
    ELSE            shift and go to state 35
    FOR             shift and go to state 36
    LBRACKET        shift and go to state 20
    LBRACE          shift and go to state 32
    FUNCTION        shift and go to state 38
    STRLEN          shift and go to state 39
    STRPOS          shift and go to state 40
    ARRAY_PUSH      shift and go to state 41
    ARRAY_POP       shift and go to state 42
    IN_ARRAY        shift and go to state 43
    COUNT           shift and go to state 44
    SORT            shift and go to state 45

    cuerpo                         shift and go to state 3
    instrucciones                  shift and go to state 4
    empty                          shift and go to state 5
    instruccion                    shift and go to state 6
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    while                          shift and go to state 21
    if                             shift and go to state 22
    else                           shift and go to state 23
    for_statement                  shift and go to state 24
    array                          shift and go to state 25
    lista                          shift and go to state 26
    diccionario                    shift and go to state 27
    funcioninbuilt                 shift and go to state 28
    funcion_anonima                shift and go to state 29
    arrow_function                 shift and go to state 30
    funcionesdefin                 shift and go to state 37

state 3

    (1) padre -> PHP_START cuerpo . PHP_END

    PHP_END         shift and go to state 46


state 4

    (2) cuerpo -> instrucciones .
    (5) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (15) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (16) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . ECHO valor PUNTOYCOMA
    (19) imprimir -> . ECHO concatenar PUNTOYCOMA
    (30) solicitud_datos -> . READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (31) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (32) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (33) indexacion -> . VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (34) estructurasControl -> . while
    (35) estructurasControl -> . if
    (36) estructurasControl -> . else
    (37) estructurasControl -> . for_statement
    (55) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (56) asignacion -> . VARIABLE IGUAL valor
    (83) estructurasDatos -> . array
    (84) estructurasDatos -> . lista
    (85) estructurasDatos -> . diccionario
    (102) funciones -> . funcioninbuilt
    (103) funciones -> . funcion_anonima
    (104) funciones -> . arrow_function
    (67) while -> . WHILE LBRACE condicion RBRACE bloque
    (38) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (39) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (65) else -> . RLLAVE ELSE LLLAVE instrucciones RLLAVE
    (66) else -> . ELSE LLLAVE instrucciones RLLAVE
    (74) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (86) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (87) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (88) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (89) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (96) lista -> . LBRACKET RBRACKET
    (97) lista -> . LBRACKET elementos RBRACKET
    (98) diccionario -> . LBRACE pares RBRACE
    (105) funcioninbuilt -> . funcionesdefin LPAREN operaciones RPAREN
    (106) funcioninbuilt -> . funcionesdefin LPAREN RPAREN
    (118) funcion_anonima -> . FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE
    (121) arrow_function -> . VARIABLE EQUAL FN LPAREN parameter_list RPAREN ARROW expression
    (107) funcionesdefin -> . STRLEN
    (108) funcionesdefin -> . STRPOS
    (109) funcionesdefin -> . ARRAY_PUSH
    (110) funcionesdefin -> . ARRAY_POP
    (111) funcionesdefin -> . IN_ARRAY
    (112) funcionesdefin -> . COUNT
    (113) funcionesdefin -> . SORT

    PHP_END         reduce using rule 2 (cuerpo -> instrucciones .)
    PRINT           shift and go to state 15
    PRINT_R         shift and go to state 16
    ECHO            shift and go to state 17
    READLINE        shift and go to state 18
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 31
    IF              shift and go to state 33
    RLLAVE          shift and go to state 34
    ELSE            shift and go to state 35
    FOR             shift and go to state 36
    LBRACKET        shift and go to state 20
    LBRACE          shift and go to state 32
    FUNCTION        shift and go to state 38
    STRLEN          shift and go to state 39
    STRPOS          shift and go to state 40
    ARRAY_PUSH      shift and go to state 41
    ARRAY_POP       shift and go to state 42
    IN_ARRAY        shift and go to state 43
    COUNT           shift and go to state 44
    SORT            shift and go to state 45

    instruccion                    shift and go to state 47
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    while                          shift and go to state 21
    if                             shift and go to state 22
    else                           shift and go to state 23
    for_statement                  shift and go to state 24
    array                          shift and go to state 25
    lista                          shift and go to state 26
    diccionario                    shift and go to state 27
    funcioninbuilt                 shift and go to state 28
    funcion_anonima                shift and go to state 29
    arrow_function                 shift and go to state 30
    funcionesdefin                 shift and go to state 37

state 5

    (3) cuerpo -> empty .

    PHP_END         reduce using rule 3 (cuerpo -> empty .)


state 6

    (4) instrucciones -> instruccion .

    PRINT           reduce using rule 4 (instrucciones -> instruccion .)
    PRINT_R         reduce using rule 4 (instrucciones -> instruccion .)
    ECHO            reduce using rule 4 (instrucciones -> instruccion .)
    READLINE        reduce using rule 4 (instrucciones -> instruccion .)
    VARIABLE        reduce using rule 4 (instrucciones -> instruccion .)
    WHILE           reduce using rule 4 (instrucciones -> instruccion .)
    IF              reduce using rule 4 (instrucciones -> instruccion .)
    RLLAVE          reduce using rule 4 (instrucciones -> instruccion .)
    ELSE            reduce using rule 4 (instrucciones -> instruccion .)
    FOR             reduce using rule 4 (instrucciones -> instruccion .)
    LBRACKET        reduce using rule 4 (instrucciones -> instruccion .)
    LBRACE          reduce using rule 4 (instrucciones -> instruccion .)
    FUNCTION        reduce using rule 4 (instrucciones -> instruccion .)
    STRLEN          reduce using rule 4 (instrucciones -> instruccion .)
    STRPOS          reduce using rule 4 (instrucciones -> instruccion .)
    ARRAY_PUSH      reduce using rule 4 (instrucciones -> instruccion .)
    ARRAY_POP       reduce using rule 4 (instrucciones -> instruccion .)
    IN_ARRAY        reduce using rule 4 (instrucciones -> instruccion .)
    COUNT           reduce using rule 4 (instrucciones -> instruccion .)
    SORT            reduce using rule 4 (instrucciones -> instruccion .)
    PHP_END         reduce using rule 4 (instrucciones -> instruccion .)
    RBRACE          reduce using rule 4 (instrucciones -> instruccion .)


state 7

    (6) instruccion -> imprimir .

    PRINT           reduce using rule 6 (instruccion -> imprimir .)
    PRINT_R         reduce using rule 6 (instruccion -> imprimir .)
    ECHO            reduce using rule 6 (instruccion -> imprimir .)
    READLINE        reduce using rule 6 (instruccion -> imprimir .)
    VARIABLE        reduce using rule 6 (instruccion -> imprimir .)
    WHILE           reduce using rule 6 (instruccion -> imprimir .)
    IF              reduce using rule 6 (instruccion -> imprimir .)
    RLLAVE          reduce using rule 6 (instruccion -> imprimir .)
    ELSE            reduce using rule 6 (instruccion -> imprimir .)
    FOR             reduce using rule 6 (instruccion -> imprimir .)
    LBRACKET        reduce using rule 6 (instruccion -> imprimir .)
    LBRACE          reduce using rule 6 (instruccion -> imprimir .)
    FUNCTION        reduce using rule 6 (instruccion -> imprimir .)
    STRLEN          reduce using rule 6 (instruccion -> imprimir .)
    STRPOS          reduce using rule 6 (instruccion -> imprimir .)
    ARRAY_PUSH      reduce using rule 6 (instruccion -> imprimir .)
    ARRAY_POP       reduce using rule 6 (instruccion -> imprimir .)
    IN_ARRAY        reduce using rule 6 (instruccion -> imprimir .)
    COUNT           reduce using rule 6 (instruccion -> imprimir .)
    SORT            reduce using rule 6 (instruccion -> imprimir .)
    PHP_END         reduce using rule 6 (instruccion -> imprimir .)
    RBRACE          reduce using rule 6 (instruccion -> imprimir .)


state 8

    (7) instruccion -> solicitud_datos .

    PRINT           reduce using rule 7 (instruccion -> solicitud_datos .)
    PRINT_R         reduce using rule 7 (instruccion -> solicitud_datos .)
    ECHO            reduce using rule 7 (instruccion -> solicitud_datos .)
    READLINE        reduce using rule 7 (instruccion -> solicitud_datos .)
    VARIABLE        reduce using rule 7 (instruccion -> solicitud_datos .)
    WHILE           reduce using rule 7 (instruccion -> solicitud_datos .)
    IF              reduce using rule 7 (instruccion -> solicitud_datos .)
    RLLAVE          reduce using rule 7 (instruccion -> solicitud_datos .)
    ELSE            reduce using rule 7 (instruccion -> solicitud_datos .)
    FOR             reduce using rule 7 (instruccion -> solicitud_datos .)
    LBRACKET        reduce using rule 7 (instruccion -> solicitud_datos .)
    LBRACE          reduce using rule 7 (instruccion -> solicitud_datos .)
    FUNCTION        reduce using rule 7 (instruccion -> solicitud_datos .)
    STRLEN          reduce using rule 7 (instruccion -> solicitud_datos .)
    STRPOS          reduce using rule 7 (instruccion -> solicitud_datos .)
    ARRAY_PUSH      reduce using rule 7 (instruccion -> solicitud_datos .)
    ARRAY_POP       reduce using rule 7 (instruccion -> solicitud_datos .)
    IN_ARRAY        reduce using rule 7 (instruccion -> solicitud_datos .)
    COUNT           reduce using rule 7 (instruccion -> solicitud_datos .)
    SORT            reduce using rule 7 (instruccion -> solicitud_datos .)
    PHP_END         reduce using rule 7 (instruccion -> solicitud_datos .)
    RBRACE          reduce using rule 7 (instruccion -> solicitud_datos .)


state 9

    (8) instruccion -> input .

    PRINT           reduce using rule 8 (instruccion -> input .)
    PRINT_R         reduce using rule 8 (instruccion -> input .)
    ECHO            reduce using rule 8 (instruccion -> input .)
    READLINE        reduce using rule 8 (instruccion -> input .)
    VARIABLE        reduce using rule 8 (instruccion -> input .)
    WHILE           reduce using rule 8 (instruccion -> input .)
    IF              reduce using rule 8 (instruccion -> input .)
    RLLAVE          reduce using rule 8 (instruccion -> input .)
    ELSE            reduce using rule 8 (instruccion -> input .)
    FOR             reduce using rule 8 (instruccion -> input .)
    LBRACKET        reduce using rule 8 (instruccion -> input .)
    LBRACE          reduce using rule 8 (instruccion -> input .)
    FUNCTION        reduce using rule 8 (instruccion -> input .)
    STRLEN          reduce using rule 8 (instruccion -> input .)
    STRPOS          reduce using rule 8 (instruccion -> input .)
    ARRAY_PUSH      reduce using rule 8 (instruccion -> input .)
    ARRAY_POP       reduce using rule 8 (instruccion -> input .)
    IN_ARRAY        reduce using rule 8 (instruccion -> input .)
    COUNT           reduce using rule 8 (instruccion -> input .)
    SORT            reduce using rule 8 (instruccion -> input .)
    PHP_END         reduce using rule 8 (instruccion -> input .)
    RBRACE          reduce using rule 8 (instruccion -> input .)


state 10

    (9) instruccion -> indexacion .

    PRINT           reduce using rule 9 (instruccion -> indexacion .)
    PRINT_R         reduce using rule 9 (instruccion -> indexacion .)
    ECHO            reduce using rule 9 (instruccion -> indexacion .)
    READLINE        reduce using rule 9 (instruccion -> indexacion .)
    VARIABLE        reduce using rule 9 (instruccion -> indexacion .)
    WHILE           reduce using rule 9 (instruccion -> indexacion .)
    IF              reduce using rule 9 (instruccion -> indexacion .)
    RLLAVE          reduce using rule 9 (instruccion -> indexacion .)
    ELSE            reduce using rule 9 (instruccion -> indexacion .)
    FOR             reduce using rule 9 (instruccion -> indexacion .)
    LBRACKET        reduce using rule 9 (instruccion -> indexacion .)
    LBRACE          reduce using rule 9 (instruccion -> indexacion .)
    FUNCTION        reduce using rule 9 (instruccion -> indexacion .)
    STRLEN          reduce using rule 9 (instruccion -> indexacion .)
    STRPOS          reduce using rule 9 (instruccion -> indexacion .)
    ARRAY_PUSH      reduce using rule 9 (instruccion -> indexacion .)
    ARRAY_POP       reduce using rule 9 (instruccion -> indexacion .)
    IN_ARRAY        reduce using rule 9 (instruccion -> indexacion .)
    COUNT           reduce using rule 9 (instruccion -> indexacion .)
    SORT            reduce using rule 9 (instruccion -> indexacion .)
    PHP_END         reduce using rule 9 (instruccion -> indexacion .)
    RBRACE          reduce using rule 9 (instruccion -> indexacion .)


state 11

    (10) instruccion -> estructurasControl .

    PRINT           reduce using rule 10 (instruccion -> estructurasControl .)
    PRINT_R         reduce using rule 10 (instruccion -> estructurasControl .)
    ECHO            reduce using rule 10 (instruccion -> estructurasControl .)
    READLINE        reduce using rule 10 (instruccion -> estructurasControl .)
    VARIABLE        reduce using rule 10 (instruccion -> estructurasControl .)
    WHILE           reduce using rule 10 (instruccion -> estructurasControl .)
    IF              reduce using rule 10 (instruccion -> estructurasControl .)
    RLLAVE          reduce using rule 10 (instruccion -> estructurasControl .)
    ELSE            reduce using rule 10 (instruccion -> estructurasControl .)
    FOR             reduce using rule 10 (instruccion -> estructurasControl .)
    LBRACKET        reduce using rule 10 (instruccion -> estructurasControl .)
    LBRACE          reduce using rule 10 (instruccion -> estructurasControl .)
    FUNCTION        reduce using rule 10 (instruccion -> estructurasControl .)
    STRLEN          reduce using rule 10 (instruccion -> estructurasControl .)
    STRPOS          reduce using rule 10 (instruccion -> estructurasControl .)
    ARRAY_PUSH      reduce using rule 10 (instruccion -> estructurasControl .)
    ARRAY_POP       reduce using rule 10 (instruccion -> estructurasControl .)
    IN_ARRAY        reduce using rule 10 (instruccion -> estructurasControl .)
    COUNT           reduce using rule 10 (instruccion -> estructurasControl .)
    SORT            reduce using rule 10 (instruccion -> estructurasControl .)
    PHP_END         reduce using rule 10 (instruccion -> estructurasControl .)
    RBRACE          reduce using rule 10 (instruccion -> estructurasControl .)


state 12

    (11) instruccion -> asignacion .

    PRINT           reduce using rule 11 (instruccion -> asignacion .)
    PRINT_R         reduce using rule 11 (instruccion -> asignacion .)
    ECHO            reduce using rule 11 (instruccion -> asignacion .)
    READLINE        reduce using rule 11 (instruccion -> asignacion .)
    VARIABLE        reduce using rule 11 (instruccion -> asignacion .)
    WHILE           reduce using rule 11 (instruccion -> asignacion .)
    IF              reduce using rule 11 (instruccion -> asignacion .)
    RLLAVE          reduce using rule 11 (instruccion -> asignacion .)
    ELSE            reduce using rule 11 (instruccion -> asignacion .)
    FOR             reduce using rule 11 (instruccion -> asignacion .)
    LBRACKET        reduce using rule 11 (instruccion -> asignacion .)
    LBRACE          reduce using rule 11 (instruccion -> asignacion .)
    FUNCTION        reduce using rule 11 (instruccion -> asignacion .)
    STRLEN          reduce using rule 11 (instruccion -> asignacion .)
    STRPOS          reduce using rule 11 (instruccion -> asignacion .)
    ARRAY_PUSH      reduce using rule 11 (instruccion -> asignacion .)
    ARRAY_POP       reduce using rule 11 (instruccion -> asignacion .)
    IN_ARRAY        reduce using rule 11 (instruccion -> asignacion .)
    COUNT           reduce using rule 11 (instruccion -> asignacion .)
    SORT            reduce using rule 11 (instruccion -> asignacion .)
    PHP_END         reduce using rule 11 (instruccion -> asignacion .)
    RBRACE          reduce using rule 11 (instruccion -> asignacion .)


state 13

    (12) instruccion -> estructurasDatos .

    PRINT           reduce using rule 12 (instruccion -> estructurasDatos .)
    PRINT_R         reduce using rule 12 (instruccion -> estructurasDatos .)
    ECHO            reduce using rule 12 (instruccion -> estructurasDatos .)
    READLINE        reduce using rule 12 (instruccion -> estructurasDatos .)
    VARIABLE        reduce using rule 12 (instruccion -> estructurasDatos .)
    WHILE           reduce using rule 12 (instruccion -> estructurasDatos .)
    IF              reduce using rule 12 (instruccion -> estructurasDatos .)
    RLLAVE          reduce using rule 12 (instruccion -> estructurasDatos .)
    ELSE            reduce using rule 12 (instruccion -> estructurasDatos .)
    FOR             reduce using rule 12 (instruccion -> estructurasDatos .)
    LBRACKET        reduce using rule 12 (instruccion -> estructurasDatos .)
    LBRACE          reduce using rule 12 (instruccion -> estructurasDatos .)
    FUNCTION        reduce using rule 12 (instruccion -> estructurasDatos .)
    STRLEN          reduce using rule 12 (instruccion -> estructurasDatos .)
    STRPOS          reduce using rule 12 (instruccion -> estructurasDatos .)
    ARRAY_PUSH      reduce using rule 12 (instruccion -> estructurasDatos .)
    ARRAY_POP       reduce using rule 12 (instruccion -> estructurasDatos .)
    IN_ARRAY        reduce using rule 12 (instruccion -> estructurasDatos .)
    COUNT           reduce using rule 12 (instruccion -> estructurasDatos .)
    SORT            reduce using rule 12 (instruccion -> estructurasDatos .)
    PHP_END         reduce using rule 12 (instruccion -> estructurasDatos .)
    RBRACE          reduce using rule 12 (instruccion -> estructurasDatos .)


state 14

    (13) instruccion -> funciones .

    PRINT           reduce using rule 13 (instruccion -> funciones .)
    PRINT_R         reduce using rule 13 (instruccion -> funciones .)
    ECHO            reduce using rule 13 (instruccion -> funciones .)
    READLINE        reduce using rule 13 (instruccion -> funciones .)
    VARIABLE        reduce using rule 13 (instruccion -> funciones .)
    WHILE           reduce using rule 13 (instruccion -> funciones .)
    IF              reduce using rule 13 (instruccion -> funciones .)
    RLLAVE          reduce using rule 13 (instruccion -> funciones .)
    ELSE            reduce using rule 13 (instruccion -> funciones .)
    FOR             reduce using rule 13 (instruccion -> funciones .)
    LBRACKET        reduce using rule 13 (instruccion -> funciones .)
    LBRACE          reduce using rule 13 (instruccion -> funciones .)
    FUNCTION        reduce using rule 13 (instruccion -> funciones .)
    STRLEN          reduce using rule 13 (instruccion -> funciones .)
    STRPOS          reduce using rule 13 (instruccion -> funciones .)
    ARRAY_PUSH      reduce using rule 13 (instruccion -> funciones .)
    ARRAY_POP       reduce using rule 13 (instruccion -> funciones .)
    IN_ARRAY        reduce using rule 13 (instruccion -> funciones .)
    COUNT           reduce using rule 13 (instruccion -> funciones .)
    SORT            reduce using rule 13 (instruccion -> funciones .)
    PHP_END         reduce using rule 13 (instruccion -> funciones .)
    RBRACE          reduce using rule 13 (instruccion -> funciones .)


state 15

    (14) imprimir -> PRINT . LPAREN valor RPAREN PUNTOYCOMA
    (15) imprimir -> PRINT . LPAREN argumentos RPAREN PUNTOYCOMA

    LPAREN          shift and go to state 48


state 16

    (16) imprimir -> PRINT_R . LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> PRINT_R . LPAREN argumentos RPAREN PUNTOYCOMA

    LPAREN          shift and go to state 49


state 17

    (18) imprimir -> ECHO . valor PUNTOYCOMA
    (19) imprimir -> ECHO . concatenar PUNTOYCOMA
    (20) valor -> . NUMBER
    (21) valor -> . FLOAT
    (22) valor -> . STRING
    (23) valor -> . BOOLEAN
    (24) valor -> . VARIABLE
    (25) valor -> . ID
    (28) concatenar -> . valor
    (29) concatenar -> . valor PUNTO concatenar

    NUMBER          shift and go to state 52
    FLOAT           shift and go to state 53
    STRING          shift and go to state 54
    BOOLEAN         shift and go to state 55
    VARIABLE        shift and go to state 56
    ID              shift and go to state 57

    valor                          shift and go to state 50
    concatenar                     shift and go to state 51

state 18

    (30) solicitud_datos -> READLINE . LPAREN STRING RPAREN PUNTOYCOMA

    LPAREN          shift and go to state 58


state 19

    (31) input -> VARIABLE . IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (32) indexacion -> VARIABLE . LBRACKET valor RBRACKET
    (33) indexacion -> VARIABLE . LBRACKET valor RBRACKET PUNTOYCOMA
    (55) asignacion -> VARIABLE . IGUAL valor PUNTOYCOMA
    (56) asignacion -> VARIABLE . IGUAL valor
    (86) array -> VARIABLE . IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (87) array -> VARIABLE . IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (88) array -> VARIABLE . IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (89) array -> VARIABLE . IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (121) arrow_function -> VARIABLE . EQUAL FN LPAREN parameter_list RPAREN ARROW expression

    IGUAL           shift and go to state 59
    LBRACKET        shift and go to state 60
    EQUAL           shift and go to state 61


state 20

    (96) lista -> LBRACKET . RBRACKET
    (97) lista -> LBRACKET . elementos RBRACKET
    (90) elementos -> . elemento
    (91) elementos -> . elementos COMA elemento
    (92) elemento -> . valor
    (93) elemento -> . lista
    (94) elemento -> . clave_valor
    (20) valor -> . NUMBER
    (21) valor -> . FLOAT
    (22) valor -> . STRING
    (23) valor -> . BOOLEAN
    (24) valor -> . VARIABLE
    (25) valor -> . ID
    (96) lista -> . LBRACKET RBRACKET
    (97) lista -> . LBRACKET elementos RBRACKET
    (95) clave_valor -> . valor ARROW valor

    RBRACKET        shift and go to state 62
    NUMBER          shift and go to state 52
    FLOAT           shift and go to state 53
    STRING          shift and go to state 54
    BOOLEAN         shift and go to state 55
    VARIABLE        shift and go to state 56
    ID              shift and go to state 57
    LBRACKET        shift and go to state 20

    elementos                      shift and go to state 63
    elemento                       shift and go to state 64
    valor                          shift and go to state 65
    lista                          shift and go to state 66
    clave_valor                    shift and go to state 67

state 21

    (34) estructurasControl -> while .

    PRINT           reduce using rule 34 (estructurasControl -> while .)
    PRINT_R         reduce using rule 34 (estructurasControl -> while .)
    ECHO            reduce using rule 34 (estructurasControl -> while .)
    READLINE        reduce using rule 34 (estructurasControl -> while .)
    VARIABLE        reduce using rule 34 (estructurasControl -> while .)
    WHILE           reduce using rule 34 (estructurasControl -> while .)
    IF              reduce using rule 34 (estructurasControl -> while .)
    RLLAVE          reduce using rule 34 (estructurasControl -> while .)
    ELSE            reduce using rule 34 (estructurasControl -> while .)
    FOR             reduce using rule 34 (estructurasControl -> while .)
    LBRACKET        reduce using rule 34 (estructurasControl -> while .)
    LBRACE          reduce using rule 34 (estructurasControl -> while .)
    FUNCTION        reduce using rule 34 (estructurasControl -> while .)
    STRLEN          reduce using rule 34 (estructurasControl -> while .)
    STRPOS          reduce using rule 34 (estructurasControl -> while .)
    ARRAY_PUSH      reduce using rule 34 (estructurasControl -> while .)
    ARRAY_POP       reduce using rule 34 (estructurasControl -> while .)
    IN_ARRAY        reduce using rule 34 (estructurasControl -> while .)
    COUNT           reduce using rule 34 (estructurasControl -> while .)
    SORT            reduce using rule 34 (estructurasControl -> while .)
    PHP_END         reduce using rule 34 (estructurasControl -> while .)
    RBRACE          reduce using rule 34 (estructurasControl -> while .)


state 22

    (35) estructurasControl -> if .

    PRINT           reduce using rule 35 (estructurasControl -> if .)
    PRINT_R         reduce using rule 35 (estructurasControl -> if .)
    ECHO            reduce using rule 35 (estructurasControl -> if .)
    READLINE        reduce using rule 35 (estructurasControl -> if .)
    VARIABLE        reduce using rule 35 (estructurasControl -> if .)
    WHILE           reduce using rule 35 (estructurasControl -> if .)
    IF              reduce using rule 35 (estructurasControl -> if .)
    RLLAVE          reduce using rule 35 (estructurasControl -> if .)
    ELSE            reduce using rule 35 (estructurasControl -> if .)
    FOR             reduce using rule 35 (estructurasControl -> if .)
    LBRACKET        reduce using rule 35 (estructurasControl -> if .)
    LBRACE          reduce using rule 35 (estructurasControl -> if .)
    FUNCTION        reduce using rule 35 (estructurasControl -> if .)
    STRLEN          reduce using rule 35 (estructurasControl -> if .)
    STRPOS          reduce using rule 35 (estructurasControl -> if .)
    ARRAY_PUSH      reduce using rule 35 (estructurasControl -> if .)
    ARRAY_POP       reduce using rule 35 (estructurasControl -> if .)
    IN_ARRAY        reduce using rule 35 (estructurasControl -> if .)
    COUNT           reduce using rule 35 (estructurasControl -> if .)
    SORT            reduce using rule 35 (estructurasControl -> if .)
    PHP_END         reduce using rule 35 (estructurasControl -> if .)
    RBRACE          reduce using rule 35 (estructurasControl -> if .)


state 23

    (36) estructurasControl -> else .

    PRINT           reduce using rule 36 (estructurasControl -> else .)
    PRINT_R         reduce using rule 36 (estructurasControl -> else .)
    ECHO            reduce using rule 36 (estructurasControl -> else .)
    READLINE        reduce using rule 36 (estructurasControl -> else .)
    VARIABLE        reduce using rule 36 (estructurasControl -> else .)
    WHILE           reduce using rule 36 (estructurasControl -> else .)
    IF              reduce using rule 36 (estructurasControl -> else .)
    RLLAVE          reduce using rule 36 (estructurasControl -> else .)
    ELSE            reduce using rule 36 (estructurasControl -> else .)
    FOR             reduce using rule 36 (estructurasControl -> else .)
    LBRACKET        reduce using rule 36 (estructurasControl -> else .)
    LBRACE          reduce using rule 36 (estructurasControl -> else .)
    FUNCTION        reduce using rule 36 (estructurasControl -> else .)
    STRLEN          reduce using rule 36 (estructurasControl -> else .)
    STRPOS          reduce using rule 36 (estructurasControl -> else .)
    ARRAY_PUSH      reduce using rule 36 (estructurasControl -> else .)
    ARRAY_POP       reduce using rule 36 (estructurasControl -> else .)
    IN_ARRAY        reduce using rule 36 (estructurasControl -> else .)
    COUNT           reduce using rule 36 (estructurasControl -> else .)
    SORT            reduce using rule 36 (estructurasControl -> else .)
    PHP_END         reduce using rule 36 (estructurasControl -> else .)
    RBRACE          reduce using rule 36 (estructurasControl -> else .)


state 24

    (37) estructurasControl -> for_statement .

    PRINT           reduce using rule 37 (estructurasControl -> for_statement .)
    PRINT_R         reduce using rule 37 (estructurasControl -> for_statement .)
    ECHO            reduce using rule 37 (estructurasControl -> for_statement .)
    READLINE        reduce using rule 37 (estructurasControl -> for_statement .)
    VARIABLE        reduce using rule 37 (estructurasControl -> for_statement .)
    WHILE           reduce using rule 37 (estructurasControl -> for_statement .)
    IF              reduce using rule 37 (estructurasControl -> for_statement .)
    RLLAVE          reduce using rule 37 (estructurasControl -> for_statement .)
    ELSE            reduce using rule 37 (estructurasControl -> for_statement .)
    FOR             reduce using rule 37 (estructurasControl -> for_statement .)
    LBRACKET        reduce using rule 37 (estructurasControl -> for_statement .)
    LBRACE          reduce using rule 37 (estructurasControl -> for_statement .)
    FUNCTION        reduce using rule 37 (estructurasControl -> for_statement .)
    STRLEN          reduce using rule 37 (estructurasControl -> for_statement .)
    STRPOS          reduce using rule 37 (estructurasControl -> for_statement .)
    ARRAY_PUSH      reduce using rule 37 (estructurasControl -> for_statement .)
    ARRAY_POP       reduce using rule 37 (estructurasControl -> for_statement .)
    IN_ARRAY        reduce using rule 37 (estructurasControl -> for_statement .)
    COUNT           reduce using rule 37 (estructurasControl -> for_statement .)
    SORT            reduce using rule 37 (estructurasControl -> for_statement .)
    PHP_END         reduce using rule 37 (estructurasControl -> for_statement .)
    RBRACE          reduce using rule 37 (estructurasControl -> for_statement .)


state 25

    (83) estructurasDatos -> array .

    PRINT           reduce using rule 83 (estructurasDatos -> array .)
    PRINT_R         reduce using rule 83 (estructurasDatos -> array .)
    ECHO            reduce using rule 83 (estructurasDatos -> array .)
    READLINE        reduce using rule 83 (estructurasDatos -> array .)
    VARIABLE        reduce using rule 83 (estructurasDatos -> array .)
    WHILE           reduce using rule 83 (estructurasDatos -> array .)
    IF              reduce using rule 83 (estructurasDatos -> array .)
    RLLAVE          reduce using rule 83 (estructurasDatos -> array .)
    ELSE            reduce using rule 83 (estructurasDatos -> array .)
    FOR             reduce using rule 83 (estructurasDatos -> array .)
    LBRACKET        reduce using rule 83 (estructurasDatos -> array .)
    LBRACE          reduce using rule 83 (estructurasDatos -> array .)
    FUNCTION        reduce using rule 83 (estructurasDatos -> array .)
    STRLEN          reduce using rule 83 (estructurasDatos -> array .)
    STRPOS          reduce using rule 83 (estructurasDatos -> array .)
    ARRAY_PUSH      reduce using rule 83 (estructurasDatos -> array .)
    ARRAY_POP       reduce using rule 83 (estructurasDatos -> array .)
    IN_ARRAY        reduce using rule 83 (estructurasDatos -> array .)
    COUNT           reduce using rule 83 (estructurasDatos -> array .)
    SORT            reduce using rule 83 (estructurasDatos -> array .)
    PHP_END         reduce using rule 83 (estructurasDatos -> array .)
    RBRACE          reduce using rule 83 (estructurasDatos -> array .)


state 26

    (84) estructurasDatos -> lista .

    PRINT           reduce using rule 84 (estructurasDatos -> lista .)
    PRINT_R         reduce using rule 84 (estructurasDatos -> lista .)
    ECHO            reduce using rule 84 (estructurasDatos -> lista .)
    READLINE        reduce using rule 84 (estructurasDatos -> lista .)
    VARIABLE        reduce using rule 84 (estructurasDatos -> lista .)
    WHILE           reduce using rule 84 (estructurasDatos -> lista .)
    IF              reduce using rule 84 (estructurasDatos -> lista .)
    RLLAVE          reduce using rule 84 (estructurasDatos -> lista .)
    ELSE            reduce using rule 84 (estructurasDatos -> lista .)
    FOR             reduce using rule 84 (estructurasDatos -> lista .)
    LBRACKET        reduce using rule 84 (estructurasDatos -> lista .)
    LBRACE          reduce using rule 84 (estructurasDatos -> lista .)
    FUNCTION        reduce using rule 84 (estructurasDatos -> lista .)
    STRLEN          reduce using rule 84 (estructurasDatos -> lista .)
    STRPOS          reduce using rule 84 (estructurasDatos -> lista .)
    ARRAY_PUSH      reduce using rule 84 (estructurasDatos -> lista .)
    ARRAY_POP       reduce using rule 84 (estructurasDatos -> lista .)
    IN_ARRAY        reduce using rule 84 (estructurasDatos -> lista .)
    COUNT           reduce using rule 84 (estructurasDatos -> lista .)
    SORT            reduce using rule 84 (estructurasDatos -> lista .)
    PHP_END         reduce using rule 84 (estructurasDatos -> lista .)
    RBRACE          reduce using rule 84 (estructurasDatos -> lista .)


state 27

    (85) estructurasDatos -> diccionario .

    PRINT           reduce using rule 85 (estructurasDatos -> diccionario .)
    PRINT_R         reduce using rule 85 (estructurasDatos -> diccionario .)
    ECHO            reduce using rule 85 (estructurasDatos -> diccionario .)
    READLINE        reduce using rule 85 (estructurasDatos -> diccionario .)
    VARIABLE        reduce using rule 85 (estructurasDatos -> diccionario .)
    WHILE           reduce using rule 85 (estructurasDatos -> diccionario .)
    IF              reduce using rule 85 (estructurasDatos -> diccionario .)
    RLLAVE          reduce using rule 85 (estructurasDatos -> diccionario .)
    ELSE            reduce using rule 85 (estructurasDatos -> diccionario .)
    FOR             reduce using rule 85 (estructurasDatos -> diccionario .)
    LBRACKET        reduce using rule 85 (estructurasDatos -> diccionario .)
    LBRACE          reduce using rule 85 (estructurasDatos -> diccionario .)
    FUNCTION        reduce using rule 85 (estructurasDatos -> diccionario .)
    STRLEN          reduce using rule 85 (estructurasDatos -> diccionario .)
    STRPOS          reduce using rule 85 (estructurasDatos -> diccionario .)
    ARRAY_PUSH      reduce using rule 85 (estructurasDatos -> diccionario .)
    ARRAY_POP       reduce using rule 85 (estructurasDatos -> diccionario .)
    IN_ARRAY        reduce using rule 85 (estructurasDatos -> diccionario .)
    COUNT           reduce using rule 85 (estructurasDatos -> diccionario .)
    SORT            reduce using rule 85 (estructurasDatos -> diccionario .)
    PHP_END         reduce using rule 85 (estructurasDatos -> diccionario .)
    RBRACE          reduce using rule 85 (estructurasDatos -> diccionario .)


state 28

    (102) funciones -> funcioninbuilt .

    PRINT           reduce using rule 102 (funciones -> funcioninbuilt .)
    PRINT_R         reduce using rule 102 (funciones -> funcioninbuilt .)
    ECHO            reduce using rule 102 (funciones -> funcioninbuilt .)
    READLINE        reduce using rule 102 (funciones -> funcioninbuilt .)
    VARIABLE        reduce using rule 102 (funciones -> funcioninbuilt .)
    WHILE           reduce using rule 102 (funciones -> funcioninbuilt .)
    IF              reduce using rule 102 (funciones -> funcioninbuilt .)
    RLLAVE          reduce using rule 102 (funciones -> funcioninbuilt .)
    ELSE            reduce using rule 102 (funciones -> funcioninbuilt .)
    FOR             reduce using rule 102 (funciones -> funcioninbuilt .)
    LBRACKET        reduce using rule 102 (funciones -> funcioninbuilt .)
    LBRACE          reduce using rule 102 (funciones -> funcioninbuilt .)
    FUNCTION        reduce using rule 102 (funciones -> funcioninbuilt .)
    STRLEN          reduce using rule 102 (funciones -> funcioninbuilt .)
    STRPOS          reduce using rule 102 (funciones -> funcioninbuilt .)
    ARRAY_PUSH      reduce using rule 102 (funciones -> funcioninbuilt .)
    ARRAY_POP       reduce using rule 102 (funciones -> funcioninbuilt .)
    IN_ARRAY        reduce using rule 102 (funciones -> funcioninbuilt .)
    COUNT           reduce using rule 102 (funciones -> funcioninbuilt .)
    SORT            reduce using rule 102 (funciones -> funcioninbuilt .)
    PHP_END         reduce using rule 102 (funciones -> funcioninbuilt .)
    RBRACE          reduce using rule 102 (funciones -> funcioninbuilt .)


state 29

    (103) funciones -> funcion_anonima .

    PRINT           reduce using rule 103 (funciones -> funcion_anonima .)
    PRINT_R         reduce using rule 103 (funciones -> funcion_anonima .)
    ECHO            reduce using rule 103 (funciones -> funcion_anonima .)
    READLINE        reduce using rule 103 (funciones -> funcion_anonima .)
    VARIABLE        reduce using rule 103 (funciones -> funcion_anonima .)
    WHILE           reduce using rule 103 (funciones -> funcion_anonima .)
    IF              reduce using rule 103 (funciones -> funcion_anonima .)
    RLLAVE          reduce using rule 103 (funciones -> funcion_anonima .)
    ELSE            reduce using rule 103 (funciones -> funcion_anonima .)
    FOR             reduce using rule 103 (funciones -> funcion_anonima .)
    LBRACKET        reduce using rule 103 (funciones -> funcion_anonima .)
    LBRACE          reduce using rule 103 (funciones -> funcion_anonima .)
    FUNCTION        reduce using rule 103 (funciones -> funcion_anonima .)
    STRLEN          reduce using rule 103 (funciones -> funcion_anonima .)
    STRPOS          reduce using rule 103 (funciones -> funcion_anonima .)
    ARRAY_PUSH      reduce using rule 103 (funciones -> funcion_anonima .)
    ARRAY_POP       reduce using rule 103 (funciones -> funcion_anonima .)
    IN_ARRAY        reduce using rule 103 (funciones -> funcion_anonima .)
    COUNT           reduce using rule 103 (funciones -> funcion_anonima .)
    SORT            reduce using rule 103 (funciones -> funcion_anonima .)
    PHP_END         reduce using rule 103 (funciones -> funcion_anonima .)
    RBRACE          reduce using rule 103 (funciones -> funcion_anonima .)


state 30

    (104) funciones -> arrow_function .

    PRINT           reduce using rule 104 (funciones -> arrow_function .)
    PRINT_R         reduce using rule 104 (funciones -> arrow_function .)
    ECHO            reduce using rule 104 (funciones -> arrow_function .)
    READLINE        reduce using rule 104 (funciones -> arrow_function .)
    VARIABLE        reduce using rule 104 (funciones -> arrow_function .)
    WHILE           reduce using rule 104 (funciones -> arrow_function .)
    IF              reduce using rule 104 (funciones -> arrow_function .)
    RLLAVE          reduce using rule 104 (funciones -> arrow_function .)
    ELSE            reduce using rule 104 (funciones -> arrow_function .)
    FOR             reduce using rule 104 (funciones -> arrow_function .)
    LBRACKET        reduce using rule 104 (funciones -> arrow_function .)
    LBRACE          reduce using rule 104 (funciones -> arrow_function .)
    FUNCTION        reduce using rule 104 (funciones -> arrow_function .)
    STRLEN          reduce using rule 104 (funciones -> arrow_function .)
    STRPOS          reduce using rule 104 (funciones -> arrow_function .)
    ARRAY_PUSH      reduce using rule 104 (funciones -> arrow_function .)
    ARRAY_POP       reduce using rule 104 (funciones -> arrow_function .)
    IN_ARRAY        reduce using rule 104 (funciones -> arrow_function .)
    COUNT           reduce using rule 104 (funciones -> arrow_function .)
    SORT            reduce using rule 104 (funciones -> arrow_function .)
    PHP_END         reduce using rule 104 (funciones -> arrow_function .)
    RBRACE          reduce using rule 104 (funciones -> arrow_function .)


state 31

    (67) while -> WHILE . LBRACE condicion RBRACE bloque

    LBRACE          shift and go to state 68


state 32

    (98) diccionario -> LBRACE . pares RBRACE
    (99) pares -> . par
    (100) pares -> . pares COMA par
    (101) par -> . STRING ARROW valor

    STRING          shift and go to state 71

    pares                          shift and go to state 69
    par                            shift and go to state 70

state 33

    (38) if -> IF . LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (39) if -> IF . LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE

    LPAREN          shift and go to state 72


state 34

    (65) else -> RLLAVE . ELSE LLLAVE instrucciones RLLAVE

    ELSE            shift and go to state 73


state 35

    (66) else -> ELSE . LLLAVE instrucciones RLLAVE

    LLLAVE          shift and go to state 74


state 36

    (74) for_statement -> FOR . LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE

    LPAREN          shift and go to state 75


state 37

    (105) funcioninbuilt -> funcionesdefin . LPAREN operaciones RPAREN
    (106) funcioninbuilt -> funcionesdefin . LPAREN RPAREN

    LPAREN          shift and go to state 76


state 38

    (118) funcion_anonima -> FUNCTION . LPAREN parametros RPAREN LBRACE instrucciones RBRACE

    LPAREN          shift and go to state 77


state 39

    (107) funcionesdefin -> STRLEN .

    LPAREN          reduce using rule 107 (funcionesdefin -> STRLEN .)


state 40

    (108) funcionesdefin -> STRPOS .

    LPAREN          reduce using rule 108 (funcionesdefin -> STRPOS .)


state 41

    (109) funcionesdefin -> ARRAY_PUSH .

    LPAREN          reduce using rule 109 (funcionesdefin -> ARRAY_PUSH .)


state 42

    (110) funcionesdefin -> ARRAY_POP .

    LPAREN          reduce using rule 110 (funcionesdefin -> ARRAY_POP .)


state 43

    (111) funcionesdefin -> IN_ARRAY .

    LPAREN          reduce using rule 111 (funcionesdefin -> IN_ARRAY .)


state 44

    (112) funcionesdefin -> COUNT .

    LPAREN          reduce using rule 112 (funcionesdefin -> COUNT .)


state 45

    (113) funcionesdefin -> SORT .

    LPAREN          reduce using rule 113 (funcionesdefin -> SORT .)


state 46

    (1) padre -> PHP_START cuerpo PHP_END .

    $end            reduce using rule 1 (padre -> PHP_START cuerpo PHP_END .)


state 47

    (5) instrucciones -> instrucciones instruccion .

    PRINT           reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    PRINT_R         reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    ECHO            reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    READLINE        reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    VARIABLE        reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    RLLAVE          reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    ELSE            reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    FOR             reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    LBRACKET        reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    LBRACE          reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    FUNCTION        reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    STRLEN          reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    STRPOS          reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    ARRAY_PUSH      reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    ARRAY_POP       reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    IN_ARRAY        reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    COUNT           reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    SORT            reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    PHP_END         reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    RBRACE          reduce using rule 5 (instrucciones -> instrucciones instruccion .)


state 48

    (14) imprimir -> PRINT LPAREN . valor RPAREN PUNTOYCOMA
    (15) imprimir -> PRINT LPAREN . argumentos RPAREN PUNTOYCOMA
    (20) valor -> . NUMBER
    (21) valor -> . FLOAT
    (22) valor -> . STRING
    (23) valor -> . BOOLEAN
    (24) valor -> . VARIABLE
    (25) valor -> . ID
    (26) argumentos -> . valor
    (27) argumentos -> . argumentos COMA valor

    NUMBER          shift and go to state 52
    FLOAT           shift and go to state 53
    STRING          shift and go to state 54
    BOOLEAN         shift and go to state 55
    VARIABLE        shift and go to state 56
    ID              shift and go to state 57

    valor                          shift and go to state 78
    argumentos                     shift and go to state 79

state 49

    (16) imprimir -> PRINT_R LPAREN . valor RPAREN PUNTOYCOMA
    (17) imprimir -> PRINT_R LPAREN . argumentos RPAREN PUNTOYCOMA
    (20) valor -> . NUMBER
    (21) valor -> . FLOAT
    (22) valor -> . STRING
    (23) valor -> . BOOLEAN
    (24) valor -> . VARIABLE
    (25) valor -> . ID
    (26) argumentos -> . valor
    (27) argumentos -> . argumentos COMA valor

    NUMBER          shift and go to state 52
    FLOAT           shift and go to state 53
    STRING          shift and go to state 54
    BOOLEAN         shift and go to state 55
    VARIABLE        shift and go to state 56
    ID              shift and go to state 57

    valor                          shift and go to state 80
    argumentos                     shift and go to state 81

state 50

    (18) imprimir -> ECHO valor . PUNTOYCOMA
    (28) concatenar -> valor .
    (29) concatenar -> valor . PUNTO concatenar

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 82
    PUNTO           shift and go to state 83

  ! PUNTOYCOMA      [ reduce using rule 28 (concatenar -> valor .) ]


state 51

    (19) imprimir -> ECHO concatenar . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 84


state 52

    (20) valor -> NUMBER .

    PUNTOYCOMA      reduce using rule 20 (valor -> NUMBER .)
    PUNTO           reduce using rule 20 (valor -> NUMBER .)
    ARROW           reduce using rule 20 (valor -> NUMBER .)
    RBRACKET        reduce using rule 20 (valor -> NUMBER .)
    COMA            reduce using rule 20 (valor -> NUMBER .)
    RPAREN          reduce using rule 20 (valor -> NUMBER .)
    PRINT           reduce using rule 20 (valor -> NUMBER .)
    PRINT_R         reduce using rule 20 (valor -> NUMBER .)
    ECHO            reduce using rule 20 (valor -> NUMBER .)
    READLINE        reduce using rule 20 (valor -> NUMBER .)
    VARIABLE        reduce using rule 20 (valor -> NUMBER .)
    WHILE           reduce using rule 20 (valor -> NUMBER .)
    IF              reduce using rule 20 (valor -> NUMBER .)
    RLLAVE          reduce using rule 20 (valor -> NUMBER .)
    ELSE            reduce using rule 20 (valor -> NUMBER .)
    FOR             reduce using rule 20 (valor -> NUMBER .)
    LBRACKET        reduce using rule 20 (valor -> NUMBER .)
    LBRACE          reduce using rule 20 (valor -> NUMBER .)
    FUNCTION        reduce using rule 20 (valor -> NUMBER .)
    STRLEN          reduce using rule 20 (valor -> NUMBER .)
    STRPOS          reduce using rule 20 (valor -> NUMBER .)
    ARRAY_PUSH      reduce using rule 20 (valor -> NUMBER .)
    ARRAY_POP       reduce using rule 20 (valor -> NUMBER .)
    IN_ARRAY        reduce using rule 20 (valor -> NUMBER .)
    COUNT           reduce using rule 20 (valor -> NUMBER .)
    SORT            reduce using rule 20 (valor -> NUMBER .)
    PHP_END         reduce using rule 20 (valor -> NUMBER .)
    RBRACE          reduce using rule 20 (valor -> NUMBER .)
    EQUAL           reduce using rule 20 (valor -> NUMBER .)
    NOT_IDENTICAL   reduce using rule 20 (valor -> NUMBER .)
    NOT_EQUAL       reduce using rule 20 (valor -> NUMBER .)
    IGUAL           reduce using rule 20 (valor -> NUMBER .)
    IDENTICAL       reduce using rule 20 (valor -> NUMBER .)
    AND_LOGICAL     reduce using rule 20 (valor -> NUMBER .)
    OR_LOGICAL      reduce using rule 20 (valor -> NUMBER .)


state 53

    (21) valor -> FLOAT .

    PUNTOYCOMA      reduce using rule 21 (valor -> FLOAT .)
    PUNTO           reduce using rule 21 (valor -> FLOAT .)
    ARROW           reduce using rule 21 (valor -> FLOAT .)
    RBRACKET        reduce using rule 21 (valor -> FLOAT .)
    COMA            reduce using rule 21 (valor -> FLOAT .)
    RPAREN          reduce using rule 21 (valor -> FLOAT .)
    PRINT           reduce using rule 21 (valor -> FLOAT .)
    PRINT_R         reduce using rule 21 (valor -> FLOAT .)
    ECHO            reduce using rule 21 (valor -> FLOAT .)
    READLINE        reduce using rule 21 (valor -> FLOAT .)
    VARIABLE        reduce using rule 21 (valor -> FLOAT .)
    WHILE           reduce using rule 21 (valor -> FLOAT .)
    IF              reduce using rule 21 (valor -> FLOAT .)
    RLLAVE          reduce using rule 21 (valor -> FLOAT .)
    ELSE            reduce using rule 21 (valor -> FLOAT .)
    FOR             reduce using rule 21 (valor -> FLOAT .)
    LBRACKET        reduce using rule 21 (valor -> FLOAT .)
    LBRACE          reduce using rule 21 (valor -> FLOAT .)
    FUNCTION        reduce using rule 21 (valor -> FLOAT .)
    STRLEN          reduce using rule 21 (valor -> FLOAT .)
    STRPOS          reduce using rule 21 (valor -> FLOAT .)
    ARRAY_PUSH      reduce using rule 21 (valor -> FLOAT .)
    ARRAY_POP       reduce using rule 21 (valor -> FLOAT .)
    IN_ARRAY        reduce using rule 21 (valor -> FLOAT .)
    COUNT           reduce using rule 21 (valor -> FLOAT .)
    SORT            reduce using rule 21 (valor -> FLOAT .)
    PHP_END         reduce using rule 21 (valor -> FLOAT .)
    RBRACE          reduce using rule 21 (valor -> FLOAT .)
    EQUAL           reduce using rule 21 (valor -> FLOAT .)
    NOT_IDENTICAL   reduce using rule 21 (valor -> FLOAT .)
    NOT_EQUAL       reduce using rule 21 (valor -> FLOAT .)
    IGUAL           reduce using rule 21 (valor -> FLOAT .)
    IDENTICAL       reduce using rule 21 (valor -> FLOAT .)
    AND_LOGICAL     reduce using rule 21 (valor -> FLOAT .)
    OR_LOGICAL      reduce using rule 21 (valor -> FLOAT .)


state 54

    (22) valor -> STRING .

    PUNTOYCOMA      reduce using rule 22 (valor -> STRING .)
    PUNTO           reduce using rule 22 (valor -> STRING .)
    ARROW           reduce using rule 22 (valor -> STRING .)
    RBRACKET        reduce using rule 22 (valor -> STRING .)
    COMA            reduce using rule 22 (valor -> STRING .)
    RPAREN          reduce using rule 22 (valor -> STRING .)
    PRINT           reduce using rule 22 (valor -> STRING .)
    PRINT_R         reduce using rule 22 (valor -> STRING .)
    ECHO            reduce using rule 22 (valor -> STRING .)
    READLINE        reduce using rule 22 (valor -> STRING .)
    VARIABLE        reduce using rule 22 (valor -> STRING .)
    WHILE           reduce using rule 22 (valor -> STRING .)
    IF              reduce using rule 22 (valor -> STRING .)
    RLLAVE          reduce using rule 22 (valor -> STRING .)
    ELSE            reduce using rule 22 (valor -> STRING .)
    FOR             reduce using rule 22 (valor -> STRING .)
    LBRACKET        reduce using rule 22 (valor -> STRING .)
    LBRACE          reduce using rule 22 (valor -> STRING .)
    FUNCTION        reduce using rule 22 (valor -> STRING .)
    STRLEN          reduce using rule 22 (valor -> STRING .)
    STRPOS          reduce using rule 22 (valor -> STRING .)
    ARRAY_PUSH      reduce using rule 22 (valor -> STRING .)
    ARRAY_POP       reduce using rule 22 (valor -> STRING .)
    IN_ARRAY        reduce using rule 22 (valor -> STRING .)
    COUNT           reduce using rule 22 (valor -> STRING .)
    SORT            reduce using rule 22 (valor -> STRING .)
    PHP_END         reduce using rule 22 (valor -> STRING .)
    RBRACE          reduce using rule 22 (valor -> STRING .)
    EQUAL           reduce using rule 22 (valor -> STRING .)
    NOT_IDENTICAL   reduce using rule 22 (valor -> STRING .)
    NOT_EQUAL       reduce using rule 22 (valor -> STRING .)
    IGUAL           reduce using rule 22 (valor -> STRING .)
    IDENTICAL       reduce using rule 22 (valor -> STRING .)
    AND_LOGICAL     reduce using rule 22 (valor -> STRING .)
    OR_LOGICAL      reduce using rule 22 (valor -> STRING .)


state 55

    (23) valor -> BOOLEAN .

    PUNTOYCOMA      reduce using rule 23 (valor -> BOOLEAN .)
    PUNTO           reduce using rule 23 (valor -> BOOLEAN .)
    ARROW           reduce using rule 23 (valor -> BOOLEAN .)
    RBRACKET        reduce using rule 23 (valor -> BOOLEAN .)
    COMA            reduce using rule 23 (valor -> BOOLEAN .)
    RPAREN          reduce using rule 23 (valor -> BOOLEAN .)
    PRINT           reduce using rule 23 (valor -> BOOLEAN .)
    PRINT_R         reduce using rule 23 (valor -> BOOLEAN .)
    ECHO            reduce using rule 23 (valor -> BOOLEAN .)
    READLINE        reduce using rule 23 (valor -> BOOLEAN .)
    VARIABLE        reduce using rule 23 (valor -> BOOLEAN .)
    WHILE           reduce using rule 23 (valor -> BOOLEAN .)
    IF              reduce using rule 23 (valor -> BOOLEAN .)
    RLLAVE          reduce using rule 23 (valor -> BOOLEAN .)
    ELSE            reduce using rule 23 (valor -> BOOLEAN .)
    FOR             reduce using rule 23 (valor -> BOOLEAN .)
    LBRACKET        reduce using rule 23 (valor -> BOOLEAN .)
    LBRACE          reduce using rule 23 (valor -> BOOLEAN .)
    FUNCTION        reduce using rule 23 (valor -> BOOLEAN .)
    STRLEN          reduce using rule 23 (valor -> BOOLEAN .)
    STRPOS          reduce using rule 23 (valor -> BOOLEAN .)
    ARRAY_PUSH      reduce using rule 23 (valor -> BOOLEAN .)
    ARRAY_POP       reduce using rule 23 (valor -> BOOLEAN .)
    IN_ARRAY        reduce using rule 23 (valor -> BOOLEAN .)
    COUNT           reduce using rule 23 (valor -> BOOLEAN .)
    SORT            reduce using rule 23 (valor -> BOOLEAN .)
    PHP_END         reduce using rule 23 (valor -> BOOLEAN .)
    RBRACE          reduce using rule 23 (valor -> BOOLEAN .)
    EQUAL           reduce using rule 23 (valor -> BOOLEAN .)
    NOT_IDENTICAL   reduce using rule 23 (valor -> BOOLEAN .)
    NOT_EQUAL       reduce using rule 23 (valor -> BOOLEAN .)
    IGUAL           reduce using rule 23 (valor -> BOOLEAN .)
    IDENTICAL       reduce using rule 23 (valor -> BOOLEAN .)
    AND_LOGICAL     reduce using rule 23 (valor -> BOOLEAN .)
    OR_LOGICAL      reduce using rule 23 (valor -> BOOLEAN .)


state 56

    (24) valor -> VARIABLE .

    PUNTOYCOMA      reduce using rule 24 (valor -> VARIABLE .)
    PUNTO           reduce using rule 24 (valor -> VARIABLE .)
    ARROW           reduce using rule 24 (valor -> VARIABLE .)
    RBRACKET        reduce using rule 24 (valor -> VARIABLE .)
    COMA            reduce using rule 24 (valor -> VARIABLE .)
    RPAREN          reduce using rule 24 (valor -> VARIABLE .)
    PRINT           reduce using rule 24 (valor -> VARIABLE .)
    PRINT_R         reduce using rule 24 (valor -> VARIABLE .)
    ECHO            reduce using rule 24 (valor -> VARIABLE .)
    READLINE        reduce using rule 24 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 24 (valor -> VARIABLE .)
    WHILE           reduce using rule 24 (valor -> VARIABLE .)
    IF              reduce using rule 24 (valor -> VARIABLE .)
    RLLAVE          reduce using rule 24 (valor -> VARIABLE .)
    ELSE            reduce using rule 24 (valor -> VARIABLE .)
    FOR             reduce using rule 24 (valor -> VARIABLE .)
    LBRACKET        reduce using rule 24 (valor -> VARIABLE .)
    LBRACE          reduce using rule 24 (valor -> VARIABLE .)
    FUNCTION        reduce using rule 24 (valor -> VARIABLE .)
    STRLEN          reduce using rule 24 (valor -> VARIABLE .)
    STRPOS          reduce using rule 24 (valor -> VARIABLE .)
    ARRAY_PUSH      reduce using rule 24 (valor -> VARIABLE .)
    ARRAY_POP       reduce using rule 24 (valor -> VARIABLE .)
    IN_ARRAY        reduce using rule 24 (valor -> VARIABLE .)
    COUNT           reduce using rule 24 (valor -> VARIABLE .)
    SORT            reduce using rule 24 (valor -> VARIABLE .)
    PHP_END         reduce using rule 24 (valor -> VARIABLE .)
    RBRACE          reduce using rule 24 (valor -> VARIABLE .)
    EQUAL           reduce using rule 24 (valor -> VARIABLE .)
    NOT_IDENTICAL   reduce using rule 24 (valor -> VARIABLE .)
    NOT_EQUAL       reduce using rule 24 (valor -> VARIABLE .)
    IGUAL           reduce using rule 24 (valor -> VARIABLE .)
    IDENTICAL       reduce using rule 24 (valor -> VARIABLE .)
    AND_LOGICAL     reduce using rule 24 (valor -> VARIABLE .)
    OR_LOGICAL      reduce using rule 24 (valor -> VARIABLE .)


state 57

    (25) valor -> ID .

    PUNTOYCOMA      reduce using rule 25 (valor -> ID .)
    PUNTO           reduce using rule 25 (valor -> ID .)
    ARROW           reduce using rule 25 (valor -> ID .)
    RBRACKET        reduce using rule 25 (valor -> ID .)
    COMA            reduce using rule 25 (valor -> ID .)
    RPAREN          reduce using rule 25 (valor -> ID .)
    PRINT           reduce using rule 25 (valor -> ID .)
    PRINT_R         reduce using rule 25 (valor -> ID .)
    ECHO            reduce using rule 25 (valor -> ID .)
    READLINE        reduce using rule 25 (valor -> ID .)
    VARIABLE        reduce using rule 25 (valor -> ID .)
    WHILE           reduce using rule 25 (valor -> ID .)
    IF              reduce using rule 25 (valor -> ID .)
    RLLAVE          reduce using rule 25 (valor -> ID .)
    ELSE            reduce using rule 25 (valor -> ID .)
    FOR             reduce using rule 25 (valor -> ID .)
    LBRACKET        reduce using rule 25 (valor -> ID .)
    LBRACE          reduce using rule 25 (valor -> ID .)
    FUNCTION        reduce using rule 25 (valor -> ID .)
    STRLEN          reduce using rule 25 (valor -> ID .)
    STRPOS          reduce using rule 25 (valor -> ID .)
    ARRAY_PUSH      reduce using rule 25 (valor -> ID .)
    ARRAY_POP       reduce using rule 25 (valor -> ID .)
    IN_ARRAY        reduce using rule 25 (valor -> ID .)
    COUNT           reduce using rule 25 (valor -> ID .)
    SORT            reduce using rule 25 (valor -> ID .)
    PHP_END         reduce using rule 25 (valor -> ID .)
    RBRACE          reduce using rule 25 (valor -> ID .)
    EQUAL           reduce using rule 25 (valor -> ID .)
    NOT_IDENTICAL   reduce using rule 25 (valor -> ID .)
    NOT_EQUAL       reduce using rule 25 (valor -> ID .)
    IGUAL           reduce using rule 25 (valor -> ID .)
    IDENTICAL       reduce using rule 25 (valor -> ID .)
    AND_LOGICAL     reduce using rule 25 (valor -> ID .)
    OR_LOGICAL      reduce using rule 25 (valor -> ID .)


state 58

    (30) solicitud_datos -> READLINE LPAREN . STRING RPAREN PUNTOYCOMA

    STRING          shift and go to state 85


state 59

    (31) input -> VARIABLE IGUAL . FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (55) asignacion -> VARIABLE IGUAL . valor PUNTOYCOMA
    (56) asignacion -> VARIABLE IGUAL . valor
    (86) array -> VARIABLE IGUAL . ARRAY LPAREN RPAREN PUNTOYCOMA
    (87) array -> VARIABLE IGUAL . ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (88) array -> VARIABLE IGUAL . LBRACKET RBRACKET PUNTOYCOMA
    (89) array -> VARIABLE IGUAL . LBRACKET elementos RBRACKET PUNTOYCOMA
    (20) valor -> . NUMBER
    (21) valor -> . FLOAT
    (22) valor -> . STRING
    (23) valor -> . BOOLEAN
    (24) valor -> . VARIABLE
    (25) valor -> . ID

    FGETS           shift and go to state 86
    ARRAY           shift and go to state 88
    LBRACKET        shift and go to state 89
    NUMBER          shift and go to state 52
    FLOAT           shift and go to state 53
    STRING          shift and go to state 54
    BOOLEAN         shift and go to state 55
    VARIABLE        shift and go to state 56
    ID              shift and go to state 57

    valor                          shift and go to state 87

state 60

    (32) indexacion -> VARIABLE LBRACKET . valor RBRACKET
    (33) indexacion -> VARIABLE LBRACKET . valor RBRACKET PUNTOYCOMA
    (20) valor -> . NUMBER
    (21) valor -> . FLOAT
    (22) valor -> . STRING
    (23) valor -> . BOOLEAN
    (24) valor -> . VARIABLE
    (25) valor -> . ID

    NUMBER          shift and go to state 52
    FLOAT           shift and go to state 53
    STRING          shift and go to state 54
    BOOLEAN         shift and go to state 55
    VARIABLE        shift and go to state 56
    ID              shift and go to state 57

    valor                          shift and go to state 90

state 61

    (121) arrow_function -> VARIABLE EQUAL . FN LPAREN parameter_list RPAREN ARROW expression

    FN              shift and go to state 91


state 62

    (96) lista -> LBRACKET RBRACKET .

    PRINT           reduce using rule 96 (lista -> LBRACKET RBRACKET .)
    PRINT_R         reduce using rule 96 (lista -> LBRACKET RBRACKET .)
    ECHO            reduce using rule 96 (lista -> LBRACKET RBRACKET .)
    READLINE        reduce using rule 96 (lista -> LBRACKET RBRACKET .)
    VARIABLE        reduce using rule 96 (lista -> LBRACKET RBRACKET .)
    WHILE           reduce using rule 96 (lista -> LBRACKET RBRACKET .)
    IF              reduce using rule 96 (lista -> LBRACKET RBRACKET .)
    RLLAVE          reduce using rule 96 (lista -> LBRACKET RBRACKET .)
    ELSE            reduce using rule 96 (lista -> LBRACKET RBRACKET .)
    FOR             reduce using rule 96 (lista -> LBRACKET RBRACKET .)
    LBRACKET        reduce using rule 96 (lista -> LBRACKET RBRACKET .)
    LBRACE          reduce using rule 96 (lista -> LBRACKET RBRACKET .)
    FUNCTION        reduce using rule 96 (lista -> LBRACKET RBRACKET .)
    STRLEN          reduce using rule 96 (lista -> LBRACKET RBRACKET .)
    STRPOS          reduce using rule 96 (lista -> LBRACKET RBRACKET .)
    ARRAY_PUSH      reduce using rule 96 (lista -> LBRACKET RBRACKET .)
    ARRAY_POP       reduce using rule 96 (lista -> LBRACKET RBRACKET .)
    IN_ARRAY        reduce using rule 96 (lista -> LBRACKET RBRACKET .)
    COUNT           reduce using rule 96 (lista -> LBRACKET RBRACKET .)
    SORT            reduce using rule 96 (lista -> LBRACKET RBRACKET .)
    PHP_END         reduce using rule 96 (lista -> LBRACKET RBRACKET .)
    RBRACKET        reduce using rule 96 (lista -> LBRACKET RBRACKET .)
    COMA            reduce using rule 96 (lista -> LBRACKET RBRACKET .)
    RPAREN          reduce using rule 96 (lista -> LBRACKET RBRACKET .)
    RBRACE          reduce using rule 96 (lista -> LBRACKET RBRACKET .)


state 63

    (97) lista -> LBRACKET elementos . RBRACKET
    (91) elementos -> elementos . COMA elemento

    RBRACKET        shift and go to state 92
    COMA            shift and go to state 93


state 64

    (90) elementos -> elemento .

    RBRACKET        reduce using rule 90 (elementos -> elemento .)
    COMA            reduce using rule 90 (elementos -> elemento .)
    RPAREN          reduce using rule 90 (elementos -> elemento .)


state 65

    (92) elemento -> valor .
    (95) clave_valor -> valor . ARROW valor

    RBRACKET        reduce using rule 92 (elemento -> valor .)
    COMA            reduce using rule 92 (elemento -> valor .)
    RPAREN          reduce using rule 92 (elemento -> valor .)
    ARROW           shift and go to state 94


state 66

    (93) elemento -> lista .

    RBRACKET        reduce using rule 93 (elemento -> lista .)
    COMA            reduce using rule 93 (elemento -> lista .)
    RPAREN          reduce using rule 93 (elemento -> lista .)


state 67

    (94) elemento -> clave_valor .

    RBRACKET        reduce using rule 94 (elemento -> clave_valor .)
    COMA            reduce using rule 94 (elemento -> clave_valor .)
    RPAREN          reduce using rule 94 (elemento -> clave_valor .)


state 68

    (67) while -> WHILE LBRACE . condicion RBRACE bloque
    (68) condicion -> . condicion_simple
    (69) condicion -> . condicion compuesta_logica condicion
    (70) condicion_simple -> . valor comparador valor
    (20) valor -> . NUMBER
    (21) valor -> . FLOAT
    (22) valor -> . STRING
    (23) valor -> . BOOLEAN
    (24) valor -> . VARIABLE
    (25) valor -> . ID

    NUMBER          shift and go to state 52
    FLOAT           shift and go to state 53
    STRING          shift and go to state 54
    BOOLEAN         shift and go to state 55
    VARIABLE        shift and go to state 56
    ID              shift and go to state 57

    condicion                      shift and go to state 95
    condicion_simple               shift and go to state 96
    valor                          shift and go to state 97

state 69

    (98) diccionario -> LBRACE pares . RBRACE
    (100) pares -> pares . COMA par

    RBRACE          shift and go to state 98
    COMA            shift and go to state 99


state 70

    (99) pares -> par .

    RBRACE          reduce using rule 99 (pares -> par .)
    COMA            reduce using rule 99 (pares -> par .)


state 71

    (101) par -> STRING . ARROW valor

    ARROW           shift and go to state 100


state 72

    (38) if -> IF LPAREN . comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (39) if -> IF LPAREN . VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (40) comparaciones -> . comparacion
    (41) comparaciones -> . comparacion operadores comparaciones
    (42) comparacion -> . VARIABLE comparadorNum VARIABLE
    (43) comparacion -> . valor comparador valor
    (20) valor -> . NUMBER
    (21) valor -> . FLOAT
    (22) valor -> . STRING
    (23) valor -> . BOOLEAN
    (24) valor -> . VARIABLE
    (25) valor -> . ID

    VARIABLE        shift and go to state 102
    NUMBER          shift and go to state 52
    FLOAT           shift and go to state 53
    STRING          shift and go to state 54
    BOOLEAN         shift and go to state 55
    ID              shift and go to state 57

    comparaciones                  shift and go to state 101
    comparacion                    shift and go to state 103
    valor                          shift and go to state 104

state 73

    (65) else -> RLLAVE ELSE . LLLAVE instrucciones RLLAVE

    LLLAVE          shift and go to state 105


state 74

    (66) else -> ELSE LLLAVE . instrucciones RLLAVE
    (4) instrucciones -> . instruccion
    (5) instrucciones -> . instrucciones instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (15) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (16) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . ECHO valor PUNTOYCOMA
    (19) imprimir -> . ECHO concatenar PUNTOYCOMA
    (30) solicitud_datos -> . READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (31) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (32) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (33) indexacion -> . VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (34) estructurasControl -> . while
    (35) estructurasControl -> . if
    (36) estructurasControl -> . else
    (37) estructurasControl -> . for_statement
    (55) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (56) asignacion -> . VARIABLE IGUAL valor
    (83) estructurasDatos -> . array
    (84) estructurasDatos -> . lista
    (85) estructurasDatos -> . diccionario
    (102) funciones -> . funcioninbuilt
    (103) funciones -> . funcion_anonima
    (104) funciones -> . arrow_function
    (67) while -> . WHILE LBRACE condicion RBRACE bloque
    (38) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (39) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (65) else -> . RLLAVE ELSE LLLAVE instrucciones RLLAVE
    (66) else -> . ELSE LLLAVE instrucciones RLLAVE
    (74) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (86) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (87) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (88) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (89) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (96) lista -> . LBRACKET RBRACKET
    (97) lista -> . LBRACKET elementos RBRACKET
    (98) diccionario -> . LBRACE pares RBRACE
    (105) funcioninbuilt -> . funcionesdefin LPAREN operaciones RPAREN
    (106) funcioninbuilt -> . funcionesdefin LPAREN RPAREN
    (118) funcion_anonima -> . FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE
    (121) arrow_function -> . VARIABLE EQUAL FN LPAREN parameter_list RPAREN ARROW expression
    (107) funcionesdefin -> . STRLEN
    (108) funcionesdefin -> . STRPOS
    (109) funcionesdefin -> . ARRAY_PUSH
    (110) funcionesdefin -> . ARRAY_POP
    (111) funcionesdefin -> . IN_ARRAY
    (112) funcionesdefin -> . COUNT
    (113) funcionesdefin -> . SORT

    PRINT           shift and go to state 15
    PRINT_R         shift and go to state 16
    ECHO            shift and go to state 17
    READLINE        shift and go to state 18
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 31
    IF              shift and go to state 33
    RLLAVE          shift and go to state 34
    ELSE            shift and go to state 35
    FOR             shift and go to state 36
    LBRACKET        shift and go to state 20
    LBRACE          shift and go to state 32
    FUNCTION        shift and go to state 38
    STRLEN          shift and go to state 39
    STRPOS          shift and go to state 40
    ARRAY_PUSH      shift and go to state 41
    ARRAY_POP       shift and go to state 42
    IN_ARRAY        shift and go to state 43
    COUNT           shift and go to state 44
    SORT            shift and go to state 45

    instrucciones                  shift and go to state 106
    instruccion                    shift and go to state 6
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    while                          shift and go to state 21
    if                             shift and go to state 22
    else                           shift and go to state 23
    for_statement                  shift and go to state 24
    array                          shift and go to state 25
    lista                          shift and go to state 26
    diccionario                    shift and go to state 27
    funcioninbuilt                 shift and go to state 28
    funcion_anonima                shift and go to state 29
    arrow_function                 shift and go to state 30
    funcionesdefin                 shift and go to state 37

state 75

    (74) for_statement -> FOR LPAREN . initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (75) initialization -> . VARIABLE IGUAL valor
    (76) initialization -> . empty
    (82) empty -> .

    VARIABLE        shift and go to state 108
    PUNTOYCOMA      reduce using rule 82 (empty -> .)

    initialization                 shift and go to state 107
    empty                          shift and go to state 109

state 76

    (105) funcioninbuilt -> funcionesdefin LPAREN . operaciones RPAREN
    (106) funcioninbuilt -> funcionesdefin LPAREN . RPAREN
    (114) operaciones -> . operacion
    (115) operaciones -> . operacion PUNTOYCOMA
    (116) operaciones -> . operacion operadorAritmetico operaciones
    (117) operaciones -> . VARIABLE IGUAL operaciones
    (57) operacion -> . VARIABLE operadorAritmetico VARIABLE
    (58) operacion -> . operacion operadorAritmetico operacion

    RPAREN          shift and go to state 111
    VARIABLE        shift and go to state 113

    operaciones                    shift and go to state 110
    operacion                      shift and go to state 112

state 77

    (118) funcion_anonima -> FUNCTION LPAREN . parametros RPAREN LBRACE instrucciones RBRACE
    (119) parametros -> . STRING
    (120) parametros -> . parametros COMA STRING

    STRING          shift and go to state 115

    parametros                     shift and go to state 114

state 78

    (14) imprimir -> PRINT LPAREN valor . RPAREN PUNTOYCOMA
    (26) argumentos -> valor .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 116
    COMA            reduce using rule 26 (argumentos -> valor .)

  ! RPAREN          [ reduce using rule 26 (argumentos -> valor .) ]


state 79

    (15) imprimir -> PRINT LPAREN argumentos . RPAREN PUNTOYCOMA
    (27) argumentos -> argumentos . COMA valor

    RPAREN          shift and go to state 117
    COMA            shift and go to state 118


state 80

    (16) imprimir -> PRINT_R LPAREN valor . RPAREN PUNTOYCOMA
    (26) argumentos -> valor .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 119
    COMA            reduce using rule 26 (argumentos -> valor .)

  ! RPAREN          [ reduce using rule 26 (argumentos -> valor .) ]


state 81

    (17) imprimir -> PRINT_R LPAREN argumentos . RPAREN PUNTOYCOMA
    (27) argumentos -> argumentos . COMA valor

    RPAREN          shift and go to state 120
    COMA            shift and go to state 118


state 82

    (18) imprimir -> ECHO valor PUNTOYCOMA .

    PRINT           reduce using rule 18 (imprimir -> ECHO valor PUNTOYCOMA .)
    PRINT_R         reduce using rule 18 (imprimir -> ECHO valor PUNTOYCOMA .)
    ECHO            reduce using rule 18 (imprimir -> ECHO valor PUNTOYCOMA .)
    READLINE        reduce using rule 18 (imprimir -> ECHO valor PUNTOYCOMA .)
    VARIABLE        reduce using rule 18 (imprimir -> ECHO valor PUNTOYCOMA .)
    WHILE           reduce using rule 18 (imprimir -> ECHO valor PUNTOYCOMA .)
    IF              reduce using rule 18 (imprimir -> ECHO valor PUNTOYCOMA .)
    RLLAVE          reduce using rule 18 (imprimir -> ECHO valor PUNTOYCOMA .)
    ELSE            reduce using rule 18 (imprimir -> ECHO valor PUNTOYCOMA .)
    FOR             reduce using rule 18 (imprimir -> ECHO valor PUNTOYCOMA .)
    LBRACKET        reduce using rule 18 (imprimir -> ECHO valor PUNTOYCOMA .)
    LBRACE          reduce using rule 18 (imprimir -> ECHO valor PUNTOYCOMA .)
    FUNCTION        reduce using rule 18 (imprimir -> ECHO valor PUNTOYCOMA .)
    STRLEN          reduce using rule 18 (imprimir -> ECHO valor PUNTOYCOMA .)
    STRPOS          reduce using rule 18 (imprimir -> ECHO valor PUNTOYCOMA .)
    ARRAY_PUSH      reduce using rule 18 (imprimir -> ECHO valor PUNTOYCOMA .)
    ARRAY_POP       reduce using rule 18 (imprimir -> ECHO valor PUNTOYCOMA .)
    IN_ARRAY        reduce using rule 18 (imprimir -> ECHO valor PUNTOYCOMA .)
    COUNT           reduce using rule 18 (imprimir -> ECHO valor PUNTOYCOMA .)
    SORT            reduce using rule 18 (imprimir -> ECHO valor PUNTOYCOMA .)
    PHP_END         reduce using rule 18 (imprimir -> ECHO valor PUNTOYCOMA .)
    RBRACE          reduce using rule 18 (imprimir -> ECHO valor PUNTOYCOMA .)


state 83

    (29) concatenar -> valor PUNTO . concatenar
    (28) concatenar -> . valor
    (29) concatenar -> . valor PUNTO concatenar
    (20) valor -> . NUMBER
    (21) valor -> . FLOAT
    (22) valor -> . STRING
    (23) valor -> . BOOLEAN
    (24) valor -> . VARIABLE
    (25) valor -> . ID

    NUMBER          shift and go to state 52
    FLOAT           shift and go to state 53
    STRING          shift and go to state 54
    BOOLEAN         shift and go to state 55
    VARIABLE        shift and go to state 56
    ID              shift and go to state 57

    valor                          shift and go to state 121
    concatenar                     shift and go to state 122

state 84

    (19) imprimir -> ECHO concatenar PUNTOYCOMA .

    PRINT           reduce using rule 19 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    PRINT_R         reduce using rule 19 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    ECHO            reduce using rule 19 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    READLINE        reduce using rule 19 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    VARIABLE        reduce using rule 19 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    WHILE           reduce using rule 19 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    IF              reduce using rule 19 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    RLLAVE          reduce using rule 19 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    ELSE            reduce using rule 19 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    FOR             reduce using rule 19 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    LBRACKET        reduce using rule 19 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    LBRACE          reduce using rule 19 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    FUNCTION        reduce using rule 19 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    STRLEN          reduce using rule 19 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    STRPOS          reduce using rule 19 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    ARRAY_PUSH      reduce using rule 19 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    ARRAY_POP       reduce using rule 19 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    IN_ARRAY        reduce using rule 19 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    COUNT           reduce using rule 19 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    SORT            reduce using rule 19 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    PHP_END         reduce using rule 19 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    RBRACE          reduce using rule 19 (imprimir -> ECHO concatenar PUNTOYCOMA .)


state 85

    (30) solicitud_datos -> READLINE LPAREN STRING . RPAREN PUNTOYCOMA

    RPAREN          shift and go to state 123


state 86

    (31) input -> VARIABLE IGUAL FGETS . LPAREN VARIABLE RPAREN PUNTOYCOMA

    LPAREN          shift and go to state 124


state 87

    (55) asignacion -> VARIABLE IGUAL valor . PUNTOYCOMA
    (56) asignacion -> VARIABLE IGUAL valor .

    PUNTOYCOMA      shift and go to state 125
    PRINT           reduce using rule 56 (asignacion -> VARIABLE IGUAL valor .)
    PRINT_R         reduce using rule 56 (asignacion -> VARIABLE IGUAL valor .)
    ECHO            reduce using rule 56 (asignacion -> VARIABLE IGUAL valor .)
    READLINE        reduce using rule 56 (asignacion -> VARIABLE IGUAL valor .)
    VARIABLE        reduce using rule 56 (asignacion -> VARIABLE IGUAL valor .)
    WHILE           reduce using rule 56 (asignacion -> VARIABLE IGUAL valor .)
    IF              reduce using rule 56 (asignacion -> VARIABLE IGUAL valor .)
    RLLAVE          reduce using rule 56 (asignacion -> VARIABLE IGUAL valor .)
    ELSE            reduce using rule 56 (asignacion -> VARIABLE IGUAL valor .)
    FOR             reduce using rule 56 (asignacion -> VARIABLE IGUAL valor .)
    LBRACKET        reduce using rule 56 (asignacion -> VARIABLE IGUAL valor .)
    LBRACE          reduce using rule 56 (asignacion -> VARIABLE IGUAL valor .)
    FUNCTION        reduce using rule 56 (asignacion -> VARIABLE IGUAL valor .)
    STRLEN          reduce using rule 56 (asignacion -> VARIABLE IGUAL valor .)
    STRPOS          reduce using rule 56 (asignacion -> VARIABLE IGUAL valor .)
    ARRAY_PUSH      reduce using rule 56 (asignacion -> VARIABLE IGUAL valor .)
    ARRAY_POP       reduce using rule 56 (asignacion -> VARIABLE IGUAL valor .)
    IN_ARRAY        reduce using rule 56 (asignacion -> VARIABLE IGUAL valor .)
    COUNT           reduce using rule 56 (asignacion -> VARIABLE IGUAL valor .)
    SORT            reduce using rule 56 (asignacion -> VARIABLE IGUAL valor .)
    PHP_END         reduce using rule 56 (asignacion -> VARIABLE IGUAL valor .)
    RBRACE          reduce using rule 56 (asignacion -> VARIABLE IGUAL valor .)


state 88

    (86) array -> VARIABLE IGUAL ARRAY . LPAREN RPAREN PUNTOYCOMA
    (87) array -> VARIABLE IGUAL ARRAY . LPAREN elementos RPAREN PUNTOYCOMA

    LPAREN          shift and go to state 126


state 89

    (88) array -> VARIABLE IGUAL LBRACKET . RBRACKET PUNTOYCOMA
    (89) array -> VARIABLE IGUAL LBRACKET . elementos RBRACKET PUNTOYCOMA
    (90) elementos -> . elemento
    (91) elementos -> . elementos COMA elemento
    (92) elemento -> . valor
    (93) elemento -> . lista
    (94) elemento -> . clave_valor
    (20) valor -> . NUMBER
    (21) valor -> . FLOAT
    (22) valor -> . STRING
    (23) valor -> . BOOLEAN
    (24) valor -> . VARIABLE
    (25) valor -> . ID
    (96) lista -> . LBRACKET RBRACKET
    (97) lista -> . LBRACKET elementos RBRACKET
    (95) clave_valor -> . valor ARROW valor

    RBRACKET        shift and go to state 127
    NUMBER          shift and go to state 52
    FLOAT           shift and go to state 53
    STRING          shift and go to state 54
    BOOLEAN         shift and go to state 55
    VARIABLE        shift and go to state 56
    ID              shift and go to state 57
    LBRACKET        shift and go to state 20

    elementos                      shift and go to state 128
    elemento                       shift and go to state 64
    valor                          shift and go to state 65
    lista                          shift and go to state 66
    clave_valor                    shift and go to state 67

state 90

    (32) indexacion -> VARIABLE LBRACKET valor . RBRACKET
    (33) indexacion -> VARIABLE LBRACKET valor . RBRACKET PUNTOYCOMA

    RBRACKET        shift and go to state 129


state 91

    (121) arrow_function -> VARIABLE EQUAL FN . LPAREN parameter_list RPAREN ARROW expression

    LPAREN          shift and go to state 130


state 92

    (97) lista -> LBRACKET elementos RBRACKET .

    PRINT           reduce using rule 97 (lista -> LBRACKET elementos RBRACKET .)
    PRINT_R         reduce using rule 97 (lista -> LBRACKET elementos RBRACKET .)
    ECHO            reduce using rule 97 (lista -> LBRACKET elementos RBRACKET .)
    READLINE        reduce using rule 97 (lista -> LBRACKET elementos RBRACKET .)
    VARIABLE        reduce using rule 97 (lista -> LBRACKET elementos RBRACKET .)
    WHILE           reduce using rule 97 (lista -> LBRACKET elementos RBRACKET .)
    IF              reduce using rule 97 (lista -> LBRACKET elementos RBRACKET .)
    RLLAVE          reduce using rule 97 (lista -> LBRACKET elementos RBRACKET .)
    ELSE            reduce using rule 97 (lista -> LBRACKET elementos RBRACKET .)
    FOR             reduce using rule 97 (lista -> LBRACKET elementos RBRACKET .)
    LBRACKET        reduce using rule 97 (lista -> LBRACKET elementos RBRACKET .)
    LBRACE          reduce using rule 97 (lista -> LBRACKET elementos RBRACKET .)
    FUNCTION        reduce using rule 97 (lista -> LBRACKET elementos RBRACKET .)
    STRLEN          reduce using rule 97 (lista -> LBRACKET elementos RBRACKET .)
    STRPOS          reduce using rule 97 (lista -> LBRACKET elementos RBRACKET .)
    ARRAY_PUSH      reduce using rule 97 (lista -> LBRACKET elementos RBRACKET .)
    ARRAY_POP       reduce using rule 97 (lista -> LBRACKET elementos RBRACKET .)
    IN_ARRAY        reduce using rule 97 (lista -> LBRACKET elementos RBRACKET .)
    COUNT           reduce using rule 97 (lista -> LBRACKET elementos RBRACKET .)
    SORT            reduce using rule 97 (lista -> LBRACKET elementos RBRACKET .)
    PHP_END         reduce using rule 97 (lista -> LBRACKET elementos RBRACKET .)
    RBRACKET        reduce using rule 97 (lista -> LBRACKET elementos RBRACKET .)
    COMA            reduce using rule 97 (lista -> LBRACKET elementos RBRACKET .)
    RPAREN          reduce using rule 97 (lista -> LBRACKET elementos RBRACKET .)
    RBRACE          reduce using rule 97 (lista -> LBRACKET elementos RBRACKET .)


state 93

    (91) elementos -> elementos COMA . elemento
    (92) elemento -> . valor
    (93) elemento -> . lista
    (94) elemento -> . clave_valor
    (20) valor -> . NUMBER
    (21) valor -> . FLOAT
    (22) valor -> . STRING
    (23) valor -> . BOOLEAN
    (24) valor -> . VARIABLE
    (25) valor -> . ID
    (96) lista -> . LBRACKET RBRACKET
    (97) lista -> . LBRACKET elementos RBRACKET
    (95) clave_valor -> . valor ARROW valor

    NUMBER          shift and go to state 52
    FLOAT           shift and go to state 53
    STRING          shift and go to state 54
    BOOLEAN         shift and go to state 55
    VARIABLE        shift and go to state 56
    ID              shift and go to state 57
    LBRACKET        shift and go to state 20

    elemento                       shift and go to state 131
    valor                          shift and go to state 65
    lista                          shift and go to state 66
    clave_valor                    shift and go to state 67

state 94

    (95) clave_valor -> valor ARROW . valor
    (20) valor -> . NUMBER
    (21) valor -> . FLOAT
    (22) valor -> . STRING
    (23) valor -> . BOOLEAN
    (24) valor -> . VARIABLE
    (25) valor -> . ID

    NUMBER          shift and go to state 52
    FLOAT           shift and go to state 53
    STRING          shift and go to state 54
    BOOLEAN         shift and go to state 55
    VARIABLE        shift and go to state 56
    ID              shift and go to state 57

    valor                          shift and go to state 132

state 95

    (67) while -> WHILE LBRACE condicion . RBRACE bloque
    (69) condicion -> condicion . compuesta_logica condicion
    (71) compuesta_logica -> . AND_LOGICAL
    (72) compuesta_logica -> . OR_LOGICAL

    RBRACE          shift and go to state 133
    AND_LOGICAL     shift and go to state 135
    OR_LOGICAL      shift and go to state 136

    compuesta_logica               shift and go to state 134

state 96

    (68) condicion -> condicion_simple .

    RBRACE          reduce using rule 68 (condicion -> condicion_simple .)
    AND_LOGICAL     reduce using rule 68 (condicion -> condicion_simple .)
    OR_LOGICAL      reduce using rule 68 (condicion -> condicion_simple .)
    PUNTOYCOMA      reduce using rule 68 (condicion -> condicion_simple .)


state 97

    (70) condicion_simple -> valor . comparador valor
    (48) comparador -> . EQUAL
    (49) comparador -> . NOT_IDENTICAL
    (50) comparador -> . NOT_EQUAL
    (51) comparador -> . IGUAL
    (52) comparador -> . IDENTICAL

    EQUAL           shift and go to state 138
    NOT_IDENTICAL   shift and go to state 139
    NOT_EQUAL       shift and go to state 140
    IGUAL           shift and go to state 141
    IDENTICAL       shift and go to state 142

    comparador                     shift and go to state 137

state 98

    (98) diccionario -> LBRACE pares RBRACE .

    PRINT           reduce using rule 98 (diccionario -> LBRACE pares RBRACE .)
    PRINT_R         reduce using rule 98 (diccionario -> LBRACE pares RBRACE .)
    ECHO            reduce using rule 98 (diccionario -> LBRACE pares RBRACE .)
    READLINE        reduce using rule 98 (diccionario -> LBRACE pares RBRACE .)
    VARIABLE        reduce using rule 98 (diccionario -> LBRACE pares RBRACE .)
    WHILE           reduce using rule 98 (diccionario -> LBRACE pares RBRACE .)
    IF              reduce using rule 98 (diccionario -> LBRACE pares RBRACE .)
    RLLAVE          reduce using rule 98 (diccionario -> LBRACE pares RBRACE .)
    ELSE            reduce using rule 98 (diccionario -> LBRACE pares RBRACE .)
    FOR             reduce using rule 98 (diccionario -> LBRACE pares RBRACE .)
    LBRACKET        reduce using rule 98 (diccionario -> LBRACE pares RBRACE .)
    LBRACE          reduce using rule 98 (diccionario -> LBRACE pares RBRACE .)
    FUNCTION        reduce using rule 98 (diccionario -> LBRACE pares RBRACE .)
    STRLEN          reduce using rule 98 (diccionario -> LBRACE pares RBRACE .)
    STRPOS          reduce using rule 98 (diccionario -> LBRACE pares RBRACE .)
    ARRAY_PUSH      reduce using rule 98 (diccionario -> LBRACE pares RBRACE .)
    ARRAY_POP       reduce using rule 98 (diccionario -> LBRACE pares RBRACE .)
    IN_ARRAY        reduce using rule 98 (diccionario -> LBRACE pares RBRACE .)
    COUNT           reduce using rule 98 (diccionario -> LBRACE pares RBRACE .)
    SORT            reduce using rule 98 (diccionario -> LBRACE pares RBRACE .)
    PHP_END         reduce using rule 98 (diccionario -> LBRACE pares RBRACE .)
    RBRACE          reduce using rule 98 (diccionario -> LBRACE pares RBRACE .)


state 99

    (100) pares -> pares COMA . par
    (101) par -> . STRING ARROW valor

    STRING          shift and go to state 71

    par                            shift and go to state 143

state 100

    (101) par -> STRING ARROW . valor
    (20) valor -> . NUMBER
    (21) valor -> . FLOAT
    (22) valor -> . STRING
    (23) valor -> . BOOLEAN
    (24) valor -> . VARIABLE
    (25) valor -> . ID

    NUMBER          shift and go to state 52
    FLOAT           shift and go to state 53
    STRING          shift and go to state 54
    BOOLEAN         shift and go to state 55
    VARIABLE        shift and go to state 56
    ID              shift and go to state 57

    valor                          shift and go to state 144

state 101

    (38) if -> IF LPAREN comparaciones . RPAREN LLLAVE instrucciones RLLAVE

    RPAREN          shift and go to state 145


state 102

    (39) if -> IF LPAREN VARIABLE . RPAREN LLLAVE instrucciones RLLAVE
    (42) comparacion -> VARIABLE . comparadorNum VARIABLE
    (24) valor -> VARIABLE .
    (44) comparadorNum -> . MAYOR
    (45) comparadorNum -> . MAYORIGUAL
    (46) comparadorNum -> . MENOR
    (47) comparadorNum -> . MENORIGUAL

    RPAREN          shift and go to state 146
    EQUAL           reduce using rule 24 (valor -> VARIABLE .)
    NOT_IDENTICAL   reduce using rule 24 (valor -> VARIABLE .)
    NOT_EQUAL       reduce using rule 24 (valor -> VARIABLE .)
    IGUAL           reduce using rule 24 (valor -> VARIABLE .)
    IDENTICAL       reduce using rule 24 (valor -> VARIABLE .)
    MAYOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENOR           shift and go to state 150
    MENORIGUAL      shift and go to state 151

    comparadorNum                  shift and go to state 147

state 103

    (40) comparaciones -> comparacion .
    (41) comparaciones -> comparacion . operadores comparaciones
    (53) operadores -> . AND_LOGICAL
    (54) operadores -> . OR_LOGICAL

    RPAREN          reduce using rule 40 (comparaciones -> comparacion .)
    AND_LOGICAL     shift and go to state 153
    OR_LOGICAL      shift and go to state 154

    operadores                     shift and go to state 152

state 104

    (43) comparacion -> valor . comparador valor
    (48) comparador -> . EQUAL
    (49) comparador -> . NOT_IDENTICAL
    (50) comparador -> . NOT_EQUAL
    (51) comparador -> . IGUAL
    (52) comparador -> . IDENTICAL

    EQUAL           shift and go to state 138
    NOT_IDENTICAL   shift and go to state 139
    NOT_EQUAL       shift and go to state 140
    IGUAL           shift and go to state 141
    IDENTICAL       shift and go to state 142

    comparador                     shift and go to state 155

state 105

    (65) else -> RLLAVE ELSE LLLAVE . instrucciones RLLAVE
    (4) instrucciones -> . instruccion
    (5) instrucciones -> . instrucciones instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (15) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (16) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . ECHO valor PUNTOYCOMA
    (19) imprimir -> . ECHO concatenar PUNTOYCOMA
    (30) solicitud_datos -> . READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (31) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (32) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (33) indexacion -> . VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (34) estructurasControl -> . while
    (35) estructurasControl -> . if
    (36) estructurasControl -> . else
    (37) estructurasControl -> . for_statement
    (55) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (56) asignacion -> . VARIABLE IGUAL valor
    (83) estructurasDatos -> . array
    (84) estructurasDatos -> . lista
    (85) estructurasDatos -> . diccionario
    (102) funciones -> . funcioninbuilt
    (103) funciones -> . funcion_anonima
    (104) funciones -> . arrow_function
    (67) while -> . WHILE LBRACE condicion RBRACE bloque
    (38) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (39) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (65) else -> . RLLAVE ELSE LLLAVE instrucciones RLLAVE
    (66) else -> . ELSE LLLAVE instrucciones RLLAVE
    (74) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (86) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (87) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (88) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (89) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (96) lista -> . LBRACKET RBRACKET
    (97) lista -> . LBRACKET elementos RBRACKET
    (98) diccionario -> . LBRACE pares RBRACE
    (105) funcioninbuilt -> . funcionesdefin LPAREN operaciones RPAREN
    (106) funcioninbuilt -> . funcionesdefin LPAREN RPAREN
    (118) funcion_anonima -> . FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE
    (121) arrow_function -> . VARIABLE EQUAL FN LPAREN parameter_list RPAREN ARROW expression
    (107) funcionesdefin -> . STRLEN
    (108) funcionesdefin -> . STRPOS
    (109) funcionesdefin -> . ARRAY_PUSH
    (110) funcionesdefin -> . ARRAY_POP
    (111) funcionesdefin -> . IN_ARRAY
    (112) funcionesdefin -> . COUNT
    (113) funcionesdefin -> . SORT

    PRINT           shift and go to state 15
    PRINT_R         shift and go to state 16
    ECHO            shift and go to state 17
    READLINE        shift and go to state 18
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 31
    IF              shift and go to state 33
    RLLAVE          shift and go to state 34
    ELSE            shift and go to state 35
    FOR             shift and go to state 36
    LBRACKET        shift and go to state 20
    LBRACE          shift and go to state 32
    FUNCTION        shift and go to state 38
    STRLEN          shift and go to state 39
    STRPOS          shift and go to state 40
    ARRAY_PUSH      shift and go to state 41
    ARRAY_POP       shift and go to state 42
    IN_ARRAY        shift and go to state 43
    COUNT           shift and go to state 44
    SORT            shift and go to state 45

    instrucciones                  shift and go to state 156
    instruccion                    shift and go to state 6
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    while                          shift and go to state 21
    if                             shift and go to state 22
    else                           shift and go to state 23
    for_statement                  shift and go to state 24
    array                          shift and go to state 25
    lista                          shift and go to state 26
    diccionario                    shift and go to state 27
    funcioninbuilt                 shift and go to state 28
    funcion_anonima                shift and go to state 29
    arrow_function                 shift and go to state 30
    funcionesdefin                 shift and go to state 37

state 106

    (66) else -> ELSE LLLAVE instrucciones . RLLAVE
    (5) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (15) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (16) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . ECHO valor PUNTOYCOMA
    (19) imprimir -> . ECHO concatenar PUNTOYCOMA
    (30) solicitud_datos -> . READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (31) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (32) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (33) indexacion -> . VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (34) estructurasControl -> . while
    (35) estructurasControl -> . if
    (36) estructurasControl -> . else
    (37) estructurasControl -> . for_statement
    (55) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (56) asignacion -> . VARIABLE IGUAL valor
    (83) estructurasDatos -> . array
    (84) estructurasDatos -> . lista
    (85) estructurasDatos -> . diccionario
    (102) funciones -> . funcioninbuilt
    (103) funciones -> . funcion_anonima
    (104) funciones -> . arrow_function
    (67) while -> . WHILE LBRACE condicion RBRACE bloque
    (38) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (39) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (65) else -> . RLLAVE ELSE LLLAVE instrucciones RLLAVE
    (66) else -> . ELSE LLLAVE instrucciones RLLAVE
    (74) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (86) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (87) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (88) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (89) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (96) lista -> . LBRACKET RBRACKET
    (97) lista -> . LBRACKET elementos RBRACKET
    (98) diccionario -> . LBRACE pares RBRACE
    (105) funcioninbuilt -> . funcionesdefin LPAREN operaciones RPAREN
    (106) funcioninbuilt -> . funcionesdefin LPAREN RPAREN
    (118) funcion_anonima -> . FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE
    (121) arrow_function -> . VARIABLE EQUAL FN LPAREN parameter_list RPAREN ARROW expression
    (107) funcionesdefin -> . STRLEN
    (108) funcionesdefin -> . STRPOS
    (109) funcionesdefin -> . ARRAY_PUSH
    (110) funcionesdefin -> . ARRAY_POP
    (111) funcionesdefin -> . IN_ARRAY
    (112) funcionesdefin -> . COUNT
    (113) funcionesdefin -> . SORT

    RLLAVE          shift and go to state 157
    PRINT           shift and go to state 15
    PRINT_R         shift and go to state 16
    ECHO            shift and go to state 17
    READLINE        shift and go to state 18
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 31
    IF              shift and go to state 33
    ELSE            shift and go to state 35
    FOR             shift and go to state 36
    LBRACKET        shift and go to state 20
    LBRACE          shift and go to state 32
    FUNCTION        shift and go to state 38
    STRLEN          shift and go to state 39
    STRPOS          shift and go to state 40
    ARRAY_PUSH      shift and go to state 41
    ARRAY_POP       shift and go to state 42
    IN_ARRAY        shift and go to state 43
    COUNT           shift and go to state 44
    SORT            shift and go to state 45

    instruccion                    shift and go to state 47
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    while                          shift and go to state 21
    if                             shift and go to state 22
    else                           shift and go to state 23
    for_statement                  shift and go to state 24
    array                          shift and go to state 25
    lista                          shift and go to state 26
    diccionario                    shift and go to state 27
    funcioninbuilt                 shift and go to state 28
    funcion_anonima                shift and go to state 29
    arrow_function                 shift and go to state 30
    funcionesdefin                 shift and go to state 37

state 107

    (74) for_statement -> FOR LPAREN initialization . PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE

    PUNTOYCOMA      shift and go to state 158


state 108

    (75) initialization -> VARIABLE . IGUAL valor

    IGUAL           shift and go to state 159


state 109

    (76) initialization -> empty .

    PUNTOYCOMA      reduce using rule 76 (initialization -> empty .)


state 110

    (105) funcioninbuilt -> funcionesdefin LPAREN operaciones . RPAREN

    RPAREN          shift and go to state 160


state 111

    (106) funcioninbuilt -> funcionesdefin LPAREN RPAREN .

    PRINT           reduce using rule 106 (funcioninbuilt -> funcionesdefin LPAREN RPAREN .)
    PRINT_R         reduce using rule 106 (funcioninbuilt -> funcionesdefin LPAREN RPAREN .)
    ECHO            reduce using rule 106 (funcioninbuilt -> funcionesdefin LPAREN RPAREN .)
    READLINE        reduce using rule 106 (funcioninbuilt -> funcionesdefin LPAREN RPAREN .)
    VARIABLE        reduce using rule 106 (funcioninbuilt -> funcionesdefin LPAREN RPAREN .)
    WHILE           reduce using rule 106 (funcioninbuilt -> funcionesdefin LPAREN RPAREN .)
    IF              reduce using rule 106 (funcioninbuilt -> funcionesdefin LPAREN RPAREN .)
    RLLAVE          reduce using rule 106 (funcioninbuilt -> funcionesdefin LPAREN RPAREN .)
    ELSE            reduce using rule 106 (funcioninbuilt -> funcionesdefin LPAREN RPAREN .)
    FOR             reduce using rule 106 (funcioninbuilt -> funcionesdefin LPAREN RPAREN .)
    LBRACKET        reduce using rule 106 (funcioninbuilt -> funcionesdefin LPAREN RPAREN .)
    LBRACE          reduce using rule 106 (funcioninbuilt -> funcionesdefin LPAREN RPAREN .)
    FUNCTION        reduce using rule 106 (funcioninbuilt -> funcionesdefin LPAREN RPAREN .)
    STRLEN          reduce using rule 106 (funcioninbuilt -> funcionesdefin LPAREN RPAREN .)
    STRPOS          reduce using rule 106 (funcioninbuilt -> funcionesdefin LPAREN RPAREN .)
    ARRAY_PUSH      reduce using rule 106 (funcioninbuilt -> funcionesdefin LPAREN RPAREN .)
    ARRAY_POP       reduce using rule 106 (funcioninbuilt -> funcionesdefin LPAREN RPAREN .)
    IN_ARRAY        reduce using rule 106 (funcioninbuilt -> funcionesdefin LPAREN RPAREN .)
    COUNT           reduce using rule 106 (funcioninbuilt -> funcionesdefin LPAREN RPAREN .)
    SORT            reduce using rule 106 (funcioninbuilt -> funcionesdefin LPAREN RPAREN .)
    PHP_END         reduce using rule 106 (funcioninbuilt -> funcionesdefin LPAREN RPAREN .)
    RBRACE          reduce using rule 106 (funcioninbuilt -> funcionesdefin LPAREN RPAREN .)


state 112

    (114) operaciones -> operacion .
    (115) operaciones -> operacion . PUNTOYCOMA
    (116) operaciones -> operacion . operadorAritmetico operaciones
    (58) operacion -> operacion . operadorAritmetico operacion
    (59) operadorAritmetico -> . PLUS
    (60) operadorAritmetico -> . MINUS
    (61) operadorAritmetico -> . TIMES
    (62) operadorAritmetico -> . DIVIDE
    (63) operadorAritmetico -> . MOD
    (64) operadorAritmetico -> . POT

    RPAREN          reduce using rule 114 (operaciones -> operacion .)
    PUNTOYCOMA      shift and go to state 161
    PLUS            shift and go to state 163
    MINUS           shift and go to state 164
    TIMES           shift and go to state 165
    DIVIDE          shift and go to state 166
    MOD             shift and go to state 167
    POT             shift and go to state 168

    operadorAritmetico             shift and go to state 162

state 113

    (117) operaciones -> VARIABLE . IGUAL operaciones
    (57) operacion -> VARIABLE . operadorAritmetico VARIABLE
    (59) operadorAritmetico -> . PLUS
    (60) operadorAritmetico -> . MINUS
    (61) operadorAritmetico -> . TIMES
    (62) operadorAritmetico -> . DIVIDE
    (63) operadorAritmetico -> . MOD
    (64) operadorAritmetico -> . POT

    IGUAL           shift and go to state 169
    PLUS            shift and go to state 163
    MINUS           shift and go to state 164
    TIMES           shift and go to state 165
    DIVIDE          shift and go to state 166
    MOD             shift and go to state 167
    POT             shift and go to state 168

    operadorAritmetico             shift and go to state 170

state 114

    (118) funcion_anonima -> FUNCTION LPAREN parametros . RPAREN LBRACE instrucciones RBRACE
    (120) parametros -> parametros . COMA STRING

    RPAREN          shift and go to state 171
    COMA            shift and go to state 172


state 115

    (119) parametros -> STRING .

    RPAREN          reduce using rule 119 (parametros -> STRING .)
    COMA            reduce using rule 119 (parametros -> STRING .)


state 116

    (14) imprimir -> PRINT LPAREN valor RPAREN . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 173


state 117

    (15) imprimir -> PRINT LPAREN argumentos RPAREN . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 174


state 118

    (27) argumentos -> argumentos COMA . valor
    (20) valor -> . NUMBER
    (21) valor -> . FLOAT
    (22) valor -> . STRING
    (23) valor -> . BOOLEAN
    (24) valor -> . VARIABLE
    (25) valor -> . ID

    NUMBER          shift and go to state 52
    FLOAT           shift and go to state 53
    STRING          shift and go to state 54
    BOOLEAN         shift and go to state 55
    VARIABLE        shift and go to state 56
    ID              shift and go to state 57

    valor                          shift and go to state 175

state 119

    (16) imprimir -> PRINT_R LPAREN valor RPAREN . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 176


state 120

    (17) imprimir -> PRINT_R LPAREN argumentos RPAREN . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 177


state 121

    (28) concatenar -> valor .
    (29) concatenar -> valor . PUNTO concatenar

    PUNTOYCOMA      reduce using rule 28 (concatenar -> valor .)
    PUNTO           shift and go to state 83


state 122

    (29) concatenar -> valor PUNTO concatenar .

    PUNTOYCOMA      reduce using rule 29 (concatenar -> valor PUNTO concatenar .)


state 123

    (30) solicitud_datos -> READLINE LPAREN STRING RPAREN . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 178


state 124

    (31) input -> VARIABLE IGUAL FGETS LPAREN . VARIABLE RPAREN PUNTOYCOMA

    VARIABLE        shift and go to state 179


state 125

    (55) asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .

    PRINT           reduce using rule 55 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    PRINT_R         reduce using rule 55 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    ECHO            reduce using rule 55 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    READLINE        reduce using rule 55 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    VARIABLE        reduce using rule 55 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    WHILE           reduce using rule 55 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    IF              reduce using rule 55 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    RLLAVE          reduce using rule 55 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    ELSE            reduce using rule 55 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    FOR             reduce using rule 55 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    LBRACKET        reduce using rule 55 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    LBRACE          reduce using rule 55 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    FUNCTION        reduce using rule 55 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    STRLEN          reduce using rule 55 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    STRPOS          reduce using rule 55 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    ARRAY_PUSH      reduce using rule 55 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    ARRAY_POP       reduce using rule 55 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    IN_ARRAY        reduce using rule 55 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    COUNT           reduce using rule 55 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    SORT            reduce using rule 55 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    PHP_END         reduce using rule 55 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    RBRACE          reduce using rule 55 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)


state 126

    (86) array -> VARIABLE IGUAL ARRAY LPAREN . RPAREN PUNTOYCOMA
    (87) array -> VARIABLE IGUAL ARRAY LPAREN . elementos RPAREN PUNTOYCOMA
    (90) elementos -> . elemento
    (91) elementos -> . elementos COMA elemento
    (92) elemento -> . valor
    (93) elemento -> . lista
    (94) elemento -> . clave_valor
    (20) valor -> . NUMBER
    (21) valor -> . FLOAT
    (22) valor -> . STRING
    (23) valor -> . BOOLEAN
    (24) valor -> . VARIABLE
    (25) valor -> . ID
    (96) lista -> . LBRACKET RBRACKET
    (97) lista -> . LBRACKET elementos RBRACKET
    (95) clave_valor -> . valor ARROW valor

    RPAREN          shift and go to state 180
    NUMBER          shift and go to state 52
    FLOAT           shift and go to state 53
    STRING          shift and go to state 54
    BOOLEAN         shift and go to state 55
    VARIABLE        shift and go to state 56
    ID              shift and go to state 57
    LBRACKET        shift and go to state 20

    elementos                      shift and go to state 181
    elemento                       shift and go to state 64
    valor                          shift and go to state 65
    lista                          shift and go to state 66
    clave_valor                    shift and go to state 67

state 127

    (88) array -> VARIABLE IGUAL LBRACKET RBRACKET . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 182


state 128

    (89) array -> VARIABLE IGUAL LBRACKET elementos . RBRACKET PUNTOYCOMA
    (91) elementos -> elementos . COMA elemento

    RBRACKET        shift and go to state 183
    COMA            shift and go to state 93


state 129

    (32) indexacion -> VARIABLE LBRACKET valor RBRACKET .
    (33) indexacion -> VARIABLE LBRACKET valor RBRACKET . PUNTOYCOMA

    PRINT           reduce using rule 32 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    PRINT_R         reduce using rule 32 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    ECHO            reduce using rule 32 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    READLINE        reduce using rule 32 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    VARIABLE        reduce using rule 32 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    WHILE           reduce using rule 32 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    IF              reduce using rule 32 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    RLLAVE          reduce using rule 32 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    ELSE            reduce using rule 32 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    FOR             reduce using rule 32 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    LBRACKET        reduce using rule 32 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    LBRACE          reduce using rule 32 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    FUNCTION        reduce using rule 32 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    STRLEN          reduce using rule 32 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    STRPOS          reduce using rule 32 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    ARRAY_PUSH      reduce using rule 32 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    ARRAY_POP       reduce using rule 32 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    IN_ARRAY        reduce using rule 32 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    COUNT           reduce using rule 32 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    SORT            reduce using rule 32 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    PHP_END         reduce using rule 32 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    RBRACE          reduce using rule 32 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    PUNTOYCOMA      shift and go to state 184


state 130

    (121) arrow_function -> VARIABLE EQUAL FN LPAREN . parameter_list RPAREN ARROW expression
    (122) parameter_list -> . VARIABLE
    (123) parameter_list -> . VARIABLE COMA parameter_list

    VARIABLE        shift and go to state 185

    parameter_list                 shift and go to state 186

state 131

    (91) elementos -> elementos COMA elemento .

    RBRACKET        reduce using rule 91 (elementos -> elementos COMA elemento .)
    COMA            reduce using rule 91 (elementos -> elementos COMA elemento .)
    RPAREN          reduce using rule 91 (elementos -> elementos COMA elemento .)


state 132

    (95) clave_valor -> valor ARROW valor .

    RBRACKET        reduce using rule 95 (clave_valor -> valor ARROW valor .)
    COMA            reduce using rule 95 (clave_valor -> valor ARROW valor .)
    RPAREN          reduce using rule 95 (clave_valor -> valor ARROW valor .)


state 133

    (67) while -> WHILE LBRACE condicion RBRACE . bloque
    (73) bloque -> . LBRACE instrucciones RBRACE

    LBRACE          shift and go to state 187

    bloque                         shift and go to state 188

state 134

    (69) condicion -> condicion compuesta_logica . condicion
    (68) condicion -> . condicion_simple
    (69) condicion -> . condicion compuesta_logica condicion
    (70) condicion_simple -> . valor comparador valor
    (20) valor -> . NUMBER
    (21) valor -> . FLOAT
    (22) valor -> . STRING
    (23) valor -> . BOOLEAN
    (24) valor -> . VARIABLE
    (25) valor -> . ID

    NUMBER          shift and go to state 52
    FLOAT           shift and go to state 53
    STRING          shift and go to state 54
    BOOLEAN         shift and go to state 55
    VARIABLE        shift and go to state 56
    ID              shift and go to state 57

    condicion                      shift and go to state 189
    condicion_simple               shift and go to state 96
    valor                          shift and go to state 97

state 135

    (71) compuesta_logica -> AND_LOGICAL .

    NUMBER          reduce using rule 71 (compuesta_logica -> AND_LOGICAL .)
    FLOAT           reduce using rule 71 (compuesta_logica -> AND_LOGICAL .)
    STRING          reduce using rule 71 (compuesta_logica -> AND_LOGICAL .)
    BOOLEAN         reduce using rule 71 (compuesta_logica -> AND_LOGICAL .)
    VARIABLE        reduce using rule 71 (compuesta_logica -> AND_LOGICAL .)
    ID              reduce using rule 71 (compuesta_logica -> AND_LOGICAL .)


state 136

    (72) compuesta_logica -> OR_LOGICAL .

    NUMBER          reduce using rule 72 (compuesta_logica -> OR_LOGICAL .)
    FLOAT           reduce using rule 72 (compuesta_logica -> OR_LOGICAL .)
    STRING          reduce using rule 72 (compuesta_logica -> OR_LOGICAL .)
    BOOLEAN         reduce using rule 72 (compuesta_logica -> OR_LOGICAL .)
    VARIABLE        reduce using rule 72 (compuesta_logica -> OR_LOGICAL .)
    ID              reduce using rule 72 (compuesta_logica -> OR_LOGICAL .)


state 137

    (70) condicion_simple -> valor comparador . valor
    (20) valor -> . NUMBER
    (21) valor -> . FLOAT
    (22) valor -> . STRING
    (23) valor -> . BOOLEAN
    (24) valor -> . VARIABLE
    (25) valor -> . ID

    NUMBER          shift and go to state 52
    FLOAT           shift and go to state 53
    STRING          shift and go to state 54
    BOOLEAN         shift and go to state 55
    VARIABLE        shift and go to state 56
    ID              shift and go to state 57

    valor                          shift and go to state 190

state 138

    (48) comparador -> EQUAL .

    NUMBER          reduce using rule 48 (comparador -> EQUAL .)
    FLOAT           reduce using rule 48 (comparador -> EQUAL .)
    STRING          reduce using rule 48 (comparador -> EQUAL .)
    BOOLEAN         reduce using rule 48 (comparador -> EQUAL .)
    VARIABLE        reduce using rule 48 (comparador -> EQUAL .)
    ID              reduce using rule 48 (comparador -> EQUAL .)


state 139

    (49) comparador -> NOT_IDENTICAL .

    NUMBER          reduce using rule 49 (comparador -> NOT_IDENTICAL .)
    FLOAT           reduce using rule 49 (comparador -> NOT_IDENTICAL .)
    STRING          reduce using rule 49 (comparador -> NOT_IDENTICAL .)
    BOOLEAN         reduce using rule 49 (comparador -> NOT_IDENTICAL .)
    VARIABLE        reduce using rule 49 (comparador -> NOT_IDENTICAL .)
    ID              reduce using rule 49 (comparador -> NOT_IDENTICAL .)


state 140

    (50) comparador -> NOT_EQUAL .

    NUMBER          reduce using rule 50 (comparador -> NOT_EQUAL .)
    FLOAT           reduce using rule 50 (comparador -> NOT_EQUAL .)
    STRING          reduce using rule 50 (comparador -> NOT_EQUAL .)
    BOOLEAN         reduce using rule 50 (comparador -> NOT_EQUAL .)
    VARIABLE        reduce using rule 50 (comparador -> NOT_EQUAL .)
    ID              reduce using rule 50 (comparador -> NOT_EQUAL .)


state 141

    (51) comparador -> IGUAL .

    NUMBER          reduce using rule 51 (comparador -> IGUAL .)
    FLOAT           reduce using rule 51 (comparador -> IGUAL .)
    STRING          reduce using rule 51 (comparador -> IGUAL .)
    BOOLEAN         reduce using rule 51 (comparador -> IGUAL .)
    VARIABLE        reduce using rule 51 (comparador -> IGUAL .)
    ID              reduce using rule 51 (comparador -> IGUAL .)


state 142

    (52) comparador -> IDENTICAL .

    NUMBER          reduce using rule 52 (comparador -> IDENTICAL .)
    FLOAT           reduce using rule 52 (comparador -> IDENTICAL .)
    STRING          reduce using rule 52 (comparador -> IDENTICAL .)
    BOOLEAN         reduce using rule 52 (comparador -> IDENTICAL .)
    VARIABLE        reduce using rule 52 (comparador -> IDENTICAL .)
    ID              reduce using rule 52 (comparador -> IDENTICAL .)


state 143

    (100) pares -> pares COMA par .

    RBRACE          reduce using rule 100 (pares -> pares COMA par .)
    COMA            reduce using rule 100 (pares -> pares COMA par .)


state 144

    (101) par -> STRING ARROW valor .

    RBRACE          reduce using rule 101 (par -> STRING ARROW valor .)
    COMA            reduce using rule 101 (par -> STRING ARROW valor .)


state 145

    (38) if -> IF LPAREN comparaciones RPAREN . LLLAVE instrucciones RLLAVE

    LLLAVE          shift and go to state 191


state 146

    (39) if -> IF LPAREN VARIABLE RPAREN . LLLAVE instrucciones RLLAVE

    LLLAVE          shift and go to state 192


state 147

    (42) comparacion -> VARIABLE comparadorNum . VARIABLE

    VARIABLE        shift and go to state 193


state 148

    (44) comparadorNum -> MAYOR .

    VARIABLE        reduce using rule 44 (comparadorNum -> MAYOR .)


state 149

    (45) comparadorNum -> MAYORIGUAL .

    VARIABLE        reduce using rule 45 (comparadorNum -> MAYORIGUAL .)


state 150

    (46) comparadorNum -> MENOR .

    VARIABLE        reduce using rule 46 (comparadorNum -> MENOR .)


state 151

    (47) comparadorNum -> MENORIGUAL .

    VARIABLE        reduce using rule 47 (comparadorNum -> MENORIGUAL .)


state 152

    (41) comparaciones -> comparacion operadores . comparaciones
    (40) comparaciones -> . comparacion
    (41) comparaciones -> . comparacion operadores comparaciones
    (42) comparacion -> . VARIABLE comparadorNum VARIABLE
    (43) comparacion -> . valor comparador valor
    (20) valor -> . NUMBER
    (21) valor -> . FLOAT
    (22) valor -> . STRING
    (23) valor -> . BOOLEAN
    (24) valor -> . VARIABLE
    (25) valor -> . ID

    VARIABLE        shift and go to state 195
    NUMBER          shift and go to state 52
    FLOAT           shift and go to state 53
    STRING          shift and go to state 54
    BOOLEAN         shift and go to state 55
    ID              shift and go to state 57

    comparacion                    shift and go to state 103
    comparaciones                  shift and go to state 194
    valor                          shift and go to state 104

state 153

    (53) operadores -> AND_LOGICAL .

    VARIABLE        reduce using rule 53 (operadores -> AND_LOGICAL .)
    NUMBER          reduce using rule 53 (operadores -> AND_LOGICAL .)
    FLOAT           reduce using rule 53 (operadores -> AND_LOGICAL .)
    STRING          reduce using rule 53 (operadores -> AND_LOGICAL .)
    BOOLEAN         reduce using rule 53 (operadores -> AND_LOGICAL .)
    ID              reduce using rule 53 (operadores -> AND_LOGICAL .)


state 154

    (54) operadores -> OR_LOGICAL .

    VARIABLE        reduce using rule 54 (operadores -> OR_LOGICAL .)
    NUMBER          reduce using rule 54 (operadores -> OR_LOGICAL .)
    FLOAT           reduce using rule 54 (operadores -> OR_LOGICAL .)
    STRING          reduce using rule 54 (operadores -> OR_LOGICAL .)
    BOOLEAN         reduce using rule 54 (operadores -> OR_LOGICAL .)
    ID              reduce using rule 54 (operadores -> OR_LOGICAL .)


state 155

    (43) comparacion -> valor comparador . valor
    (20) valor -> . NUMBER
    (21) valor -> . FLOAT
    (22) valor -> . STRING
    (23) valor -> . BOOLEAN
    (24) valor -> . VARIABLE
    (25) valor -> . ID

    NUMBER          shift and go to state 52
    FLOAT           shift and go to state 53
    STRING          shift and go to state 54
    BOOLEAN         shift and go to state 55
    VARIABLE        shift and go to state 56
    ID              shift and go to state 57

    valor                          shift and go to state 196

state 156

    (65) else -> RLLAVE ELSE LLLAVE instrucciones . RLLAVE
    (5) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (15) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (16) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . ECHO valor PUNTOYCOMA
    (19) imprimir -> . ECHO concatenar PUNTOYCOMA
    (30) solicitud_datos -> . READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (31) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (32) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (33) indexacion -> . VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (34) estructurasControl -> . while
    (35) estructurasControl -> . if
    (36) estructurasControl -> . else
    (37) estructurasControl -> . for_statement
    (55) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (56) asignacion -> . VARIABLE IGUAL valor
    (83) estructurasDatos -> . array
    (84) estructurasDatos -> . lista
    (85) estructurasDatos -> . diccionario
    (102) funciones -> . funcioninbuilt
    (103) funciones -> . funcion_anonima
    (104) funciones -> . arrow_function
    (67) while -> . WHILE LBRACE condicion RBRACE bloque
    (38) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (39) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (65) else -> . RLLAVE ELSE LLLAVE instrucciones RLLAVE
    (66) else -> . ELSE LLLAVE instrucciones RLLAVE
    (74) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (86) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (87) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (88) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (89) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (96) lista -> . LBRACKET RBRACKET
    (97) lista -> . LBRACKET elementos RBRACKET
    (98) diccionario -> . LBRACE pares RBRACE
    (105) funcioninbuilt -> . funcionesdefin LPAREN operaciones RPAREN
    (106) funcioninbuilt -> . funcionesdefin LPAREN RPAREN
    (118) funcion_anonima -> . FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE
    (121) arrow_function -> . VARIABLE EQUAL FN LPAREN parameter_list RPAREN ARROW expression
    (107) funcionesdefin -> . STRLEN
    (108) funcionesdefin -> . STRPOS
    (109) funcionesdefin -> . ARRAY_PUSH
    (110) funcionesdefin -> . ARRAY_POP
    (111) funcionesdefin -> . IN_ARRAY
    (112) funcionesdefin -> . COUNT
    (113) funcionesdefin -> . SORT

    RLLAVE          shift and go to state 197
    PRINT           shift and go to state 15
    PRINT_R         shift and go to state 16
    ECHO            shift and go to state 17
    READLINE        shift and go to state 18
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 31
    IF              shift and go to state 33
    ELSE            shift and go to state 35
    FOR             shift and go to state 36
    LBRACKET        shift and go to state 20
    LBRACE          shift and go to state 32
    FUNCTION        shift and go to state 38
    STRLEN          shift and go to state 39
    STRPOS          shift and go to state 40
    ARRAY_PUSH      shift and go to state 41
    ARRAY_POP       shift and go to state 42
    IN_ARRAY        shift and go to state 43
    COUNT           shift and go to state 44
    SORT            shift and go to state 45

    instruccion                    shift and go to state 47
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    while                          shift and go to state 21
    if                             shift and go to state 22
    else                           shift and go to state 23
    for_statement                  shift and go to state 24
    array                          shift and go to state 25
    lista                          shift and go to state 26
    diccionario                    shift and go to state 27
    funcioninbuilt                 shift and go to state 28
    funcion_anonima                shift and go to state 29
    arrow_function                 shift and go to state 30
    funcionesdefin                 shift and go to state 37

state 157

    (66) else -> ELSE LLLAVE instrucciones RLLAVE .
    (65) else -> RLLAVE . ELSE LLLAVE instrucciones RLLAVE

  ! shift/reduce conflict for ELSE resolved as shift
    PRINT           reduce using rule 66 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    PRINT_R         reduce using rule 66 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    ECHO            reduce using rule 66 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    READLINE        reduce using rule 66 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    VARIABLE        reduce using rule 66 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    WHILE           reduce using rule 66 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    IF              reduce using rule 66 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    RLLAVE          reduce using rule 66 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    FOR             reduce using rule 66 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    LBRACKET        reduce using rule 66 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    LBRACE          reduce using rule 66 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    FUNCTION        reduce using rule 66 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    STRLEN          reduce using rule 66 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    STRPOS          reduce using rule 66 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    ARRAY_PUSH      reduce using rule 66 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    ARRAY_POP       reduce using rule 66 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    IN_ARRAY        reduce using rule 66 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    COUNT           reduce using rule 66 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    SORT            reduce using rule 66 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    PHP_END         reduce using rule 66 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    RBRACE          reduce using rule 66 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    ELSE            shift and go to state 73

  ! ELSE            [ reduce using rule 66 (else -> ELSE LLLAVE instrucciones RLLAVE .) ]


state 158

    (74) for_statement -> FOR LPAREN initialization PUNTOYCOMA . condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (68) condicion -> . condicion_simple
    (69) condicion -> . condicion compuesta_logica condicion
    (70) condicion_simple -> . valor comparador valor
    (20) valor -> . NUMBER
    (21) valor -> . FLOAT
    (22) valor -> . STRING
    (23) valor -> . BOOLEAN
    (24) valor -> . VARIABLE
    (25) valor -> . ID

    NUMBER          shift and go to state 52
    FLOAT           shift and go to state 53
    STRING          shift and go to state 54
    BOOLEAN         shift and go to state 55
    VARIABLE        shift and go to state 56
    ID              shift and go to state 57

    condicion                      shift and go to state 198
    condicion_simple               shift and go to state 96
    valor                          shift and go to state 97

state 159

    (75) initialization -> VARIABLE IGUAL . valor
    (20) valor -> . NUMBER
    (21) valor -> . FLOAT
    (22) valor -> . STRING
    (23) valor -> . BOOLEAN
    (24) valor -> . VARIABLE
    (25) valor -> . ID

    NUMBER          shift and go to state 52
    FLOAT           shift and go to state 53
    STRING          shift and go to state 54
    BOOLEAN         shift and go to state 55
    VARIABLE        shift and go to state 56
    ID              shift and go to state 57

    valor                          shift and go to state 199

state 160

    (105) funcioninbuilt -> funcionesdefin LPAREN operaciones RPAREN .

    PRINT           reduce using rule 105 (funcioninbuilt -> funcionesdefin LPAREN operaciones RPAREN .)
    PRINT_R         reduce using rule 105 (funcioninbuilt -> funcionesdefin LPAREN operaciones RPAREN .)
    ECHO            reduce using rule 105 (funcioninbuilt -> funcionesdefin LPAREN operaciones RPAREN .)
    READLINE        reduce using rule 105 (funcioninbuilt -> funcionesdefin LPAREN operaciones RPAREN .)
    VARIABLE        reduce using rule 105 (funcioninbuilt -> funcionesdefin LPAREN operaciones RPAREN .)
    WHILE           reduce using rule 105 (funcioninbuilt -> funcionesdefin LPAREN operaciones RPAREN .)
    IF              reduce using rule 105 (funcioninbuilt -> funcionesdefin LPAREN operaciones RPAREN .)
    RLLAVE          reduce using rule 105 (funcioninbuilt -> funcionesdefin LPAREN operaciones RPAREN .)
    ELSE            reduce using rule 105 (funcioninbuilt -> funcionesdefin LPAREN operaciones RPAREN .)
    FOR             reduce using rule 105 (funcioninbuilt -> funcionesdefin LPAREN operaciones RPAREN .)
    LBRACKET        reduce using rule 105 (funcioninbuilt -> funcionesdefin LPAREN operaciones RPAREN .)
    LBRACE          reduce using rule 105 (funcioninbuilt -> funcionesdefin LPAREN operaciones RPAREN .)
    FUNCTION        reduce using rule 105 (funcioninbuilt -> funcionesdefin LPAREN operaciones RPAREN .)
    STRLEN          reduce using rule 105 (funcioninbuilt -> funcionesdefin LPAREN operaciones RPAREN .)
    STRPOS          reduce using rule 105 (funcioninbuilt -> funcionesdefin LPAREN operaciones RPAREN .)
    ARRAY_PUSH      reduce using rule 105 (funcioninbuilt -> funcionesdefin LPAREN operaciones RPAREN .)
    ARRAY_POP       reduce using rule 105 (funcioninbuilt -> funcionesdefin LPAREN operaciones RPAREN .)
    IN_ARRAY        reduce using rule 105 (funcioninbuilt -> funcionesdefin LPAREN operaciones RPAREN .)
    COUNT           reduce using rule 105 (funcioninbuilt -> funcionesdefin LPAREN operaciones RPAREN .)
    SORT            reduce using rule 105 (funcioninbuilt -> funcionesdefin LPAREN operaciones RPAREN .)
    PHP_END         reduce using rule 105 (funcioninbuilt -> funcionesdefin LPAREN operaciones RPAREN .)
    RBRACE          reduce using rule 105 (funcioninbuilt -> funcionesdefin LPAREN operaciones RPAREN .)


state 161

    (115) operaciones -> operacion PUNTOYCOMA .

    RPAREN          reduce using rule 115 (operaciones -> operacion PUNTOYCOMA .)


state 162

    (116) operaciones -> operacion operadorAritmetico . operaciones
    (58) operacion -> operacion operadorAritmetico . operacion
    (114) operaciones -> . operacion
    (115) operaciones -> . operacion PUNTOYCOMA
    (116) operaciones -> . operacion operadorAritmetico operaciones
    (117) operaciones -> . VARIABLE IGUAL operaciones
    (57) operacion -> . VARIABLE operadorAritmetico VARIABLE
    (58) operacion -> . operacion operadorAritmetico operacion

    VARIABLE        shift and go to state 113

    operacion                      shift and go to state 200
    operaciones                    shift and go to state 201

state 163

    (59) operadorAritmetico -> PLUS .

    VARIABLE        reduce using rule 59 (operadorAritmetico -> PLUS .)


state 164

    (60) operadorAritmetico -> MINUS .

    VARIABLE        reduce using rule 60 (operadorAritmetico -> MINUS .)


state 165

    (61) operadorAritmetico -> TIMES .

    VARIABLE        reduce using rule 61 (operadorAritmetico -> TIMES .)


state 166

    (62) operadorAritmetico -> DIVIDE .

    VARIABLE        reduce using rule 62 (operadorAritmetico -> DIVIDE .)


state 167

    (63) operadorAritmetico -> MOD .

    VARIABLE        reduce using rule 63 (operadorAritmetico -> MOD .)


state 168

    (64) operadorAritmetico -> POT .

    VARIABLE        reduce using rule 64 (operadorAritmetico -> POT .)


state 169

    (117) operaciones -> VARIABLE IGUAL . operaciones
    (114) operaciones -> . operacion
    (115) operaciones -> . operacion PUNTOYCOMA
    (116) operaciones -> . operacion operadorAritmetico operaciones
    (117) operaciones -> . VARIABLE IGUAL operaciones
    (57) operacion -> . VARIABLE operadorAritmetico VARIABLE
    (58) operacion -> . operacion operadorAritmetico operacion

    VARIABLE        shift and go to state 113

    operaciones                    shift and go to state 202
    operacion                      shift and go to state 112

state 170

    (57) operacion -> VARIABLE operadorAritmetico . VARIABLE

    VARIABLE        shift and go to state 203


state 171

    (118) funcion_anonima -> FUNCTION LPAREN parametros RPAREN . LBRACE instrucciones RBRACE

    LBRACE          shift and go to state 204


state 172

    (120) parametros -> parametros COMA . STRING

    STRING          shift and go to state 205


state 173

    (14) imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .

    PRINT           reduce using rule 14 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    PRINT_R         reduce using rule 14 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    ECHO            reduce using rule 14 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    READLINE        reduce using rule 14 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    VARIABLE        reduce using rule 14 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    WHILE           reduce using rule 14 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    IF              reduce using rule 14 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    RLLAVE          reduce using rule 14 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    ELSE            reduce using rule 14 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    FOR             reduce using rule 14 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    LBRACKET        reduce using rule 14 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    LBRACE          reduce using rule 14 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    FUNCTION        reduce using rule 14 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    STRLEN          reduce using rule 14 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    STRPOS          reduce using rule 14 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    ARRAY_PUSH      reduce using rule 14 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    ARRAY_POP       reduce using rule 14 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    IN_ARRAY        reduce using rule 14 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    COUNT           reduce using rule 14 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    SORT            reduce using rule 14 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    PHP_END         reduce using rule 14 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    RBRACE          reduce using rule 14 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)


state 174

    (15) imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .

    PRINT           reduce using rule 15 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    PRINT_R         reduce using rule 15 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    ECHO            reduce using rule 15 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    READLINE        reduce using rule 15 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    VARIABLE        reduce using rule 15 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    WHILE           reduce using rule 15 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    IF              reduce using rule 15 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    RLLAVE          reduce using rule 15 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    ELSE            reduce using rule 15 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    FOR             reduce using rule 15 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    LBRACKET        reduce using rule 15 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    LBRACE          reduce using rule 15 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    FUNCTION        reduce using rule 15 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    STRLEN          reduce using rule 15 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    STRPOS          reduce using rule 15 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    ARRAY_PUSH      reduce using rule 15 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    ARRAY_POP       reduce using rule 15 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    IN_ARRAY        reduce using rule 15 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    COUNT           reduce using rule 15 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    SORT            reduce using rule 15 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    PHP_END         reduce using rule 15 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    RBRACE          reduce using rule 15 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)


state 175

    (27) argumentos -> argumentos COMA valor .

    RPAREN          reduce using rule 27 (argumentos -> argumentos COMA valor .)
    COMA            reduce using rule 27 (argumentos -> argumentos COMA valor .)


state 176

    (16) imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .

    PRINT           reduce using rule 16 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    PRINT_R         reduce using rule 16 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    ECHO            reduce using rule 16 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    READLINE        reduce using rule 16 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    VARIABLE        reduce using rule 16 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    WHILE           reduce using rule 16 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    IF              reduce using rule 16 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    RLLAVE          reduce using rule 16 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    ELSE            reduce using rule 16 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    FOR             reduce using rule 16 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    LBRACKET        reduce using rule 16 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    LBRACE          reduce using rule 16 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    FUNCTION        reduce using rule 16 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    STRLEN          reduce using rule 16 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    STRPOS          reduce using rule 16 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    ARRAY_PUSH      reduce using rule 16 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    ARRAY_POP       reduce using rule 16 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    IN_ARRAY        reduce using rule 16 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    COUNT           reduce using rule 16 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    SORT            reduce using rule 16 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    PHP_END         reduce using rule 16 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    RBRACE          reduce using rule 16 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)


state 177

    (17) imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .

    PRINT           reduce using rule 17 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    PRINT_R         reduce using rule 17 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    ECHO            reduce using rule 17 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    READLINE        reduce using rule 17 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    VARIABLE        reduce using rule 17 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    WHILE           reduce using rule 17 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    IF              reduce using rule 17 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    RLLAVE          reduce using rule 17 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    ELSE            reduce using rule 17 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    FOR             reduce using rule 17 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    LBRACKET        reduce using rule 17 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    LBRACE          reduce using rule 17 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    FUNCTION        reduce using rule 17 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    STRLEN          reduce using rule 17 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    STRPOS          reduce using rule 17 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    ARRAY_PUSH      reduce using rule 17 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    ARRAY_POP       reduce using rule 17 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    IN_ARRAY        reduce using rule 17 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    COUNT           reduce using rule 17 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    SORT            reduce using rule 17 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    PHP_END         reduce using rule 17 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    RBRACE          reduce using rule 17 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)


state 178

    (30) solicitud_datos -> READLINE LPAREN STRING RPAREN PUNTOYCOMA .

    PRINT           reduce using rule 30 (solicitud_datos -> READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    PRINT_R         reduce using rule 30 (solicitud_datos -> READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    ECHO            reduce using rule 30 (solicitud_datos -> READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    READLINE        reduce using rule 30 (solicitud_datos -> READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    VARIABLE        reduce using rule 30 (solicitud_datos -> READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    WHILE           reduce using rule 30 (solicitud_datos -> READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    IF              reduce using rule 30 (solicitud_datos -> READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    RLLAVE          reduce using rule 30 (solicitud_datos -> READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    ELSE            reduce using rule 30 (solicitud_datos -> READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    FOR             reduce using rule 30 (solicitud_datos -> READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    LBRACKET        reduce using rule 30 (solicitud_datos -> READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    LBRACE          reduce using rule 30 (solicitud_datos -> READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    FUNCTION        reduce using rule 30 (solicitud_datos -> READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    STRLEN          reduce using rule 30 (solicitud_datos -> READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    STRPOS          reduce using rule 30 (solicitud_datos -> READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    ARRAY_PUSH      reduce using rule 30 (solicitud_datos -> READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    ARRAY_POP       reduce using rule 30 (solicitud_datos -> READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    IN_ARRAY        reduce using rule 30 (solicitud_datos -> READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    COUNT           reduce using rule 30 (solicitud_datos -> READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    SORT            reduce using rule 30 (solicitud_datos -> READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    PHP_END         reduce using rule 30 (solicitud_datos -> READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    RBRACE          reduce using rule 30 (solicitud_datos -> READLINE LPAREN STRING RPAREN PUNTOYCOMA .)


state 179

    (31) input -> VARIABLE IGUAL FGETS LPAREN VARIABLE . RPAREN PUNTOYCOMA

    RPAREN          shift and go to state 206


state 180

    (86) array -> VARIABLE IGUAL ARRAY LPAREN RPAREN . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 207


state 181

    (87) array -> VARIABLE IGUAL ARRAY LPAREN elementos . RPAREN PUNTOYCOMA
    (91) elementos -> elementos . COMA elemento

    RPAREN          shift and go to state 208
    COMA            shift and go to state 93


state 182

    (88) array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .

    PRINT           reduce using rule 88 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    PRINT_R         reduce using rule 88 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    ECHO            reduce using rule 88 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    READLINE        reduce using rule 88 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    VARIABLE        reduce using rule 88 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    WHILE           reduce using rule 88 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    IF              reduce using rule 88 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    RLLAVE          reduce using rule 88 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    ELSE            reduce using rule 88 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    FOR             reduce using rule 88 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    LBRACKET        reduce using rule 88 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    LBRACE          reduce using rule 88 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    FUNCTION        reduce using rule 88 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    STRLEN          reduce using rule 88 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    STRPOS          reduce using rule 88 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    ARRAY_PUSH      reduce using rule 88 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    ARRAY_POP       reduce using rule 88 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    IN_ARRAY        reduce using rule 88 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    COUNT           reduce using rule 88 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    SORT            reduce using rule 88 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    PHP_END         reduce using rule 88 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    RBRACE          reduce using rule 88 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)


state 183

    (89) array -> VARIABLE IGUAL LBRACKET elementos RBRACKET . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 209


state 184

    (33) indexacion -> VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .

    PRINT           reduce using rule 33 (indexacion -> VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    PRINT_R         reduce using rule 33 (indexacion -> VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    ECHO            reduce using rule 33 (indexacion -> VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    READLINE        reduce using rule 33 (indexacion -> VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    VARIABLE        reduce using rule 33 (indexacion -> VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    WHILE           reduce using rule 33 (indexacion -> VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    IF              reduce using rule 33 (indexacion -> VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    RLLAVE          reduce using rule 33 (indexacion -> VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    ELSE            reduce using rule 33 (indexacion -> VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    FOR             reduce using rule 33 (indexacion -> VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    LBRACKET        reduce using rule 33 (indexacion -> VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    LBRACE          reduce using rule 33 (indexacion -> VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    FUNCTION        reduce using rule 33 (indexacion -> VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    STRLEN          reduce using rule 33 (indexacion -> VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    STRPOS          reduce using rule 33 (indexacion -> VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    ARRAY_PUSH      reduce using rule 33 (indexacion -> VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    ARRAY_POP       reduce using rule 33 (indexacion -> VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    IN_ARRAY        reduce using rule 33 (indexacion -> VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    COUNT           reduce using rule 33 (indexacion -> VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    SORT            reduce using rule 33 (indexacion -> VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    PHP_END         reduce using rule 33 (indexacion -> VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    RBRACE          reduce using rule 33 (indexacion -> VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)


state 185

    (122) parameter_list -> VARIABLE .
    (123) parameter_list -> VARIABLE . COMA parameter_list

    RPAREN          reduce using rule 122 (parameter_list -> VARIABLE .)
    COMA            shift and go to state 210


state 186

    (121) arrow_function -> VARIABLE EQUAL FN LPAREN parameter_list . RPAREN ARROW expression

    RPAREN          shift and go to state 211


state 187

    (73) bloque -> LBRACE . instrucciones RBRACE
    (4) instrucciones -> . instruccion
    (5) instrucciones -> . instrucciones instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (15) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (16) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . ECHO valor PUNTOYCOMA
    (19) imprimir -> . ECHO concatenar PUNTOYCOMA
    (30) solicitud_datos -> . READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (31) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (32) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (33) indexacion -> . VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (34) estructurasControl -> . while
    (35) estructurasControl -> . if
    (36) estructurasControl -> . else
    (37) estructurasControl -> . for_statement
    (55) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (56) asignacion -> . VARIABLE IGUAL valor
    (83) estructurasDatos -> . array
    (84) estructurasDatos -> . lista
    (85) estructurasDatos -> . diccionario
    (102) funciones -> . funcioninbuilt
    (103) funciones -> . funcion_anonima
    (104) funciones -> . arrow_function
    (67) while -> . WHILE LBRACE condicion RBRACE bloque
    (38) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (39) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (65) else -> . RLLAVE ELSE LLLAVE instrucciones RLLAVE
    (66) else -> . ELSE LLLAVE instrucciones RLLAVE
    (74) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (86) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (87) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (88) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (89) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (96) lista -> . LBRACKET RBRACKET
    (97) lista -> . LBRACKET elementos RBRACKET
    (98) diccionario -> . LBRACE pares RBRACE
    (105) funcioninbuilt -> . funcionesdefin LPAREN operaciones RPAREN
    (106) funcioninbuilt -> . funcionesdefin LPAREN RPAREN
    (118) funcion_anonima -> . FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE
    (121) arrow_function -> . VARIABLE EQUAL FN LPAREN parameter_list RPAREN ARROW expression
    (107) funcionesdefin -> . STRLEN
    (108) funcionesdefin -> . STRPOS
    (109) funcionesdefin -> . ARRAY_PUSH
    (110) funcionesdefin -> . ARRAY_POP
    (111) funcionesdefin -> . IN_ARRAY
    (112) funcionesdefin -> . COUNT
    (113) funcionesdefin -> . SORT

    PRINT           shift and go to state 15
    PRINT_R         shift and go to state 16
    ECHO            shift and go to state 17
    READLINE        shift and go to state 18
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 31
    IF              shift and go to state 33
    RLLAVE          shift and go to state 34
    ELSE            shift and go to state 35
    FOR             shift and go to state 36
    LBRACKET        shift and go to state 20
    LBRACE          shift and go to state 32
    FUNCTION        shift and go to state 38
    STRLEN          shift and go to state 39
    STRPOS          shift and go to state 40
    ARRAY_PUSH      shift and go to state 41
    ARRAY_POP       shift and go to state 42
    IN_ARRAY        shift and go to state 43
    COUNT           shift and go to state 44
    SORT            shift and go to state 45

    instrucciones                  shift and go to state 212
    instruccion                    shift and go to state 6
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    while                          shift and go to state 21
    if                             shift and go to state 22
    else                           shift and go to state 23
    for_statement                  shift and go to state 24
    array                          shift and go to state 25
    lista                          shift and go to state 26
    diccionario                    shift and go to state 27
    funcioninbuilt                 shift and go to state 28
    funcion_anonima                shift and go to state 29
    arrow_function                 shift and go to state 30
    funcionesdefin                 shift and go to state 37

state 188

    (67) while -> WHILE LBRACE condicion RBRACE bloque .

    PRINT           reduce using rule 67 (while -> WHILE LBRACE condicion RBRACE bloque .)
    PRINT_R         reduce using rule 67 (while -> WHILE LBRACE condicion RBRACE bloque .)
    ECHO            reduce using rule 67 (while -> WHILE LBRACE condicion RBRACE bloque .)
    READLINE        reduce using rule 67 (while -> WHILE LBRACE condicion RBRACE bloque .)
    VARIABLE        reduce using rule 67 (while -> WHILE LBRACE condicion RBRACE bloque .)
    WHILE           reduce using rule 67 (while -> WHILE LBRACE condicion RBRACE bloque .)
    IF              reduce using rule 67 (while -> WHILE LBRACE condicion RBRACE bloque .)
    RLLAVE          reduce using rule 67 (while -> WHILE LBRACE condicion RBRACE bloque .)
    ELSE            reduce using rule 67 (while -> WHILE LBRACE condicion RBRACE bloque .)
    FOR             reduce using rule 67 (while -> WHILE LBRACE condicion RBRACE bloque .)
    LBRACKET        reduce using rule 67 (while -> WHILE LBRACE condicion RBRACE bloque .)
    LBRACE          reduce using rule 67 (while -> WHILE LBRACE condicion RBRACE bloque .)
    FUNCTION        reduce using rule 67 (while -> WHILE LBRACE condicion RBRACE bloque .)
    STRLEN          reduce using rule 67 (while -> WHILE LBRACE condicion RBRACE bloque .)
    STRPOS          reduce using rule 67 (while -> WHILE LBRACE condicion RBRACE bloque .)
    ARRAY_PUSH      reduce using rule 67 (while -> WHILE LBRACE condicion RBRACE bloque .)
    ARRAY_POP       reduce using rule 67 (while -> WHILE LBRACE condicion RBRACE bloque .)
    IN_ARRAY        reduce using rule 67 (while -> WHILE LBRACE condicion RBRACE bloque .)
    COUNT           reduce using rule 67 (while -> WHILE LBRACE condicion RBRACE bloque .)
    SORT            reduce using rule 67 (while -> WHILE LBRACE condicion RBRACE bloque .)
    PHP_END         reduce using rule 67 (while -> WHILE LBRACE condicion RBRACE bloque .)
    RBRACE          reduce using rule 67 (while -> WHILE LBRACE condicion RBRACE bloque .)


state 189

    (69) condicion -> condicion compuesta_logica condicion .
    (69) condicion -> condicion . compuesta_logica condicion
    (71) compuesta_logica -> . AND_LOGICAL
    (72) compuesta_logica -> . OR_LOGICAL

  ! shift/reduce conflict for AND_LOGICAL resolved as shift
  ! shift/reduce conflict for OR_LOGICAL resolved as shift
    RBRACE          reduce using rule 69 (condicion -> condicion compuesta_logica condicion .)
    PUNTOYCOMA      reduce using rule 69 (condicion -> condicion compuesta_logica condicion .)
    AND_LOGICAL     shift and go to state 135
    OR_LOGICAL      shift and go to state 136

  ! AND_LOGICAL     [ reduce using rule 69 (condicion -> condicion compuesta_logica condicion .) ]
  ! OR_LOGICAL      [ reduce using rule 69 (condicion -> condicion compuesta_logica condicion .) ]

    compuesta_logica               shift and go to state 134

state 190

    (70) condicion_simple -> valor comparador valor .

    RBRACE          reduce using rule 70 (condicion_simple -> valor comparador valor .)
    AND_LOGICAL     reduce using rule 70 (condicion_simple -> valor comparador valor .)
    OR_LOGICAL      reduce using rule 70 (condicion_simple -> valor comparador valor .)
    PUNTOYCOMA      reduce using rule 70 (condicion_simple -> valor comparador valor .)


state 191

    (38) if -> IF LPAREN comparaciones RPAREN LLLAVE . instrucciones RLLAVE
    (4) instrucciones -> . instruccion
    (5) instrucciones -> . instrucciones instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (15) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (16) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . ECHO valor PUNTOYCOMA
    (19) imprimir -> . ECHO concatenar PUNTOYCOMA
    (30) solicitud_datos -> . READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (31) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (32) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (33) indexacion -> . VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (34) estructurasControl -> . while
    (35) estructurasControl -> . if
    (36) estructurasControl -> . else
    (37) estructurasControl -> . for_statement
    (55) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (56) asignacion -> . VARIABLE IGUAL valor
    (83) estructurasDatos -> . array
    (84) estructurasDatos -> . lista
    (85) estructurasDatos -> . diccionario
    (102) funciones -> . funcioninbuilt
    (103) funciones -> . funcion_anonima
    (104) funciones -> . arrow_function
    (67) while -> . WHILE LBRACE condicion RBRACE bloque
    (38) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (39) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (65) else -> . RLLAVE ELSE LLLAVE instrucciones RLLAVE
    (66) else -> . ELSE LLLAVE instrucciones RLLAVE
    (74) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (86) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (87) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (88) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (89) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (96) lista -> . LBRACKET RBRACKET
    (97) lista -> . LBRACKET elementos RBRACKET
    (98) diccionario -> . LBRACE pares RBRACE
    (105) funcioninbuilt -> . funcionesdefin LPAREN operaciones RPAREN
    (106) funcioninbuilt -> . funcionesdefin LPAREN RPAREN
    (118) funcion_anonima -> . FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE
    (121) arrow_function -> . VARIABLE EQUAL FN LPAREN parameter_list RPAREN ARROW expression
    (107) funcionesdefin -> . STRLEN
    (108) funcionesdefin -> . STRPOS
    (109) funcionesdefin -> . ARRAY_PUSH
    (110) funcionesdefin -> . ARRAY_POP
    (111) funcionesdefin -> . IN_ARRAY
    (112) funcionesdefin -> . COUNT
    (113) funcionesdefin -> . SORT

    PRINT           shift and go to state 15
    PRINT_R         shift and go to state 16
    ECHO            shift and go to state 17
    READLINE        shift and go to state 18
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 31
    IF              shift and go to state 33
    RLLAVE          shift and go to state 34
    ELSE            shift and go to state 35
    FOR             shift and go to state 36
    LBRACKET        shift and go to state 20
    LBRACE          shift and go to state 32
    FUNCTION        shift and go to state 38
    STRLEN          shift and go to state 39
    STRPOS          shift and go to state 40
    ARRAY_PUSH      shift and go to state 41
    ARRAY_POP       shift and go to state 42
    IN_ARRAY        shift and go to state 43
    COUNT           shift and go to state 44
    SORT            shift and go to state 45

    instrucciones                  shift and go to state 213
    instruccion                    shift and go to state 6
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    while                          shift and go to state 21
    if                             shift and go to state 22
    else                           shift and go to state 23
    for_statement                  shift and go to state 24
    array                          shift and go to state 25
    lista                          shift and go to state 26
    diccionario                    shift and go to state 27
    funcioninbuilt                 shift and go to state 28
    funcion_anonima                shift and go to state 29
    arrow_function                 shift and go to state 30
    funcionesdefin                 shift and go to state 37

state 192

    (39) if -> IF LPAREN VARIABLE RPAREN LLLAVE . instrucciones RLLAVE
    (4) instrucciones -> . instruccion
    (5) instrucciones -> . instrucciones instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (15) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (16) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . ECHO valor PUNTOYCOMA
    (19) imprimir -> . ECHO concatenar PUNTOYCOMA
    (30) solicitud_datos -> . READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (31) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (32) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (33) indexacion -> . VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (34) estructurasControl -> . while
    (35) estructurasControl -> . if
    (36) estructurasControl -> . else
    (37) estructurasControl -> . for_statement
    (55) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (56) asignacion -> . VARIABLE IGUAL valor
    (83) estructurasDatos -> . array
    (84) estructurasDatos -> . lista
    (85) estructurasDatos -> . diccionario
    (102) funciones -> . funcioninbuilt
    (103) funciones -> . funcion_anonima
    (104) funciones -> . arrow_function
    (67) while -> . WHILE LBRACE condicion RBRACE bloque
    (38) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (39) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (65) else -> . RLLAVE ELSE LLLAVE instrucciones RLLAVE
    (66) else -> . ELSE LLLAVE instrucciones RLLAVE
    (74) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (86) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (87) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (88) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (89) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (96) lista -> . LBRACKET RBRACKET
    (97) lista -> . LBRACKET elementos RBRACKET
    (98) diccionario -> . LBRACE pares RBRACE
    (105) funcioninbuilt -> . funcionesdefin LPAREN operaciones RPAREN
    (106) funcioninbuilt -> . funcionesdefin LPAREN RPAREN
    (118) funcion_anonima -> . FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE
    (121) arrow_function -> . VARIABLE EQUAL FN LPAREN parameter_list RPAREN ARROW expression
    (107) funcionesdefin -> . STRLEN
    (108) funcionesdefin -> . STRPOS
    (109) funcionesdefin -> . ARRAY_PUSH
    (110) funcionesdefin -> . ARRAY_POP
    (111) funcionesdefin -> . IN_ARRAY
    (112) funcionesdefin -> . COUNT
    (113) funcionesdefin -> . SORT

    PRINT           shift and go to state 15
    PRINT_R         shift and go to state 16
    ECHO            shift and go to state 17
    READLINE        shift and go to state 18
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 31
    IF              shift and go to state 33
    RLLAVE          shift and go to state 34
    ELSE            shift and go to state 35
    FOR             shift and go to state 36
    LBRACKET        shift and go to state 20
    LBRACE          shift and go to state 32
    FUNCTION        shift and go to state 38
    STRLEN          shift and go to state 39
    STRPOS          shift and go to state 40
    ARRAY_PUSH      shift and go to state 41
    ARRAY_POP       shift and go to state 42
    IN_ARRAY        shift and go to state 43
    COUNT           shift and go to state 44
    SORT            shift and go to state 45

    instrucciones                  shift and go to state 214
    instruccion                    shift and go to state 6
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    while                          shift and go to state 21
    if                             shift and go to state 22
    else                           shift and go to state 23
    for_statement                  shift and go to state 24
    array                          shift and go to state 25
    lista                          shift and go to state 26
    diccionario                    shift and go to state 27
    funcioninbuilt                 shift and go to state 28
    funcion_anonima                shift and go to state 29
    arrow_function                 shift and go to state 30
    funcionesdefin                 shift and go to state 37

state 193

    (42) comparacion -> VARIABLE comparadorNum VARIABLE .

    AND_LOGICAL     reduce using rule 42 (comparacion -> VARIABLE comparadorNum VARIABLE .)
    OR_LOGICAL      reduce using rule 42 (comparacion -> VARIABLE comparadorNum VARIABLE .)
    RPAREN          reduce using rule 42 (comparacion -> VARIABLE comparadorNum VARIABLE .)


state 194

    (41) comparaciones -> comparacion operadores comparaciones .

    RPAREN          reduce using rule 41 (comparaciones -> comparacion operadores comparaciones .)


state 195

    (42) comparacion -> VARIABLE . comparadorNum VARIABLE
    (24) valor -> VARIABLE .
    (44) comparadorNum -> . MAYOR
    (45) comparadorNum -> . MAYORIGUAL
    (46) comparadorNum -> . MENOR
    (47) comparadorNum -> . MENORIGUAL

    EQUAL           reduce using rule 24 (valor -> VARIABLE .)
    NOT_IDENTICAL   reduce using rule 24 (valor -> VARIABLE .)
    NOT_EQUAL       reduce using rule 24 (valor -> VARIABLE .)
    IGUAL           reduce using rule 24 (valor -> VARIABLE .)
    IDENTICAL       reduce using rule 24 (valor -> VARIABLE .)
    MAYOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 149
    MENOR           shift and go to state 150
    MENORIGUAL      shift and go to state 151

    comparadorNum                  shift and go to state 147

state 196

    (43) comparacion -> valor comparador valor .

    AND_LOGICAL     reduce using rule 43 (comparacion -> valor comparador valor .)
    OR_LOGICAL      reduce using rule 43 (comparacion -> valor comparador valor .)
    RPAREN          reduce using rule 43 (comparacion -> valor comparador valor .)


state 197

    (65) else -> RLLAVE ELSE LLLAVE instrucciones RLLAVE .
    (65) else -> RLLAVE . ELSE LLLAVE instrucciones RLLAVE

  ! shift/reduce conflict for ELSE resolved as shift
    PRINT           reduce using rule 65 (else -> RLLAVE ELSE LLLAVE instrucciones RLLAVE .)
    PRINT_R         reduce using rule 65 (else -> RLLAVE ELSE LLLAVE instrucciones RLLAVE .)
    ECHO            reduce using rule 65 (else -> RLLAVE ELSE LLLAVE instrucciones RLLAVE .)
    READLINE        reduce using rule 65 (else -> RLLAVE ELSE LLLAVE instrucciones RLLAVE .)
    VARIABLE        reduce using rule 65 (else -> RLLAVE ELSE LLLAVE instrucciones RLLAVE .)
    WHILE           reduce using rule 65 (else -> RLLAVE ELSE LLLAVE instrucciones RLLAVE .)
    IF              reduce using rule 65 (else -> RLLAVE ELSE LLLAVE instrucciones RLLAVE .)
    RLLAVE          reduce using rule 65 (else -> RLLAVE ELSE LLLAVE instrucciones RLLAVE .)
    FOR             reduce using rule 65 (else -> RLLAVE ELSE LLLAVE instrucciones RLLAVE .)
    LBRACKET        reduce using rule 65 (else -> RLLAVE ELSE LLLAVE instrucciones RLLAVE .)
    LBRACE          reduce using rule 65 (else -> RLLAVE ELSE LLLAVE instrucciones RLLAVE .)
    FUNCTION        reduce using rule 65 (else -> RLLAVE ELSE LLLAVE instrucciones RLLAVE .)
    STRLEN          reduce using rule 65 (else -> RLLAVE ELSE LLLAVE instrucciones RLLAVE .)
    STRPOS          reduce using rule 65 (else -> RLLAVE ELSE LLLAVE instrucciones RLLAVE .)
    ARRAY_PUSH      reduce using rule 65 (else -> RLLAVE ELSE LLLAVE instrucciones RLLAVE .)
    ARRAY_POP       reduce using rule 65 (else -> RLLAVE ELSE LLLAVE instrucciones RLLAVE .)
    IN_ARRAY        reduce using rule 65 (else -> RLLAVE ELSE LLLAVE instrucciones RLLAVE .)
    COUNT           reduce using rule 65 (else -> RLLAVE ELSE LLLAVE instrucciones RLLAVE .)
    SORT            reduce using rule 65 (else -> RLLAVE ELSE LLLAVE instrucciones RLLAVE .)
    PHP_END         reduce using rule 65 (else -> RLLAVE ELSE LLLAVE instrucciones RLLAVE .)
    RBRACE          reduce using rule 65 (else -> RLLAVE ELSE LLLAVE instrucciones RLLAVE .)
    ELSE            shift and go to state 73

  ! ELSE            [ reduce using rule 65 (else -> RLLAVE ELSE LLLAVE instrucciones RLLAVE .) ]


state 198

    (74) for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion . PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (69) condicion -> condicion . compuesta_logica condicion
    (71) compuesta_logica -> . AND_LOGICAL
    (72) compuesta_logica -> . OR_LOGICAL

    PUNTOYCOMA      shift and go to state 215
    AND_LOGICAL     shift and go to state 135
    OR_LOGICAL      shift and go to state 136

    compuesta_logica               shift and go to state 134

state 199

    (75) initialization -> VARIABLE IGUAL valor .

    PUNTOYCOMA      reduce using rule 75 (initialization -> VARIABLE IGUAL valor .)


state 200

    (58) operacion -> operacion operadorAritmetico operacion .
    (114) operaciones -> operacion .
    (115) operaciones -> operacion . PUNTOYCOMA
    (116) operaciones -> operacion . operadorAritmetico operaciones
    (58) operacion -> operacion . operadorAritmetico operacion
    (59) operadorAritmetico -> . PLUS
    (60) operadorAritmetico -> . MINUS
    (61) operadorAritmetico -> . TIMES
    (62) operadorAritmetico -> . DIVIDE
    (63) operadorAritmetico -> . MOD
    (64) operadorAritmetico -> . POT

  ! reduce/reduce conflict for RPAREN resolved using rule 58 (operacion -> operacion operadorAritmetico operacion .)
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for POT resolved as shift
    RPAREN          reduce using rule 58 (operacion -> operacion operadorAritmetico operacion .)
    PUNTOYCOMA      shift and go to state 161
    PLUS            shift and go to state 163
    MINUS           shift and go to state 164
    TIMES           shift and go to state 165
    DIVIDE          shift and go to state 166
    MOD             shift and go to state 167
    POT             shift and go to state 168

  ! PUNTOYCOMA      [ reduce using rule 58 (operacion -> operacion operadorAritmetico operacion .) ]
  ! PLUS            [ reduce using rule 58 (operacion -> operacion operadorAritmetico operacion .) ]
  ! MINUS           [ reduce using rule 58 (operacion -> operacion operadorAritmetico operacion .) ]
  ! TIMES           [ reduce using rule 58 (operacion -> operacion operadorAritmetico operacion .) ]
  ! DIVIDE          [ reduce using rule 58 (operacion -> operacion operadorAritmetico operacion .) ]
  ! MOD             [ reduce using rule 58 (operacion -> operacion operadorAritmetico operacion .) ]
  ! POT             [ reduce using rule 58 (operacion -> operacion operadorAritmetico operacion .) ]
  ! RPAREN          [ reduce using rule 114 (operaciones -> operacion .) ]

    operadorAritmetico             shift and go to state 162

state 201

    (116) operaciones -> operacion operadorAritmetico operaciones .

    RPAREN          reduce using rule 116 (operaciones -> operacion operadorAritmetico operaciones .)


state 202

    (117) operaciones -> VARIABLE IGUAL operaciones .

    RPAREN          reduce using rule 117 (operaciones -> VARIABLE IGUAL operaciones .)


state 203

    (57) operacion -> VARIABLE operadorAritmetico VARIABLE .

    PUNTOYCOMA      reduce using rule 57 (operacion -> VARIABLE operadorAritmetico VARIABLE .)
    PLUS            reduce using rule 57 (operacion -> VARIABLE operadorAritmetico VARIABLE .)
    MINUS           reduce using rule 57 (operacion -> VARIABLE operadorAritmetico VARIABLE .)
    TIMES           reduce using rule 57 (operacion -> VARIABLE operadorAritmetico VARIABLE .)
    DIVIDE          reduce using rule 57 (operacion -> VARIABLE operadorAritmetico VARIABLE .)
    MOD             reduce using rule 57 (operacion -> VARIABLE operadorAritmetico VARIABLE .)
    POT             reduce using rule 57 (operacion -> VARIABLE operadorAritmetico VARIABLE .)
    RPAREN          reduce using rule 57 (operacion -> VARIABLE operadorAritmetico VARIABLE .)


state 204

    (118) funcion_anonima -> FUNCTION LPAREN parametros RPAREN LBRACE . instrucciones RBRACE
    (4) instrucciones -> . instruccion
    (5) instrucciones -> . instrucciones instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (15) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (16) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . ECHO valor PUNTOYCOMA
    (19) imprimir -> . ECHO concatenar PUNTOYCOMA
    (30) solicitud_datos -> . READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (31) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (32) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (33) indexacion -> . VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (34) estructurasControl -> . while
    (35) estructurasControl -> . if
    (36) estructurasControl -> . else
    (37) estructurasControl -> . for_statement
    (55) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (56) asignacion -> . VARIABLE IGUAL valor
    (83) estructurasDatos -> . array
    (84) estructurasDatos -> . lista
    (85) estructurasDatos -> . diccionario
    (102) funciones -> . funcioninbuilt
    (103) funciones -> . funcion_anonima
    (104) funciones -> . arrow_function
    (67) while -> . WHILE LBRACE condicion RBRACE bloque
    (38) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (39) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (65) else -> . RLLAVE ELSE LLLAVE instrucciones RLLAVE
    (66) else -> . ELSE LLLAVE instrucciones RLLAVE
    (74) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (86) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (87) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (88) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (89) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (96) lista -> . LBRACKET RBRACKET
    (97) lista -> . LBRACKET elementos RBRACKET
    (98) diccionario -> . LBRACE pares RBRACE
    (105) funcioninbuilt -> . funcionesdefin LPAREN operaciones RPAREN
    (106) funcioninbuilt -> . funcionesdefin LPAREN RPAREN
    (118) funcion_anonima -> . FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE
    (121) arrow_function -> . VARIABLE EQUAL FN LPAREN parameter_list RPAREN ARROW expression
    (107) funcionesdefin -> . STRLEN
    (108) funcionesdefin -> . STRPOS
    (109) funcionesdefin -> . ARRAY_PUSH
    (110) funcionesdefin -> . ARRAY_POP
    (111) funcionesdefin -> . IN_ARRAY
    (112) funcionesdefin -> . COUNT
    (113) funcionesdefin -> . SORT

    PRINT           shift and go to state 15
    PRINT_R         shift and go to state 16
    ECHO            shift and go to state 17
    READLINE        shift and go to state 18
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 31
    IF              shift and go to state 33
    RLLAVE          shift and go to state 34
    ELSE            shift and go to state 35
    FOR             shift and go to state 36
    LBRACKET        shift and go to state 20
    LBRACE          shift and go to state 32
    FUNCTION        shift and go to state 38
    STRLEN          shift and go to state 39
    STRPOS          shift and go to state 40
    ARRAY_PUSH      shift and go to state 41
    ARRAY_POP       shift and go to state 42
    IN_ARRAY        shift and go to state 43
    COUNT           shift and go to state 44
    SORT            shift and go to state 45

    instrucciones                  shift and go to state 216
    instruccion                    shift and go to state 6
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    while                          shift and go to state 21
    if                             shift and go to state 22
    else                           shift and go to state 23
    for_statement                  shift and go to state 24
    array                          shift and go to state 25
    lista                          shift and go to state 26
    diccionario                    shift and go to state 27
    funcioninbuilt                 shift and go to state 28
    funcion_anonima                shift and go to state 29
    arrow_function                 shift and go to state 30
    funcionesdefin                 shift and go to state 37

state 205

    (120) parametros -> parametros COMA STRING .

    RPAREN          reduce using rule 120 (parametros -> parametros COMA STRING .)
    COMA            reduce using rule 120 (parametros -> parametros COMA STRING .)


state 206

    (31) input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 217


state 207

    (86) array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .

    PRINT           reduce using rule 86 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    PRINT_R         reduce using rule 86 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    ECHO            reduce using rule 86 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    READLINE        reduce using rule 86 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    VARIABLE        reduce using rule 86 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    WHILE           reduce using rule 86 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    IF              reduce using rule 86 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    RLLAVE          reduce using rule 86 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    ELSE            reduce using rule 86 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    FOR             reduce using rule 86 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    LBRACKET        reduce using rule 86 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    LBRACE          reduce using rule 86 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    FUNCTION        reduce using rule 86 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    STRLEN          reduce using rule 86 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    STRPOS          reduce using rule 86 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    ARRAY_PUSH      reduce using rule 86 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    ARRAY_POP       reduce using rule 86 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    IN_ARRAY        reduce using rule 86 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    COUNT           reduce using rule 86 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    SORT            reduce using rule 86 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    PHP_END         reduce using rule 86 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    RBRACE          reduce using rule 86 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)


state 208

    (87) array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 218


state 209

    (89) array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .

    PRINT           reduce using rule 89 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    PRINT_R         reduce using rule 89 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    ECHO            reduce using rule 89 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    READLINE        reduce using rule 89 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    VARIABLE        reduce using rule 89 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    WHILE           reduce using rule 89 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    IF              reduce using rule 89 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    RLLAVE          reduce using rule 89 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    ELSE            reduce using rule 89 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    FOR             reduce using rule 89 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    LBRACKET        reduce using rule 89 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    LBRACE          reduce using rule 89 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    FUNCTION        reduce using rule 89 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    STRLEN          reduce using rule 89 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    STRPOS          reduce using rule 89 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    ARRAY_PUSH      reduce using rule 89 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    ARRAY_POP       reduce using rule 89 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    IN_ARRAY        reduce using rule 89 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    COUNT           reduce using rule 89 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    SORT            reduce using rule 89 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    PHP_END         reduce using rule 89 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    RBRACE          reduce using rule 89 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)


state 210

    (123) parameter_list -> VARIABLE COMA . parameter_list
    (122) parameter_list -> . VARIABLE
    (123) parameter_list -> . VARIABLE COMA parameter_list

    VARIABLE        shift and go to state 185

    parameter_list                 shift and go to state 219

state 211

    (121) arrow_function -> VARIABLE EQUAL FN LPAREN parameter_list RPAREN . ARROW expression

    ARROW           shift and go to state 220


state 212

    (73) bloque -> LBRACE instrucciones . RBRACE
    (5) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (15) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (16) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . ECHO valor PUNTOYCOMA
    (19) imprimir -> . ECHO concatenar PUNTOYCOMA
    (30) solicitud_datos -> . READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (31) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (32) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (33) indexacion -> . VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (34) estructurasControl -> . while
    (35) estructurasControl -> . if
    (36) estructurasControl -> . else
    (37) estructurasControl -> . for_statement
    (55) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (56) asignacion -> . VARIABLE IGUAL valor
    (83) estructurasDatos -> . array
    (84) estructurasDatos -> . lista
    (85) estructurasDatos -> . diccionario
    (102) funciones -> . funcioninbuilt
    (103) funciones -> . funcion_anonima
    (104) funciones -> . arrow_function
    (67) while -> . WHILE LBRACE condicion RBRACE bloque
    (38) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (39) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (65) else -> . RLLAVE ELSE LLLAVE instrucciones RLLAVE
    (66) else -> . ELSE LLLAVE instrucciones RLLAVE
    (74) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (86) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (87) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (88) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (89) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (96) lista -> . LBRACKET RBRACKET
    (97) lista -> . LBRACKET elementos RBRACKET
    (98) diccionario -> . LBRACE pares RBRACE
    (105) funcioninbuilt -> . funcionesdefin LPAREN operaciones RPAREN
    (106) funcioninbuilt -> . funcionesdefin LPAREN RPAREN
    (118) funcion_anonima -> . FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE
    (121) arrow_function -> . VARIABLE EQUAL FN LPAREN parameter_list RPAREN ARROW expression
    (107) funcionesdefin -> . STRLEN
    (108) funcionesdefin -> . STRPOS
    (109) funcionesdefin -> . ARRAY_PUSH
    (110) funcionesdefin -> . ARRAY_POP
    (111) funcionesdefin -> . IN_ARRAY
    (112) funcionesdefin -> . COUNT
    (113) funcionesdefin -> . SORT

    RBRACE          shift and go to state 221
    PRINT           shift and go to state 15
    PRINT_R         shift and go to state 16
    ECHO            shift and go to state 17
    READLINE        shift and go to state 18
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 31
    IF              shift and go to state 33
    RLLAVE          shift and go to state 34
    ELSE            shift and go to state 35
    FOR             shift and go to state 36
    LBRACKET        shift and go to state 20
    LBRACE          shift and go to state 32
    FUNCTION        shift and go to state 38
    STRLEN          shift and go to state 39
    STRPOS          shift and go to state 40
    ARRAY_PUSH      shift and go to state 41
    ARRAY_POP       shift and go to state 42
    IN_ARRAY        shift and go to state 43
    COUNT           shift and go to state 44
    SORT            shift and go to state 45

    instruccion                    shift and go to state 47
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    while                          shift and go to state 21
    if                             shift and go to state 22
    else                           shift and go to state 23
    for_statement                  shift and go to state 24
    array                          shift and go to state 25
    lista                          shift and go to state 26
    diccionario                    shift and go to state 27
    funcioninbuilt                 shift and go to state 28
    funcion_anonima                shift and go to state 29
    arrow_function                 shift and go to state 30
    funcionesdefin                 shift and go to state 37

state 213

    (38) if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones . RLLAVE
    (5) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (15) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (16) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . ECHO valor PUNTOYCOMA
    (19) imprimir -> . ECHO concatenar PUNTOYCOMA
    (30) solicitud_datos -> . READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (31) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (32) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (33) indexacion -> . VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (34) estructurasControl -> . while
    (35) estructurasControl -> . if
    (36) estructurasControl -> . else
    (37) estructurasControl -> . for_statement
    (55) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (56) asignacion -> . VARIABLE IGUAL valor
    (83) estructurasDatos -> . array
    (84) estructurasDatos -> . lista
    (85) estructurasDatos -> . diccionario
    (102) funciones -> . funcioninbuilt
    (103) funciones -> . funcion_anonima
    (104) funciones -> . arrow_function
    (67) while -> . WHILE LBRACE condicion RBRACE bloque
    (38) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (39) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (65) else -> . RLLAVE ELSE LLLAVE instrucciones RLLAVE
    (66) else -> . ELSE LLLAVE instrucciones RLLAVE
    (74) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (86) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (87) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (88) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (89) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (96) lista -> . LBRACKET RBRACKET
    (97) lista -> . LBRACKET elementos RBRACKET
    (98) diccionario -> . LBRACE pares RBRACE
    (105) funcioninbuilt -> . funcionesdefin LPAREN operaciones RPAREN
    (106) funcioninbuilt -> . funcionesdefin LPAREN RPAREN
    (118) funcion_anonima -> . FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE
    (121) arrow_function -> . VARIABLE EQUAL FN LPAREN parameter_list RPAREN ARROW expression
    (107) funcionesdefin -> . STRLEN
    (108) funcionesdefin -> . STRPOS
    (109) funcionesdefin -> . ARRAY_PUSH
    (110) funcionesdefin -> . ARRAY_POP
    (111) funcionesdefin -> . IN_ARRAY
    (112) funcionesdefin -> . COUNT
    (113) funcionesdefin -> . SORT

    RLLAVE          shift and go to state 222
    PRINT           shift and go to state 15
    PRINT_R         shift and go to state 16
    ECHO            shift and go to state 17
    READLINE        shift and go to state 18
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 31
    IF              shift and go to state 33
    ELSE            shift and go to state 35
    FOR             shift and go to state 36
    LBRACKET        shift and go to state 20
    LBRACE          shift and go to state 32
    FUNCTION        shift and go to state 38
    STRLEN          shift and go to state 39
    STRPOS          shift and go to state 40
    ARRAY_PUSH      shift and go to state 41
    ARRAY_POP       shift and go to state 42
    IN_ARRAY        shift and go to state 43
    COUNT           shift and go to state 44
    SORT            shift and go to state 45

    instruccion                    shift and go to state 47
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    while                          shift and go to state 21
    if                             shift and go to state 22
    else                           shift and go to state 23
    for_statement                  shift and go to state 24
    array                          shift and go to state 25
    lista                          shift and go to state 26
    diccionario                    shift and go to state 27
    funcioninbuilt                 shift and go to state 28
    funcion_anonima                shift and go to state 29
    arrow_function                 shift and go to state 30
    funcionesdefin                 shift and go to state 37

state 214

    (39) if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones . RLLAVE
    (5) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (15) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (16) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . ECHO valor PUNTOYCOMA
    (19) imprimir -> . ECHO concatenar PUNTOYCOMA
    (30) solicitud_datos -> . READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (31) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (32) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (33) indexacion -> . VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (34) estructurasControl -> . while
    (35) estructurasControl -> . if
    (36) estructurasControl -> . else
    (37) estructurasControl -> . for_statement
    (55) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (56) asignacion -> . VARIABLE IGUAL valor
    (83) estructurasDatos -> . array
    (84) estructurasDatos -> . lista
    (85) estructurasDatos -> . diccionario
    (102) funciones -> . funcioninbuilt
    (103) funciones -> . funcion_anonima
    (104) funciones -> . arrow_function
    (67) while -> . WHILE LBRACE condicion RBRACE bloque
    (38) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (39) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (65) else -> . RLLAVE ELSE LLLAVE instrucciones RLLAVE
    (66) else -> . ELSE LLLAVE instrucciones RLLAVE
    (74) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (86) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (87) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (88) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (89) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (96) lista -> . LBRACKET RBRACKET
    (97) lista -> . LBRACKET elementos RBRACKET
    (98) diccionario -> . LBRACE pares RBRACE
    (105) funcioninbuilt -> . funcionesdefin LPAREN operaciones RPAREN
    (106) funcioninbuilt -> . funcionesdefin LPAREN RPAREN
    (118) funcion_anonima -> . FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE
    (121) arrow_function -> . VARIABLE EQUAL FN LPAREN parameter_list RPAREN ARROW expression
    (107) funcionesdefin -> . STRLEN
    (108) funcionesdefin -> . STRPOS
    (109) funcionesdefin -> . ARRAY_PUSH
    (110) funcionesdefin -> . ARRAY_POP
    (111) funcionesdefin -> . IN_ARRAY
    (112) funcionesdefin -> . COUNT
    (113) funcionesdefin -> . SORT

    RLLAVE          shift and go to state 223
    PRINT           shift and go to state 15
    PRINT_R         shift and go to state 16
    ECHO            shift and go to state 17
    READLINE        shift and go to state 18
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 31
    IF              shift and go to state 33
    ELSE            shift and go to state 35
    FOR             shift and go to state 36
    LBRACKET        shift and go to state 20
    LBRACE          shift and go to state 32
    FUNCTION        shift and go to state 38
    STRLEN          shift and go to state 39
    STRPOS          shift and go to state 40
    ARRAY_PUSH      shift and go to state 41
    ARRAY_POP       shift and go to state 42
    IN_ARRAY        shift and go to state 43
    COUNT           shift and go to state 44
    SORT            shift and go to state 45

    instruccion                    shift and go to state 47
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    while                          shift and go to state 21
    if                             shift and go to state 22
    else                           shift and go to state 23
    for_statement                  shift and go to state 24
    array                          shift and go to state 25
    lista                          shift and go to state 26
    diccionario                    shift and go to state 27
    funcioninbuilt                 shift and go to state 28
    funcion_anonima                shift and go to state 29
    arrow_function                 shift and go to state 30
    funcionesdefin                 shift and go to state 37

state 215

    (74) for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA . increment RPAREN LLLAVE instrucciones RLLAVE
    (77) increment -> . VARIABLE INCREMENT
    (78) increment -> . VARIABLE DECREMENT
    (79) increment -> . VARIABLE PLUS_ASSIGN valor
    (80) increment -> . VARIABLE MINUS_ASSIGN valor
    (81) increment -> . empty
    (82) empty -> .

    VARIABLE        shift and go to state 225
    RPAREN          reduce using rule 82 (empty -> .)

    increment                      shift and go to state 224
    empty                          shift and go to state 226

state 216

    (118) funcion_anonima -> FUNCTION LPAREN parametros RPAREN LBRACE instrucciones . RBRACE
    (5) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (15) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (16) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . ECHO valor PUNTOYCOMA
    (19) imprimir -> . ECHO concatenar PUNTOYCOMA
    (30) solicitud_datos -> . READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (31) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (32) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (33) indexacion -> . VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (34) estructurasControl -> . while
    (35) estructurasControl -> . if
    (36) estructurasControl -> . else
    (37) estructurasControl -> . for_statement
    (55) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (56) asignacion -> . VARIABLE IGUAL valor
    (83) estructurasDatos -> . array
    (84) estructurasDatos -> . lista
    (85) estructurasDatos -> . diccionario
    (102) funciones -> . funcioninbuilt
    (103) funciones -> . funcion_anonima
    (104) funciones -> . arrow_function
    (67) while -> . WHILE LBRACE condicion RBRACE bloque
    (38) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (39) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (65) else -> . RLLAVE ELSE LLLAVE instrucciones RLLAVE
    (66) else -> . ELSE LLLAVE instrucciones RLLAVE
    (74) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (86) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (87) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (88) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (89) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (96) lista -> . LBRACKET RBRACKET
    (97) lista -> . LBRACKET elementos RBRACKET
    (98) diccionario -> . LBRACE pares RBRACE
    (105) funcioninbuilt -> . funcionesdefin LPAREN operaciones RPAREN
    (106) funcioninbuilt -> . funcionesdefin LPAREN RPAREN
    (118) funcion_anonima -> . FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE
    (121) arrow_function -> . VARIABLE EQUAL FN LPAREN parameter_list RPAREN ARROW expression
    (107) funcionesdefin -> . STRLEN
    (108) funcionesdefin -> . STRPOS
    (109) funcionesdefin -> . ARRAY_PUSH
    (110) funcionesdefin -> . ARRAY_POP
    (111) funcionesdefin -> . IN_ARRAY
    (112) funcionesdefin -> . COUNT
    (113) funcionesdefin -> . SORT

    RBRACE          shift and go to state 227
    PRINT           shift and go to state 15
    PRINT_R         shift and go to state 16
    ECHO            shift and go to state 17
    READLINE        shift and go to state 18
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 31
    IF              shift and go to state 33
    RLLAVE          shift and go to state 34
    ELSE            shift and go to state 35
    FOR             shift and go to state 36
    LBRACKET        shift and go to state 20
    LBRACE          shift and go to state 32
    FUNCTION        shift and go to state 38
    STRLEN          shift and go to state 39
    STRPOS          shift and go to state 40
    ARRAY_PUSH      shift and go to state 41
    ARRAY_POP       shift and go to state 42
    IN_ARRAY        shift and go to state 43
    COUNT           shift and go to state 44
    SORT            shift and go to state 45

    instruccion                    shift and go to state 47
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    while                          shift and go to state 21
    if                             shift and go to state 22
    else                           shift and go to state 23
    for_statement                  shift and go to state 24
    array                          shift and go to state 25
    lista                          shift and go to state 26
    diccionario                    shift and go to state 27
    funcioninbuilt                 shift and go to state 28
    funcion_anonima                shift and go to state 29
    arrow_function                 shift and go to state 30
    funcionesdefin                 shift and go to state 37

state 217

    (31) input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .

    PRINT           reduce using rule 31 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    PRINT_R         reduce using rule 31 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    ECHO            reduce using rule 31 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    READLINE        reduce using rule 31 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    VARIABLE        reduce using rule 31 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    WHILE           reduce using rule 31 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    IF              reduce using rule 31 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    RLLAVE          reduce using rule 31 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    ELSE            reduce using rule 31 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    FOR             reduce using rule 31 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    LBRACKET        reduce using rule 31 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    LBRACE          reduce using rule 31 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    FUNCTION        reduce using rule 31 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    STRLEN          reduce using rule 31 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    STRPOS          reduce using rule 31 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    ARRAY_PUSH      reduce using rule 31 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    ARRAY_POP       reduce using rule 31 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    IN_ARRAY        reduce using rule 31 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    COUNT           reduce using rule 31 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    SORT            reduce using rule 31 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    PHP_END         reduce using rule 31 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    RBRACE          reduce using rule 31 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)


state 218

    (87) array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .

    PRINT           reduce using rule 87 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    PRINT_R         reduce using rule 87 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    ECHO            reduce using rule 87 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    READLINE        reduce using rule 87 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    VARIABLE        reduce using rule 87 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    WHILE           reduce using rule 87 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    IF              reduce using rule 87 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    RLLAVE          reduce using rule 87 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    ELSE            reduce using rule 87 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    FOR             reduce using rule 87 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    LBRACKET        reduce using rule 87 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    LBRACE          reduce using rule 87 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    FUNCTION        reduce using rule 87 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    STRLEN          reduce using rule 87 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    STRPOS          reduce using rule 87 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    ARRAY_PUSH      reduce using rule 87 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    ARRAY_POP       reduce using rule 87 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    IN_ARRAY        reduce using rule 87 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    COUNT           reduce using rule 87 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    SORT            reduce using rule 87 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    PHP_END         reduce using rule 87 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    RBRACE          reduce using rule 87 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)


state 219

    (123) parameter_list -> VARIABLE COMA parameter_list .

    RPAREN          reduce using rule 123 (parameter_list -> VARIABLE COMA parameter_list .)


state 220

    (121) arrow_function -> VARIABLE EQUAL FN LPAREN parameter_list RPAREN ARROW . expression
    (124) expression -> . VARIABLE
    (125) expression -> . NUMBER
    (126) expression -> . VARIABLE TIMES VARIABLE
    (127) expression -> . VARIABLE PLUS VARIABLE
    (128) expression -> . VARIABLE MINUS VARIABLE
    (129) expression -> . VARIABLE DIVIDE VARIABLE

    VARIABLE        shift and go to state 228
    NUMBER          shift and go to state 230

    expression                     shift and go to state 229

state 221

    (73) bloque -> LBRACE instrucciones RBRACE .

    PRINT           reduce using rule 73 (bloque -> LBRACE instrucciones RBRACE .)
    PRINT_R         reduce using rule 73 (bloque -> LBRACE instrucciones RBRACE .)
    ECHO            reduce using rule 73 (bloque -> LBRACE instrucciones RBRACE .)
    READLINE        reduce using rule 73 (bloque -> LBRACE instrucciones RBRACE .)
    VARIABLE        reduce using rule 73 (bloque -> LBRACE instrucciones RBRACE .)
    WHILE           reduce using rule 73 (bloque -> LBRACE instrucciones RBRACE .)
    IF              reduce using rule 73 (bloque -> LBRACE instrucciones RBRACE .)
    RLLAVE          reduce using rule 73 (bloque -> LBRACE instrucciones RBRACE .)
    ELSE            reduce using rule 73 (bloque -> LBRACE instrucciones RBRACE .)
    FOR             reduce using rule 73 (bloque -> LBRACE instrucciones RBRACE .)
    LBRACKET        reduce using rule 73 (bloque -> LBRACE instrucciones RBRACE .)
    LBRACE          reduce using rule 73 (bloque -> LBRACE instrucciones RBRACE .)
    FUNCTION        reduce using rule 73 (bloque -> LBRACE instrucciones RBRACE .)
    STRLEN          reduce using rule 73 (bloque -> LBRACE instrucciones RBRACE .)
    STRPOS          reduce using rule 73 (bloque -> LBRACE instrucciones RBRACE .)
    ARRAY_PUSH      reduce using rule 73 (bloque -> LBRACE instrucciones RBRACE .)
    ARRAY_POP       reduce using rule 73 (bloque -> LBRACE instrucciones RBRACE .)
    IN_ARRAY        reduce using rule 73 (bloque -> LBRACE instrucciones RBRACE .)
    COUNT           reduce using rule 73 (bloque -> LBRACE instrucciones RBRACE .)
    SORT            reduce using rule 73 (bloque -> LBRACE instrucciones RBRACE .)
    PHP_END         reduce using rule 73 (bloque -> LBRACE instrucciones RBRACE .)
    RBRACE          reduce using rule 73 (bloque -> LBRACE instrucciones RBRACE .)


state 222

    (38) if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .
    (65) else -> RLLAVE . ELSE LLLAVE instrucciones RLLAVE

  ! shift/reduce conflict for ELSE resolved as shift
    PRINT           reduce using rule 38 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    PRINT_R         reduce using rule 38 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    ECHO            reduce using rule 38 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    READLINE        reduce using rule 38 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    VARIABLE        reduce using rule 38 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    WHILE           reduce using rule 38 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    IF              reduce using rule 38 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    RLLAVE          reduce using rule 38 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    FOR             reduce using rule 38 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    LBRACKET        reduce using rule 38 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    LBRACE          reduce using rule 38 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    FUNCTION        reduce using rule 38 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    STRLEN          reduce using rule 38 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    STRPOS          reduce using rule 38 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    ARRAY_PUSH      reduce using rule 38 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    ARRAY_POP       reduce using rule 38 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    IN_ARRAY        reduce using rule 38 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    COUNT           reduce using rule 38 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    SORT            reduce using rule 38 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    PHP_END         reduce using rule 38 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    RBRACE          reduce using rule 38 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    ELSE            shift and go to state 73

  ! ELSE            [ reduce using rule 38 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .) ]


state 223

    (39) if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .
    (65) else -> RLLAVE . ELSE LLLAVE instrucciones RLLAVE

  ! shift/reduce conflict for ELSE resolved as shift
    PRINT           reduce using rule 39 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    PRINT_R         reduce using rule 39 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    ECHO            reduce using rule 39 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    READLINE        reduce using rule 39 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    VARIABLE        reduce using rule 39 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    WHILE           reduce using rule 39 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    IF              reduce using rule 39 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    RLLAVE          reduce using rule 39 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    FOR             reduce using rule 39 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    LBRACKET        reduce using rule 39 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    LBRACE          reduce using rule 39 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    FUNCTION        reduce using rule 39 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    STRLEN          reduce using rule 39 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    STRPOS          reduce using rule 39 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    ARRAY_PUSH      reduce using rule 39 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    ARRAY_POP       reduce using rule 39 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    IN_ARRAY        reduce using rule 39 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    COUNT           reduce using rule 39 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    SORT            reduce using rule 39 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    PHP_END         reduce using rule 39 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    RBRACE          reduce using rule 39 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    ELSE            shift and go to state 73

  ! ELSE            [ reduce using rule 39 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .) ]


state 224

    (74) for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment . RPAREN LLLAVE instrucciones RLLAVE

    RPAREN          shift and go to state 231


state 225

    (77) increment -> VARIABLE . INCREMENT
    (78) increment -> VARIABLE . DECREMENT
    (79) increment -> VARIABLE . PLUS_ASSIGN valor
    (80) increment -> VARIABLE . MINUS_ASSIGN valor

    INCREMENT       shift and go to state 232
    DECREMENT       shift and go to state 233
    PLUS_ASSIGN     shift and go to state 234
    MINUS_ASSIGN    shift and go to state 235


state 226

    (81) increment -> empty .

    RPAREN          reduce using rule 81 (increment -> empty .)


state 227

    (118) funcion_anonima -> FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE .

    PRINT           reduce using rule 118 (funcion_anonima -> FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE .)
    PRINT_R         reduce using rule 118 (funcion_anonima -> FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE .)
    ECHO            reduce using rule 118 (funcion_anonima -> FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE .)
    READLINE        reduce using rule 118 (funcion_anonima -> FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE .)
    VARIABLE        reduce using rule 118 (funcion_anonima -> FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE .)
    WHILE           reduce using rule 118 (funcion_anonima -> FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE .)
    IF              reduce using rule 118 (funcion_anonima -> FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE .)
    RLLAVE          reduce using rule 118 (funcion_anonima -> FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE .)
    ELSE            reduce using rule 118 (funcion_anonima -> FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE .)
    FOR             reduce using rule 118 (funcion_anonima -> FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE .)
    LBRACKET        reduce using rule 118 (funcion_anonima -> FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE .)
    LBRACE          reduce using rule 118 (funcion_anonima -> FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE .)
    FUNCTION        reduce using rule 118 (funcion_anonima -> FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE .)
    STRLEN          reduce using rule 118 (funcion_anonima -> FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE .)
    STRPOS          reduce using rule 118 (funcion_anonima -> FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE .)
    ARRAY_PUSH      reduce using rule 118 (funcion_anonima -> FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE .)
    ARRAY_POP       reduce using rule 118 (funcion_anonima -> FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE .)
    IN_ARRAY        reduce using rule 118 (funcion_anonima -> FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE .)
    COUNT           reduce using rule 118 (funcion_anonima -> FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE .)
    SORT            reduce using rule 118 (funcion_anonima -> FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE .)
    PHP_END         reduce using rule 118 (funcion_anonima -> FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE .)
    RBRACE          reduce using rule 118 (funcion_anonima -> FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE .)


state 228

    (124) expression -> VARIABLE .
    (126) expression -> VARIABLE . TIMES VARIABLE
    (127) expression -> VARIABLE . PLUS VARIABLE
    (128) expression -> VARIABLE . MINUS VARIABLE
    (129) expression -> VARIABLE . DIVIDE VARIABLE

    PRINT           reduce using rule 124 (expression -> VARIABLE .)
    PRINT_R         reduce using rule 124 (expression -> VARIABLE .)
    ECHO            reduce using rule 124 (expression -> VARIABLE .)
    READLINE        reduce using rule 124 (expression -> VARIABLE .)
    VARIABLE        reduce using rule 124 (expression -> VARIABLE .)
    WHILE           reduce using rule 124 (expression -> VARIABLE .)
    IF              reduce using rule 124 (expression -> VARIABLE .)
    RLLAVE          reduce using rule 124 (expression -> VARIABLE .)
    ELSE            reduce using rule 124 (expression -> VARIABLE .)
    FOR             reduce using rule 124 (expression -> VARIABLE .)
    LBRACKET        reduce using rule 124 (expression -> VARIABLE .)
    LBRACE          reduce using rule 124 (expression -> VARIABLE .)
    FUNCTION        reduce using rule 124 (expression -> VARIABLE .)
    STRLEN          reduce using rule 124 (expression -> VARIABLE .)
    STRPOS          reduce using rule 124 (expression -> VARIABLE .)
    ARRAY_PUSH      reduce using rule 124 (expression -> VARIABLE .)
    ARRAY_POP       reduce using rule 124 (expression -> VARIABLE .)
    IN_ARRAY        reduce using rule 124 (expression -> VARIABLE .)
    COUNT           reduce using rule 124 (expression -> VARIABLE .)
    SORT            reduce using rule 124 (expression -> VARIABLE .)
    PHP_END         reduce using rule 124 (expression -> VARIABLE .)
    RBRACE          reduce using rule 124 (expression -> VARIABLE .)
    TIMES           shift and go to state 236
    PLUS            shift and go to state 237
    MINUS           shift and go to state 238
    DIVIDE          shift and go to state 239


state 229

    (121) arrow_function -> VARIABLE EQUAL FN LPAREN parameter_list RPAREN ARROW expression .

    PRINT           reduce using rule 121 (arrow_function -> VARIABLE EQUAL FN LPAREN parameter_list RPAREN ARROW expression .)
    PRINT_R         reduce using rule 121 (arrow_function -> VARIABLE EQUAL FN LPAREN parameter_list RPAREN ARROW expression .)
    ECHO            reduce using rule 121 (arrow_function -> VARIABLE EQUAL FN LPAREN parameter_list RPAREN ARROW expression .)
    READLINE        reduce using rule 121 (arrow_function -> VARIABLE EQUAL FN LPAREN parameter_list RPAREN ARROW expression .)
    VARIABLE        reduce using rule 121 (arrow_function -> VARIABLE EQUAL FN LPAREN parameter_list RPAREN ARROW expression .)
    WHILE           reduce using rule 121 (arrow_function -> VARIABLE EQUAL FN LPAREN parameter_list RPAREN ARROW expression .)
    IF              reduce using rule 121 (arrow_function -> VARIABLE EQUAL FN LPAREN parameter_list RPAREN ARROW expression .)
    RLLAVE          reduce using rule 121 (arrow_function -> VARIABLE EQUAL FN LPAREN parameter_list RPAREN ARROW expression .)
    ELSE            reduce using rule 121 (arrow_function -> VARIABLE EQUAL FN LPAREN parameter_list RPAREN ARROW expression .)
    FOR             reduce using rule 121 (arrow_function -> VARIABLE EQUAL FN LPAREN parameter_list RPAREN ARROW expression .)
    LBRACKET        reduce using rule 121 (arrow_function -> VARIABLE EQUAL FN LPAREN parameter_list RPAREN ARROW expression .)
    LBRACE          reduce using rule 121 (arrow_function -> VARIABLE EQUAL FN LPAREN parameter_list RPAREN ARROW expression .)
    FUNCTION        reduce using rule 121 (arrow_function -> VARIABLE EQUAL FN LPAREN parameter_list RPAREN ARROW expression .)
    STRLEN          reduce using rule 121 (arrow_function -> VARIABLE EQUAL FN LPAREN parameter_list RPAREN ARROW expression .)
    STRPOS          reduce using rule 121 (arrow_function -> VARIABLE EQUAL FN LPAREN parameter_list RPAREN ARROW expression .)
    ARRAY_PUSH      reduce using rule 121 (arrow_function -> VARIABLE EQUAL FN LPAREN parameter_list RPAREN ARROW expression .)
    ARRAY_POP       reduce using rule 121 (arrow_function -> VARIABLE EQUAL FN LPAREN parameter_list RPAREN ARROW expression .)
    IN_ARRAY        reduce using rule 121 (arrow_function -> VARIABLE EQUAL FN LPAREN parameter_list RPAREN ARROW expression .)
    COUNT           reduce using rule 121 (arrow_function -> VARIABLE EQUAL FN LPAREN parameter_list RPAREN ARROW expression .)
    SORT            reduce using rule 121 (arrow_function -> VARIABLE EQUAL FN LPAREN parameter_list RPAREN ARROW expression .)
    PHP_END         reduce using rule 121 (arrow_function -> VARIABLE EQUAL FN LPAREN parameter_list RPAREN ARROW expression .)
    RBRACE          reduce using rule 121 (arrow_function -> VARIABLE EQUAL FN LPAREN parameter_list RPAREN ARROW expression .)


state 230

    (125) expression -> NUMBER .

    PRINT           reduce using rule 125 (expression -> NUMBER .)
    PRINT_R         reduce using rule 125 (expression -> NUMBER .)
    ECHO            reduce using rule 125 (expression -> NUMBER .)
    READLINE        reduce using rule 125 (expression -> NUMBER .)
    VARIABLE        reduce using rule 125 (expression -> NUMBER .)
    WHILE           reduce using rule 125 (expression -> NUMBER .)
    IF              reduce using rule 125 (expression -> NUMBER .)
    RLLAVE          reduce using rule 125 (expression -> NUMBER .)
    ELSE            reduce using rule 125 (expression -> NUMBER .)
    FOR             reduce using rule 125 (expression -> NUMBER .)
    LBRACKET        reduce using rule 125 (expression -> NUMBER .)
    LBRACE          reduce using rule 125 (expression -> NUMBER .)
    FUNCTION        reduce using rule 125 (expression -> NUMBER .)
    STRLEN          reduce using rule 125 (expression -> NUMBER .)
    STRPOS          reduce using rule 125 (expression -> NUMBER .)
    ARRAY_PUSH      reduce using rule 125 (expression -> NUMBER .)
    ARRAY_POP       reduce using rule 125 (expression -> NUMBER .)
    IN_ARRAY        reduce using rule 125 (expression -> NUMBER .)
    COUNT           reduce using rule 125 (expression -> NUMBER .)
    SORT            reduce using rule 125 (expression -> NUMBER .)
    PHP_END         reduce using rule 125 (expression -> NUMBER .)
    RBRACE          reduce using rule 125 (expression -> NUMBER .)


state 231

    (74) for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN . LLLAVE instrucciones RLLAVE

    LLLAVE          shift and go to state 240


state 232

    (77) increment -> VARIABLE INCREMENT .

    RPAREN          reduce using rule 77 (increment -> VARIABLE INCREMENT .)


state 233

    (78) increment -> VARIABLE DECREMENT .

    RPAREN          reduce using rule 78 (increment -> VARIABLE DECREMENT .)


state 234

    (79) increment -> VARIABLE PLUS_ASSIGN . valor
    (20) valor -> . NUMBER
    (21) valor -> . FLOAT
    (22) valor -> . STRING
    (23) valor -> . BOOLEAN
    (24) valor -> . VARIABLE
    (25) valor -> . ID

    NUMBER          shift and go to state 52
    FLOAT           shift and go to state 53
    STRING          shift and go to state 54
    BOOLEAN         shift and go to state 55
    VARIABLE        shift and go to state 56
    ID              shift and go to state 57

    valor                          shift and go to state 241

state 235

    (80) increment -> VARIABLE MINUS_ASSIGN . valor
    (20) valor -> . NUMBER
    (21) valor -> . FLOAT
    (22) valor -> . STRING
    (23) valor -> . BOOLEAN
    (24) valor -> . VARIABLE
    (25) valor -> . ID

    NUMBER          shift and go to state 52
    FLOAT           shift and go to state 53
    STRING          shift and go to state 54
    BOOLEAN         shift and go to state 55
    VARIABLE        shift and go to state 56
    ID              shift and go to state 57

    valor                          shift and go to state 242

state 236

    (126) expression -> VARIABLE TIMES . VARIABLE

    VARIABLE        shift and go to state 243


state 237

    (127) expression -> VARIABLE PLUS . VARIABLE

    VARIABLE        shift and go to state 244


state 238

    (128) expression -> VARIABLE MINUS . VARIABLE

    VARIABLE        shift and go to state 245


state 239

    (129) expression -> VARIABLE DIVIDE . VARIABLE

    VARIABLE        shift and go to state 246


state 240

    (74) for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE . instrucciones RLLAVE
    (4) instrucciones -> . instruccion
    (5) instrucciones -> . instrucciones instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (15) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (16) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . ECHO valor PUNTOYCOMA
    (19) imprimir -> . ECHO concatenar PUNTOYCOMA
    (30) solicitud_datos -> . READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (31) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (32) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (33) indexacion -> . VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (34) estructurasControl -> . while
    (35) estructurasControl -> . if
    (36) estructurasControl -> . else
    (37) estructurasControl -> . for_statement
    (55) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (56) asignacion -> . VARIABLE IGUAL valor
    (83) estructurasDatos -> . array
    (84) estructurasDatos -> . lista
    (85) estructurasDatos -> . diccionario
    (102) funciones -> . funcioninbuilt
    (103) funciones -> . funcion_anonima
    (104) funciones -> . arrow_function
    (67) while -> . WHILE LBRACE condicion RBRACE bloque
    (38) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (39) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (65) else -> . RLLAVE ELSE LLLAVE instrucciones RLLAVE
    (66) else -> . ELSE LLLAVE instrucciones RLLAVE
    (74) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (86) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (87) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (88) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (89) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (96) lista -> . LBRACKET RBRACKET
    (97) lista -> . LBRACKET elementos RBRACKET
    (98) diccionario -> . LBRACE pares RBRACE
    (105) funcioninbuilt -> . funcionesdefin LPAREN operaciones RPAREN
    (106) funcioninbuilt -> . funcionesdefin LPAREN RPAREN
    (118) funcion_anonima -> . FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE
    (121) arrow_function -> . VARIABLE EQUAL FN LPAREN parameter_list RPAREN ARROW expression
    (107) funcionesdefin -> . STRLEN
    (108) funcionesdefin -> . STRPOS
    (109) funcionesdefin -> . ARRAY_PUSH
    (110) funcionesdefin -> . ARRAY_POP
    (111) funcionesdefin -> . IN_ARRAY
    (112) funcionesdefin -> . COUNT
    (113) funcionesdefin -> . SORT

    PRINT           shift and go to state 15
    PRINT_R         shift and go to state 16
    ECHO            shift and go to state 17
    READLINE        shift and go to state 18
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 31
    IF              shift and go to state 33
    RLLAVE          shift and go to state 34
    ELSE            shift and go to state 35
    FOR             shift and go to state 36
    LBRACKET        shift and go to state 20
    LBRACE          shift and go to state 32
    FUNCTION        shift and go to state 38
    STRLEN          shift and go to state 39
    STRPOS          shift and go to state 40
    ARRAY_PUSH      shift and go to state 41
    ARRAY_POP       shift and go to state 42
    IN_ARRAY        shift and go to state 43
    COUNT           shift and go to state 44
    SORT            shift and go to state 45

    instrucciones                  shift and go to state 247
    instruccion                    shift and go to state 6
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    while                          shift and go to state 21
    if                             shift and go to state 22
    else                           shift and go to state 23
    for_statement                  shift and go to state 24
    array                          shift and go to state 25
    lista                          shift and go to state 26
    diccionario                    shift and go to state 27
    funcioninbuilt                 shift and go to state 28
    funcion_anonima                shift and go to state 29
    arrow_function                 shift and go to state 30
    funcionesdefin                 shift and go to state 37

state 241

    (79) increment -> VARIABLE PLUS_ASSIGN valor .

    RPAREN          reduce using rule 79 (increment -> VARIABLE PLUS_ASSIGN valor .)


state 242

    (80) increment -> VARIABLE MINUS_ASSIGN valor .

    RPAREN          reduce using rule 80 (increment -> VARIABLE MINUS_ASSIGN valor .)


state 243

    (126) expression -> VARIABLE TIMES VARIABLE .

    PRINT           reduce using rule 126 (expression -> VARIABLE TIMES VARIABLE .)
    PRINT_R         reduce using rule 126 (expression -> VARIABLE TIMES VARIABLE .)
    ECHO            reduce using rule 126 (expression -> VARIABLE TIMES VARIABLE .)
    READLINE        reduce using rule 126 (expression -> VARIABLE TIMES VARIABLE .)
    VARIABLE        reduce using rule 126 (expression -> VARIABLE TIMES VARIABLE .)
    WHILE           reduce using rule 126 (expression -> VARIABLE TIMES VARIABLE .)
    IF              reduce using rule 126 (expression -> VARIABLE TIMES VARIABLE .)
    RLLAVE          reduce using rule 126 (expression -> VARIABLE TIMES VARIABLE .)
    ELSE            reduce using rule 126 (expression -> VARIABLE TIMES VARIABLE .)
    FOR             reduce using rule 126 (expression -> VARIABLE TIMES VARIABLE .)
    LBRACKET        reduce using rule 126 (expression -> VARIABLE TIMES VARIABLE .)
    LBRACE          reduce using rule 126 (expression -> VARIABLE TIMES VARIABLE .)
    FUNCTION        reduce using rule 126 (expression -> VARIABLE TIMES VARIABLE .)
    STRLEN          reduce using rule 126 (expression -> VARIABLE TIMES VARIABLE .)
    STRPOS          reduce using rule 126 (expression -> VARIABLE TIMES VARIABLE .)
    ARRAY_PUSH      reduce using rule 126 (expression -> VARIABLE TIMES VARIABLE .)
    ARRAY_POP       reduce using rule 126 (expression -> VARIABLE TIMES VARIABLE .)
    IN_ARRAY        reduce using rule 126 (expression -> VARIABLE TIMES VARIABLE .)
    COUNT           reduce using rule 126 (expression -> VARIABLE TIMES VARIABLE .)
    SORT            reduce using rule 126 (expression -> VARIABLE TIMES VARIABLE .)
    PHP_END         reduce using rule 126 (expression -> VARIABLE TIMES VARIABLE .)
    RBRACE          reduce using rule 126 (expression -> VARIABLE TIMES VARIABLE .)


state 244

    (127) expression -> VARIABLE PLUS VARIABLE .

    PRINT           reduce using rule 127 (expression -> VARIABLE PLUS VARIABLE .)
    PRINT_R         reduce using rule 127 (expression -> VARIABLE PLUS VARIABLE .)
    ECHO            reduce using rule 127 (expression -> VARIABLE PLUS VARIABLE .)
    READLINE        reduce using rule 127 (expression -> VARIABLE PLUS VARIABLE .)
    VARIABLE        reduce using rule 127 (expression -> VARIABLE PLUS VARIABLE .)
    WHILE           reduce using rule 127 (expression -> VARIABLE PLUS VARIABLE .)
    IF              reduce using rule 127 (expression -> VARIABLE PLUS VARIABLE .)
    RLLAVE          reduce using rule 127 (expression -> VARIABLE PLUS VARIABLE .)
    ELSE            reduce using rule 127 (expression -> VARIABLE PLUS VARIABLE .)
    FOR             reduce using rule 127 (expression -> VARIABLE PLUS VARIABLE .)
    LBRACKET        reduce using rule 127 (expression -> VARIABLE PLUS VARIABLE .)
    LBRACE          reduce using rule 127 (expression -> VARIABLE PLUS VARIABLE .)
    FUNCTION        reduce using rule 127 (expression -> VARIABLE PLUS VARIABLE .)
    STRLEN          reduce using rule 127 (expression -> VARIABLE PLUS VARIABLE .)
    STRPOS          reduce using rule 127 (expression -> VARIABLE PLUS VARIABLE .)
    ARRAY_PUSH      reduce using rule 127 (expression -> VARIABLE PLUS VARIABLE .)
    ARRAY_POP       reduce using rule 127 (expression -> VARIABLE PLUS VARIABLE .)
    IN_ARRAY        reduce using rule 127 (expression -> VARIABLE PLUS VARIABLE .)
    COUNT           reduce using rule 127 (expression -> VARIABLE PLUS VARIABLE .)
    SORT            reduce using rule 127 (expression -> VARIABLE PLUS VARIABLE .)
    PHP_END         reduce using rule 127 (expression -> VARIABLE PLUS VARIABLE .)
    RBRACE          reduce using rule 127 (expression -> VARIABLE PLUS VARIABLE .)


state 245

    (128) expression -> VARIABLE MINUS VARIABLE .

    PRINT           reduce using rule 128 (expression -> VARIABLE MINUS VARIABLE .)
    PRINT_R         reduce using rule 128 (expression -> VARIABLE MINUS VARIABLE .)
    ECHO            reduce using rule 128 (expression -> VARIABLE MINUS VARIABLE .)
    READLINE        reduce using rule 128 (expression -> VARIABLE MINUS VARIABLE .)
    VARIABLE        reduce using rule 128 (expression -> VARIABLE MINUS VARIABLE .)
    WHILE           reduce using rule 128 (expression -> VARIABLE MINUS VARIABLE .)
    IF              reduce using rule 128 (expression -> VARIABLE MINUS VARIABLE .)
    RLLAVE          reduce using rule 128 (expression -> VARIABLE MINUS VARIABLE .)
    ELSE            reduce using rule 128 (expression -> VARIABLE MINUS VARIABLE .)
    FOR             reduce using rule 128 (expression -> VARIABLE MINUS VARIABLE .)
    LBRACKET        reduce using rule 128 (expression -> VARIABLE MINUS VARIABLE .)
    LBRACE          reduce using rule 128 (expression -> VARIABLE MINUS VARIABLE .)
    FUNCTION        reduce using rule 128 (expression -> VARIABLE MINUS VARIABLE .)
    STRLEN          reduce using rule 128 (expression -> VARIABLE MINUS VARIABLE .)
    STRPOS          reduce using rule 128 (expression -> VARIABLE MINUS VARIABLE .)
    ARRAY_PUSH      reduce using rule 128 (expression -> VARIABLE MINUS VARIABLE .)
    ARRAY_POP       reduce using rule 128 (expression -> VARIABLE MINUS VARIABLE .)
    IN_ARRAY        reduce using rule 128 (expression -> VARIABLE MINUS VARIABLE .)
    COUNT           reduce using rule 128 (expression -> VARIABLE MINUS VARIABLE .)
    SORT            reduce using rule 128 (expression -> VARIABLE MINUS VARIABLE .)
    PHP_END         reduce using rule 128 (expression -> VARIABLE MINUS VARIABLE .)
    RBRACE          reduce using rule 128 (expression -> VARIABLE MINUS VARIABLE .)


state 246

    (129) expression -> VARIABLE DIVIDE VARIABLE .

    PRINT           reduce using rule 129 (expression -> VARIABLE DIVIDE VARIABLE .)
    PRINT_R         reduce using rule 129 (expression -> VARIABLE DIVIDE VARIABLE .)
    ECHO            reduce using rule 129 (expression -> VARIABLE DIVIDE VARIABLE .)
    READLINE        reduce using rule 129 (expression -> VARIABLE DIVIDE VARIABLE .)
    VARIABLE        reduce using rule 129 (expression -> VARIABLE DIVIDE VARIABLE .)
    WHILE           reduce using rule 129 (expression -> VARIABLE DIVIDE VARIABLE .)
    IF              reduce using rule 129 (expression -> VARIABLE DIVIDE VARIABLE .)
    RLLAVE          reduce using rule 129 (expression -> VARIABLE DIVIDE VARIABLE .)
    ELSE            reduce using rule 129 (expression -> VARIABLE DIVIDE VARIABLE .)
    FOR             reduce using rule 129 (expression -> VARIABLE DIVIDE VARIABLE .)
    LBRACKET        reduce using rule 129 (expression -> VARIABLE DIVIDE VARIABLE .)
    LBRACE          reduce using rule 129 (expression -> VARIABLE DIVIDE VARIABLE .)
    FUNCTION        reduce using rule 129 (expression -> VARIABLE DIVIDE VARIABLE .)
    STRLEN          reduce using rule 129 (expression -> VARIABLE DIVIDE VARIABLE .)
    STRPOS          reduce using rule 129 (expression -> VARIABLE DIVIDE VARIABLE .)
    ARRAY_PUSH      reduce using rule 129 (expression -> VARIABLE DIVIDE VARIABLE .)
    ARRAY_POP       reduce using rule 129 (expression -> VARIABLE DIVIDE VARIABLE .)
    IN_ARRAY        reduce using rule 129 (expression -> VARIABLE DIVIDE VARIABLE .)
    COUNT           reduce using rule 129 (expression -> VARIABLE DIVIDE VARIABLE .)
    SORT            reduce using rule 129 (expression -> VARIABLE DIVIDE VARIABLE .)
    PHP_END         reduce using rule 129 (expression -> VARIABLE DIVIDE VARIABLE .)
    RBRACE          reduce using rule 129 (expression -> VARIABLE DIVIDE VARIABLE .)


state 247

    (74) for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones . RLLAVE
    (5) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (15) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (16) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . ECHO valor PUNTOYCOMA
    (19) imprimir -> . ECHO concatenar PUNTOYCOMA
    (30) solicitud_datos -> . READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (31) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (32) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (33) indexacion -> . VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (34) estructurasControl -> . while
    (35) estructurasControl -> . if
    (36) estructurasControl -> . else
    (37) estructurasControl -> . for_statement
    (55) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (56) asignacion -> . VARIABLE IGUAL valor
    (83) estructurasDatos -> . array
    (84) estructurasDatos -> . lista
    (85) estructurasDatos -> . diccionario
    (102) funciones -> . funcioninbuilt
    (103) funciones -> . funcion_anonima
    (104) funciones -> . arrow_function
    (67) while -> . WHILE LBRACE condicion RBRACE bloque
    (38) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (39) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (65) else -> . RLLAVE ELSE LLLAVE instrucciones RLLAVE
    (66) else -> . ELSE LLLAVE instrucciones RLLAVE
    (74) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (86) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (87) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (88) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (89) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (96) lista -> . LBRACKET RBRACKET
    (97) lista -> . LBRACKET elementos RBRACKET
    (98) diccionario -> . LBRACE pares RBRACE
    (105) funcioninbuilt -> . funcionesdefin LPAREN operaciones RPAREN
    (106) funcioninbuilt -> . funcionesdefin LPAREN RPAREN
    (118) funcion_anonima -> . FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE
    (121) arrow_function -> . VARIABLE EQUAL FN LPAREN parameter_list RPAREN ARROW expression
    (107) funcionesdefin -> . STRLEN
    (108) funcionesdefin -> . STRPOS
    (109) funcionesdefin -> . ARRAY_PUSH
    (110) funcionesdefin -> . ARRAY_POP
    (111) funcionesdefin -> . IN_ARRAY
    (112) funcionesdefin -> . COUNT
    (113) funcionesdefin -> . SORT

    RLLAVE          shift and go to state 248
    PRINT           shift and go to state 15
    PRINT_R         shift and go to state 16
    ECHO            shift and go to state 17
    READLINE        shift and go to state 18
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 31
    IF              shift and go to state 33
    ELSE            shift and go to state 35
    FOR             shift and go to state 36
    LBRACKET        shift and go to state 20
    LBRACE          shift and go to state 32
    FUNCTION        shift and go to state 38
    STRLEN          shift and go to state 39
    STRPOS          shift and go to state 40
    ARRAY_PUSH      shift and go to state 41
    ARRAY_POP       shift and go to state 42
    IN_ARRAY        shift and go to state 43
    COUNT           shift and go to state 44
    SORT            shift and go to state 45

    instruccion                    shift and go to state 47
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    while                          shift and go to state 21
    if                             shift and go to state 22
    else                           shift and go to state 23
    for_statement                  shift and go to state 24
    array                          shift and go to state 25
    lista                          shift and go to state 26
    diccionario                    shift and go to state 27
    funcioninbuilt                 shift and go to state 28
    funcion_anonima                shift and go to state 29
    arrow_function                 shift and go to state 30
    funcionesdefin                 shift and go to state 37

state 248

    (74) for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .
    (65) else -> RLLAVE . ELSE LLLAVE instrucciones RLLAVE

  ! shift/reduce conflict for ELSE resolved as shift
    PRINT           reduce using rule 74 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    PRINT_R         reduce using rule 74 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    ECHO            reduce using rule 74 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    READLINE        reduce using rule 74 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    VARIABLE        reduce using rule 74 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    WHILE           reduce using rule 74 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    IF              reduce using rule 74 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    RLLAVE          reduce using rule 74 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    FOR             reduce using rule 74 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    LBRACKET        reduce using rule 74 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    LBRACE          reduce using rule 74 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    FUNCTION        reduce using rule 74 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    STRLEN          reduce using rule 74 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    STRPOS          reduce using rule 74 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    ARRAY_PUSH      reduce using rule 74 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    ARRAY_POP       reduce using rule 74 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    IN_ARRAY        reduce using rule 74 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    COUNT           reduce using rule 74 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    SORT            reduce using rule 74 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    PHP_END         reduce using rule 74 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    RBRACE          reduce using rule 74 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    ELSE            shift and go to state 73

  ! ELSE            [ reduce using rule 74 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .) ]

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PUNTOYCOMA in state 50 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 78 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 80 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 157 resolved as shift
WARNING: shift/reduce conflict for AND_LOGICAL in state 189 resolved as shift
WARNING: shift/reduce conflict for OR_LOGICAL in state 189 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 197 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 200 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 200 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 200 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 200 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 200 resolved as shift
WARNING: shift/reduce conflict for MOD in state 200 resolved as shift
WARNING: shift/reduce conflict for POT in state 200 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 222 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 223 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 248 resolved as shift
WARNING: reduce/reduce conflict in state 200 resolved using rule (operacion -> operacion operadorAritmetico operacion)
WARNING: rejected rule (operaciones -> operacion) in state 200
