Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    AND
    AND_WORD
    AS
    BREAK
    CALLABLE
    CASE
    CATCH
    CLASS
    CLONE
    CLOSEINTER
    COMENTARIO_LINEA
    COMENTARIO_MULTILINEA
    COMENTARIO_SHELL
    DECLARE
    DEFAULT
    DIE
    DIVIDE_ASSIGN
    DOBLEDIVIDE
    DOBLEPUNTO
    ELSEIF
    EMPTY
    ENDFOR
    ENDFOREACH
    ENDIF
    ENDSWITCH
    ENDWHILE
    EVAL
    EXIT
    EXTENDS
    FINAL
    FINALLY
    FOREACH
    GLOBAL
    GOTO
    GREATER_EQUAL
    IMPLEMENTS
    INCLUDE
    INSTANCEOF
    INSTEADOF
    INTERFACE
    ISSET
    LESS_EQUAL
    LIST
    MATCH
    MENOR_MAYOR
    MODULO_ASSIGN
    NEW
    NOT_LOGICAL
    NUMERAL
    OR
    OR_WORD
    PRIVATE
    PROTECTED
    PUBLIC
    REQUIRE
    RETURN
    STATIC
    SWITCH
    THROW
    TIMES_ASSIGN
    TRAIT
    TRY
    UNSET
    USE
    VAR
    VIRGULILLA
    XOR
    XOR_WORD
    YIELD
    YIELD_FROM

Grammar

Rule 0     S' -> padre
Rule 1     padre -> PHP_START cuerpo PHP_END
Rule 2     cuerpo -> instrucciones
Rule 3     cuerpo -> empty
Rule 4     instrucciones -> instruccion
Rule 5     instrucciones -> instrucciones instruccion
Rule 6     instruccion -> imprimir
Rule 7     instruccion -> solicitud_datos
Rule 8     instruccion -> input
Rule 9     instruccion -> indexacion
Rule 10    instruccion -> estructurasControl
Rule 11    instruccion -> asignacion
Rule 12    instruccion -> estructurasDatos
Rule 13    instruccion -> funciones
Rule 14    instruccion -> expresiones
Rule 15    instruccion -> increment
Rule 16    imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA
Rule 17    imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA
Rule 18    imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA
Rule 19    imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
Rule 20    imprimir -> ECHO valor PUNTOYCOMA
Rule 21    imprimir -> ECHO concatenar PUNTOYCOMA
Rule 22    imprimir -> ECHO valor COMA VARIABLE valor PUNTOYCOMA
Rule 23    valor -> NUMBER
Rule 24    valor -> FLOAT
Rule 25    valor -> STRING
Rule 26    valor -> BOOLEAN
Rule 27    valor -> VARIABLE
Rule 28    valor -> ID
Rule 29    valor -> expression
Rule 30    argumentos -> valor
Rule 31    argumentos -> argumentos COMA valor
Rule 32    concatenar -> valor
Rule 33    concatenar -> valor PUNTO concatenar
Rule 34    solicitud_datos -> VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA
Rule 35    solicitud_datos -> VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA
Rule 36    input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
Rule 37    indexacion -> VARIABLE LBRACKET valor RBRACKET
Rule 38    indexacion -> ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
Rule 39    estructurasControl -> while
Rule 40    estructurasControl -> if
Rule 41    estructurasControl -> else
Rule 42    estructurasControl -> for_statement
Rule 43    if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
Rule 44    if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
Rule 45    comparaciones -> comparacion
Rule 46    comparaciones -> comparacion operadores comparaciones
Rule 47    comparacion -> VARIABLE comparadorNum VARIABLE
Rule 48    comparacion -> valor comparador valor
Rule 49    comparacion -> VARIABLE comparadorNum valor
Rule 50    comparadorNum -> MAYOR
Rule 51    comparadorNum -> MAYORIGUAL
Rule 52    comparadorNum -> MENOR
Rule 53    comparadorNum -> MENORIGUAL
Rule 54    comparador -> EQUAL
Rule 55    comparador -> NOT_IDENTICAL
Rule 56    comparador -> NOT_EQUAL
Rule 57    comparador -> IGUAL
Rule 58    comparador -> IDENTICAL
Rule 59    comparador -> MAYOR
Rule 60    comparador -> MENOR
Rule 61    operadores -> AND_LOGICAL
Rule 62    operadores -> OR_LOGICAL
Rule 63    asignacion -> VARIABLE IGUAL valor PUNTOYCOMA
Rule 64    asignacion -> VARIABLE IGUAL ARRAY PUNTOYCOMA
Rule 65    asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
Rule 66    expresiones -> VARIABLE IGUAL valor operadorAritmetico valor PUNTOYCOMA
Rule 67    expresiones -> VARIABLE IGUAL valor operadorAritmetico operacion
Rule 68    operacion -> valor operadorAritmetico valor PUNTOYCOMA
Rule 69    operacion -> operacion operadorAritmetico operacion
Rule 70    operadorAritmetico -> PLUS
Rule 71    operadorAritmetico -> MINUS
Rule 72    operadorAritmetico -> TIMES
Rule 73    operadorAritmetico -> DIVIDE
Rule 74    operadorAritmetico -> MOD
Rule 75    operadorAritmetico -> POT
Rule 76    else -> ELSE LLLAVE instrucciones RLLAVE
Rule 77    while -> WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE
Rule 78    condicion -> condicion_simple
Rule 79    condicion -> condicion compuesta_logica condicion
Rule 80    condicion_simple -> valor comparador valor
Rule 81    condicion_simple -> VARIABLE comparador valor
Rule 82    condicion_simple -> VARIABLE comparador VARIABLE
Rule 83    compuesta_logica -> AND_LOGICAL
Rule 84    compuesta_logica -> OR_LOGICAL
Rule 85    for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
Rule 86    initialization -> VARIABLE IGUAL valor
Rule 87    initialization -> empty
Rule 88    increment -> VARIABLE INCREMENT
Rule 89    increment -> VARIABLE DECREMENT
Rule 90    increment -> VARIABLE DECREMENT PUNTOYCOMA
Rule 91    increment -> VARIABLE PLUS_ASSIGN valor
Rule 92    increment -> VARIABLE MINUS_ASSIGN valor
Rule 93    increment -> empty
Rule 94    increment -> VARIABLE INCREMENT PUNTOYCOMA
Rule 95    empty -> <empty>
Rule 96    estructurasDatos -> array
Rule 97    estructurasDatos -> lista
Rule 98    estructurasDatos -> diccionario
Rule 99    array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
Rule 100   array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
Rule 101   array -> VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA
Rule 102   array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
Rule 103   array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
Rule 104   elementos -> elemento
Rule 105   elementos -> elementos COMA elemento
Rule 106   elemento -> valor
Rule 107   elemento -> lista
Rule 108   elemento -> clave_valor
Rule 109   clave_valor -> valor ARROW valor
Rule 110   lista -> LBRACKET RBRACKET
Rule 111   lista -> LBRACKET elementos RBRACKET
Rule 112   diccionario -> LBRACE pares RBRACE
Rule 113   pares -> par
Rule 114   pares -> pares COMA par
Rule 115   par -> STRING ARROW valor
Rule 116   funciones -> funcion
Rule 117   funciones -> funcioninbuilt
Rule 118   funciones -> funcion_anonima
Rule 119   funciones -> arrow_function
Rule 120   funcion -> FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE
Rule 121   funcion -> FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE
Rule 122   funcioninbuilt -> VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA
Rule 123   funcioninbuilt -> VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA
Rule 124   funcionesdefin -> STRLEN
Rule 125   funcionesdefin -> STRPOS
Rule 126   funcionesdefin -> ARRAY_PUSH
Rule 127   funcionesdefin -> ARRAY_POP
Rule 128   funcionesdefin -> IN_ARRAY
Rule 129   funcionesdefin -> COUNT
Rule 130   funcionesdefin -> SORT
Rule 131   operaciones -> operacion
Rule 132   operaciones -> operacion PUNTOYCOMA
Rule 133   operaciones -> operacion operadorAritmetico operaciones
Rule 134   operaciones -> VARIABLE IGUAL operaciones
Rule 135   operaciones -> VARIABLE
Rule 136   funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
Rule 137   parametros -> STRING
Rule 138   parametros -> parametros COMA STRING
Rule 139   parametros -> VARIABLE
Rule 140   parametros -> parametros COMA VARIABLE
Rule 141   arrow_function -> VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA
Rule 142   parameter_list -> VARIABLE
Rule 143   parameter_list -> VARIABLE COMA parameter_list
Rule 144   expression -> VARIABLE
Rule 145   expression -> NUMBER
Rule 146   expression -> VARIABLE TIMES VARIABLE
Rule 147   expression -> VARIABLE PLUS VARIABLE
Rule 148   expression -> VARIABLE MINUS VARIABLE
Rule 149   expression -> VARIABLE DIVIDE VARIABLE
Rule 150   expression -> VARIABLE TIMES NUMBER
Rule 151   expression -> VARIABLE PLUS NUMBER
Rule 152   expression -> VARIABLE MINUS NUMBER
Rule 153   expression -> VARIABLE DIVIDE NUMBER
Rule 154   expression -> VARIABLE MOD VARIABLE

Terminals, with rules where they appear

ABSTRACT             : 
AND                  : 
AND_LOGICAL          : 61 83
AND_WORD             : 
ARRAY                : 64 65 99 100 101
ARRAY_POP            : 127
ARRAY_PUSH           : 126
ARROW                : 109 115 141
AS                   : 
BOOLEAN              : 26
BREAK                : 
CALLABLE             : 
CASE                 : 
CATCH                : 
CLASS                : 
CLONE                : 
CLOSEINTER           : 
COMA                 : 22 31 105 114 138 140 143
COMENTARIO_LINEA     : 
COMENTARIO_MULTILINEA : 
COMENTARIO_SHELL     : 
COUNT                : 129
DECLARE              : 
DECREMENT            : 89 90
DEFAULT              : 
DIE                  : 
DIVIDE               : 73 149 153
DIVIDE_ASSIGN        : 
DOBLEDIVIDE          : 
DOBLEPUNTO           : 
ECHO                 : 20 21 22 38
ELSE                 : 76
ELSEIF               : 
EMPTY                : 
ENDFOR               : 
ENDFOREACH           : 
ENDIF                : 
ENDSWITCH            : 
ENDWHILE             : 
EQUAL                : 54
EVAL                 : 
EXIT                 : 
EXTENDS              : 
FGETS                : 36
FINAL                : 
FINALLY              : 
FLOAT                : 24
FN                   : 141
FOR                  : 85
FOREACH              : 
FUNCTION             : 120 121 136
GLOBAL               : 
GOTO                 : 
GREATER_EQUAL        : 
ID                   : 28 120 121
IDENTICAL            : 58
IF                   : 43 44
IGUAL                : 34 35 36 57 63 64 65 66 67 86 99 100 101 102 103 122 134 136 141
IMPLEMENTS           : 
INCLUDE              : 
INCREMENT            : 88 94
INSTANCEOF           : 
INSTEADOF            : 
INTERFACE            : 
IN_ARRAY             : 128
ISSET                : 
LBRACE               : 112
LBRACKET             : 37 38 102 103 110 111
LESS_EQUAL           : 
LIST                 : 
LLLAVE               : 43 44 76 77 85 120 121 136
LPAREN               : 16 17 18 19 34 35 36 43 44 65 77 85 99 100 101 120 121 122 123 136 141
MATCH                : 
MAYOR                : 50 59
MAYORIGUAL           : 51
MENOR                : 52 60
MENORIGUAL           : 53
MENOR_MAYOR          : 
MINUS                : 71 148 152
MINUS_ASSIGN         : 92
MOD                  : 74 154
MODULO_ASSIGN        : 
NEW                  : 
NOT_EQUAL            : 56
NOT_IDENTICAL        : 55
NOT_LOGICAL          : 
NUMBER               : 23 145 150 151 152 153
NUMERAL              : 
OR                   : 
OR_LOGICAL           : 62 84
OR_WORD              : 
PHP_END              : 1
PHP_START            : 1
PLUS                 : 70 147 151
PLUS_ASSIGN          : 91
POT                  : 75
PRINT                : 16 17
PRINT_R              : 18 19
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
PUNTO                : 33
PUNTOYCOMA           : 16 17 18 19 20 21 22 34 35 36 38 63 64 65 66 68 85 85 90 94 99 100 101 102 103 122 123 132 136 141
RBRACE               : 112
RBRACKET             : 37 38 102 103 110 111
READLINE             : 34 35
REQUIRE              : 
RETURN               : 
RLLAVE               : 43 44 76 77 85 120 121 136
RPAREN               : 16 17 18 19 34 35 36 43 44 65 77 85 99 100 101 120 121 122 123 136 141
SORT                 : 130
STATIC               : 
STRING               : 25 34 115 137 138
STRLEN               : 124
STRPOS               : 125
SWITCH               : 
THROW                : 
TIMES                : 72 146 150
TIMES_ASSIGN         : 
TRAIT                : 
TRY                  : 
UNSET                : 
USE                  : 
VAR                  : 
VARIABLE             : 22 27 34 35 36 36 37 38 44 47 47 49 63 64 65 66 67 81 82 82 86 88 89 90 91 92 94 99 100 101 102 103 122 123 134 135 136 139 140 141 142 143 144 146 146 147 147 148 148 149 149 150 151 152 153 154 154
VIRGULILLA           : 
WHILE                : 77
XOR                  : 
XOR_WORD             : 
YIELD                : 
YIELD_FROM           : 
error                : 

Nonterminals, with rules where they appear

argumentos           : 17 19 31
array                : 96
arrow_function       : 119
asignacion           : 11
clave_valor          : 108
comparacion          : 45 46
comparaciones        : 43 46
comparador           : 48 80 81 82
comparadorNum        : 47 49
compuesta_logica     : 79
concatenar           : 21 33
condicion            : 77 79 79 85
condicion_simple     : 78
cuerpo               : 1
diccionario          : 98
elemento             : 104 105
elementos            : 65 100 103 105 111
else                 : 41
empty                : 3 87 93
estructurasControl   : 10
estructurasDatos     : 12
expresiones          : 14
expression           : 29 141
for_statement        : 42
funcion              : 116
funcion_anonima      : 118
funciones            : 13
funcionesdefin       : 122 123
funcioninbuilt       : 117
if                   : 40
imprimir             : 6
increment            : 15 85
indexacion           : 9
initialization       : 85
input                : 8
instruccion          : 4 5
instrucciones        : 2 5 43 44 76 77 85 120 121 136
lista                : 97 107
operacion            : 67 69 69 131 132 133
operaciones          : 122 133 134
operadorAritmetico   : 66 67 68 69 133
operadores           : 46
padre                : 0
par                  : 113 114
parameter_list       : 141 143
parametros           : 121 136 138 140
pares                : 112 114
solicitud_datos      : 7
valor                : 16 18 20 22 22 30 31 32 33 37 38 48 48 49 63 66 66 67 68 68 80 80 81 86 91 92 101 106 109 109 115
while                : 39

Parsing method: LALR

state 0

    (0) S' -> . padre
    (1) padre -> . PHP_START cuerpo PHP_END

    PHP_START       shift and go to state 2

    padre                          shift and go to state 1

state 1

    (0) S' -> padre .



state 2

    (1) padre -> PHP_START . cuerpo PHP_END
    (2) cuerpo -> . instrucciones
    (3) cuerpo -> . empty
    (4) instrucciones -> . instruccion
    (5) instrucciones -> . instrucciones instruccion
    (95) empty -> .
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) instruccion -> . expresiones
    (15) instruccion -> . increment
    (16) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (19) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (20) imprimir -> . ECHO valor PUNTOYCOMA
    (21) imprimir -> . ECHO concatenar PUNTOYCOMA
    (22) imprimir -> . ECHO valor COMA VARIABLE valor PUNTOYCOMA
    (34) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA
    (36) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (37) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (38) indexacion -> . ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (39) estructurasControl -> . while
    (40) estructurasControl -> . if
    (41) estructurasControl -> . else
    (42) estructurasControl -> . for_statement
    (63) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (64) asignacion -> . VARIABLE IGUAL ARRAY PUNTOYCOMA
    (65) asignacion -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (96) estructurasDatos -> . array
    (97) estructurasDatos -> . lista
    (98) estructurasDatos -> . diccionario
    (116) funciones -> . funcion
    (117) funciones -> . funcioninbuilt
    (118) funciones -> . funcion_anonima
    (119) funciones -> . arrow_function
    (66) expresiones -> . VARIABLE IGUAL valor operadorAritmetico valor PUNTOYCOMA
    (67) expresiones -> . VARIABLE IGUAL valor operadorAritmetico operacion
    (88) increment -> . VARIABLE INCREMENT
    (89) increment -> . VARIABLE DECREMENT
    (90) increment -> . VARIABLE DECREMENT PUNTOYCOMA
    (91) increment -> . VARIABLE PLUS_ASSIGN valor
    (92) increment -> . VARIABLE MINUS_ASSIGN valor
    (93) increment -> . empty
    (94) increment -> . VARIABLE INCREMENT PUNTOYCOMA
    (77) while -> . WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE
    (43) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (44) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (76) else -> . ELSE LLLAVE instrucciones RLLAVE
    (85) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (99) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (100) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (101) array -> . VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA
    (102) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (103) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (110) lista -> . LBRACKET RBRACKET
    (111) lista -> . LBRACKET elementos RBRACKET
    (112) diccionario -> . LBRACE pares RBRACE
    (120) funcion -> . FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE
    (121) funcion -> . FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE
    (122) funcioninbuilt -> . VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA
    (123) funcioninbuilt -> . VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA
    (136) funcion_anonima -> . VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (141) arrow_function -> . VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINT_R resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
    PHP_END         reduce using rule 95 (empty -> .)
    PRINT           shift and go to state 17
    PRINT_R         shift and go to state 18
    ECHO            shift and go to state 19
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    FOR             shift and go to state 36
    LBRACKET        shift and go to state 21
    LBRACE          shift and go to state 37
    FUNCTION        shift and go to state 38

  ! PRINT           [ reduce using rule 95 (empty -> .) ]
  ! PRINT_R         [ reduce using rule 95 (empty -> .) ]
  ! ECHO            [ reduce using rule 95 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 95 (empty -> .) ]
  ! WHILE           [ reduce using rule 95 (empty -> .) ]
  ! IF              [ reduce using rule 95 (empty -> .) ]
  ! ELSE            [ reduce using rule 95 (empty -> .) ]
  ! FOR             [ reduce using rule 95 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 95 (empty -> .) ]
  ! LBRACE          [ reduce using rule 95 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 95 (empty -> .) ]

    cuerpo                         shift and go to state 3
    instrucciones                  shift and go to state 4
    empty                          shift and go to state 5
    instruccion                    shift and go to state 6
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    expresiones                    shift and go to state 15
    increment                      shift and go to state 16
    while                          shift and go to state 22
    if                             shift and go to state 23
    else                           shift and go to state 24
    for_statement                  shift and go to state 25
    array                          shift and go to state 26
    lista                          shift and go to state 27
    diccionario                    shift and go to state 28
    funcion                        shift and go to state 29
    funcioninbuilt                 shift and go to state 30
    funcion_anonima                shift and go to state 31
    arrow_function                 shift and go to state 32

state 3

    (1) padre -> PHP_START cuerpo . PHP_END

    PHP_END         shift and go to state 39


state 4

    (2) cuerpo -> instrucciones .
    (5) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) instruccion -> . expresiones
    (15) instruccion -> . increment
    (16) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (19) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (20) imprimir -> . ECHO valor PUNTOYCOMA
    (21) imprimir -> . ECHO concatenar PUNTOYCOMA
    (22) imprimir -> . ECHO valor COMA VARIABLE valor PUNTOYCOMA
    (34) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA
    (36) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (37) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (38) indexacion -> . ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (39) estructurasControl -> . while
    (40) estructurasControl -> . if
    (41) estructurasControl -> . else
    (42) estructurasControl -> . for_statement
    (63) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (64) asignacion -> . VARIABLE IGUAL ARRAY PUNTOYCOMA
    (65) asignacion -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (96) estructurasDatos -> . array
    (97) estructurasDatos -> . lista
    (98) estructurasDatos -> . diccionario
    (116) funciones -> . funcion
    (117) funciones -> . funcioninbuilt
    (118) funciones -> . funcion_anonima
    (119) funciones -> . arrow_function
    (66) expresiones -> . VARIABLE IGUAL valor operadorAritmetico valor PUNTOYCOMA
    (67) expresiones -> . VARIABLE IGUAL valor operadorAritmetico operacion
    (88) increment -> . VARIABLE INCREMENT
    (89) increment -> . VARIABLE DECREMENT
    (90) increment -> . VARIABLE DECREMENT PUNTOYCOMA
    (91) increment -> . VARIABLE PLUS_ASSIGN valor
    (92) increment -> . VARIABLE MINUS_ASSIGN valor
    (93) increment -> . empty
    (94) increment -> . VARIABLE INCREMENT PUNTOYCOMA
    (77) while -> . WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE
    (43) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (44) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (76) else -> . ELSE LLLAVE instrucciones RLLAVE
    (85) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (99) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (100) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (101) array -> . VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA
    (102) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (103) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (110) lista -> . LBRACKET RBRACKET
    (111) lista -> . LBRACKET elementos RBRACKET
    (112) diccionario -> . LBRACE pares RBRACE
    (120) funcion -> . FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE
    (121) funcion -> . FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE
    (122) funcioninbuilt -> . VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA
    (123) funcioninbuilt -> . VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA
    (136) funcion_anonima -> . VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (141) arrow_function -> . VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA
    (95) empty -> .

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINT_R resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! reduce/reduce conflict for PHP_END resolved using rule 2 (cuerpo -> instrucciones .)
    PHP_END         reduce using rule 2 (cuerpo -> instrucciones .)
    PRINT           shift and go to state 17
    PRINT_R         shift and go to state 18
    ECHO            shift and go to state 19
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    FOR             shift and go to state 36
    LBRACKET        shift and go to state 21
    LBRACE          shift and go to state 37
    FUNCTION        shift and go to state 38

  ! PRINT           [ reduce using rule 95 (empty -> .) ]
  ! PRINT_R         [ reduce using rule 95 (empty -> .) ]
  ! ECHO            [ reduce using rule 95 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 95 (empty -> .) ]
  ! WHILE           [ reduce using rule 95 (empty -> .) ]
  ! IF              [ reduce using rule 95 (empty -> .) ]
  ! ELSE            [ reduce using rule 95 (empty -> .) ]
  ! FOR             [ reduce using rule 95 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 95 (empty -> .) ]
  ! LBRACE          [ reduce using rule 95 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 95 (empty -> .) ]
  ! PHP_END         [ reduce using rule 95 (empty -> .) ]

    instruccion                    shift and go to state 40
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    expresiones                    shift and go to state 15
    increment                      shift and go to state 16
    while                          shift and go to state 22
    if                             shift and go to state 23
    else                           shift and go to state 24
    for_statement                  shift and go to state 25
    array                          shift and go to state 26
    lista                          shift and go to state 27
    diccionario                    shift and go to state 28
    funcion                        shift and go to state 29
    funcioninbuilt                 shift and go to state 30
    funcion_anonima                shift and go to state 31
    arrow_function                 shift and go to state 32
    empty                          shift and go to state 41

state 5

    (3) cuerpo -> empty .
    (93) increment -> empty .

  ! reduce/reduce conflict for PHP_END resolved using rule 3 (cuerpo -> empty .)
    PHP_END         reduce using rule 3 (cuerpo -> empty .)
    PRINT           reduce using rule 93 (increment -> empty .)
    PRINT_R         reduce using rule 93 (increment -> empty .)
    ECHO            reduce using rule 93 (increment -> empty .)
    VARIABLE        reduce using rule 93 (increment -> empty .)
    WHILE           reduce using rule 93 (increment -> empty .)
    IF              reduce using rule 93 (increment -> empty .)
    ELSE            reduce using rule 93 (increment -> empty .)
    FOR             reduce using rule 93 (increment -> empty .)
    LBRACKET        reduce using rule 93 (increment -> empty .)
    LBRACE          reduce using rule 93 (increment -> empty .)
    FUNCTION        reduce using rule 93 (increment -> empty .)

  ! PHP_END         [ reduce using rule 93 (increment -> empty .) ]


state 6

    (4) instrucciones -> instruccion .

    PRINT           reduce using rule 4 (instrucciones -> instruccion .)
    PRINT_R         reduce using rule 4 (instrucciones -> instruccion .)
    ECHO            reduce using rule 4 (instrucciones -> instruccion .)
    VARIABLE        reduce using rule 4 (instrucciones -> instruccion .)
    WHILE           reduce using rule 4 (instrucciones -> instruccion .)
    IF              reduce using rule 4 (instrucciones -> instruccion .)
    ELSE            reduce using rule 4 (instrucciones -> instruccion .)
    FOR             reduce using rule 4 (instrucciones -> instruccion .)
    LBRACKET        reduce using rule 4 (instrucciones -> instruccion .)
    LBRACE          reduce using rule 4 (instrucciones -> instruccion .)
    FUNCTION        reduce using rule 4 (instrucciones -> instruccion .)
    PHP_END         reduce using rule 4 (instrucciones -> instruccion .)
    RLLAVE          reduce using rule 4 (instrucciones -> instruccion .)


state 7

    (6) instruccion -> imprimir .

    PRINT           reduce using rule 6 (instruccion -> imprimir .)
    PRINT_R         reduce using rule 6 (instruccion -> imprimir .)
    ECHO            reduce using rule 6 (instruccion -> imprimir .)
    VARIABLE        reduce using rule 6 (instruccion -> imprimir .)
    WHILE           reduce using rule 6 (instruccion -> imprimir .)
    IF              reduce using rule 6 (instruccion -> imprimir .)
    ELSE            reduce using rule 6 (instruccion -> imprimir .)
    FOR             reduce using rule 6 (instruccion -> imprimir .)
    LBRACKET        reduce using rule 6 (instruccion -> imprimir .)
    LBRACE          reduce using rule 6 (instruccion -> imprimir .)
    FUNCTION        reduce using rule 6 (instruccion -> imprimir .)
    PHP_END         reduce using rule 6 (instruccion -> imprimir .)
    RLLAVE          reduce using rule 6 (instruccion -> imprimir .)


state 8

    (7) instruccion -> solicitud_datos .

    PRINT           reduce using rule 7 (instruccion -> solicitud_datos .)
    PRINT_R         reduce using rule 7 (instruccion -> solicitud_datos .)
    ECHO            reduce using rule 7 (instruccion -> solicitud_datos .)
    VARIABLE        reduce using rule 7 (instruccion -> solicitud_datos .)
    WHILE           reduce using rule 7 (instruccion -> solicitud_datos .)
    IF              reduce using rule 7 (instruccion -> solicitud_datos .)
    ELSE            reduce using rule 7 (instruccion -> solicitud_datos .)
    FOR             reduce using rule 7 (instruccion -> solicitud_datos .)
    LBRACKET        reduce using rule 7 (instruccion -> solicitud_datos .)
    LBRACE          reduce using rule 7 (instruccion -> solicitud_datos .)
    FUNCTION        reduce using rule 7 (instruccion -> solicitud_datos .)
    PHP_END         reduce using rule 7 (instruccion -> solicitud_datos .)
    RLLAVE          reduce using rule 7 (instruccion -> solicitud_datos .)


state 9

    (8) instruccion -> input .

    PRINT           reduce using rule 8 (instruccion -> input .)
    PRINT_R         reduce using rule 8 (instruccion -> input .)
    ECHO            reduce using rule 8 (instruccion -> input .)
    VARIABLE        reduce using rule 8 (instruccion -> input .)
    WHILE           reduce using rule 8 (instruccion -> input .)
    IF              reduce using rule 8 (instruccion -> input .)
    ELSE            reduce using rule 8 (instruccion -> input .)
    FOR             reduce using rule 8 (instruccion -> input .)
    LBRACKET        reduce using rule 8 (instruccion -> input .)
    LBRACE          reduce using rule 8 (instruccion -> input .)
    FUNCTION        reduce using rule 8 (instruccion -> input .)
    PHP_END         reduce using rule 8 (instruccion -> input .)
    RLLAVE          reduce using rule 8 (instruccion -> input .)


state 10

    (9) instruccion -> indexacion .

    PRINT           reduce using rule 9 (instruccion -> indexacion .)
    PRINT_R         reduce using rule 9 (instruccion -> indexacion .)
    ECHO            reduce using rule 9 (instruccion -> indexacion .)
    VARIABLE        reduce using rule 9 (instruccion -> indexacion .)
    WHILE           reduce using rule 9 (instruccion -> indexacion .)
    IF              reduce using rule 9 (instruccion -> indexacion .)
    ELSE            reduce using rule 9 (instruccion -> indexacion .)
    FOR             reduce using rule 9 (instruccion -> indexacion .)
    LBRACKET        reduce using rule 9 (instruccion -> indexacion .)
    LBRACE          reduce using rule 9 (instruccion -> indexacion .)
    FUNCTION        reduce using rule 9 (instruccion -> indexacion .)
    PHP_END         reduce using rule 9 (instruccion -> indexacion .)
    RLLAVE          reduce using rule 9 (instruccion -> indexacion .)


state 11

    (10) instruccion -> estructurasControl .

    PRINT           reduce using rule 10 (instruccion -> estructurasControl .)
    PRINT_R         reduce using rule 10 (instruccion -> estructurasControl .)
    ECHO            reduce using rule 10 (instruccion -> estructurasControl .)
    VARIABLE        reduce using rule 10 (instruccion -> estructurasControl .)
    WHILE           reduce using rule 10 (instruccion -> estructurasControl .)
    IF              reduce using rule 10 (instruccion -> estructurasControl .)
    ELSE            reduce using rule 10 (instruccion -> estructurasControl .)
    FOR             reduce using rule 10 (instruccion -> estructurasControl .)
    LBRACKET        reduce using rule 10 (instruccion -> estructurasControl .)
    LBRACE          reduce using rule 10 (instruccion -> estructurasControl .)
    FUNCTION        reduce using rule 10 (instruccion -> estructurasControl .)
    PHP_END         reduce using rule 10 (instruccion -> estructurasControl .)
    RLLAVE          reduce using rule 10 (instruccion -> estructurasControl .)


state 12

    (11) instruccion -> asignacion .

    PRINT           reduce using rule 11 (instruccion -> asignacion .)
    PRINT_R         reduce using rule 11 (instruccion -> asignacion .)
    ECHO            reduce using rule 11 (instruccion -> asignacion .)
    VARIABLE        reduce using rule 11 (instruccion -> asignacion .)
    WHILE           reduce using rule 11 (instruccion -> asignacion .)
    IF              reduce using rule 11 (instruccion -> asignacion .)
    ELSE            reduce using rule 11 (instruccion -> asignacion .)
    FOR             reduce using rule 11 (instruccion -> asignacion .)
    LBRACKET        reduce using rule 11 (instruccion -> asignacion .)
    LBRACE          reduce using rule 11 (instruccion -> asignacion .)
    FUNCTION        reduce using rule 11 (instruccion -> asignacion .)
    PHP_END         reduce using rule 11 (instruccion -> asignacion .)
    RLLAVE          reduce using rule 11 (instruccion -> asignacion .)


state 13

    (12) instruccion -> estructurasDatos .

    PRINT           reduce using rule 12 (instruccion -> estructurasDatos .)
    PRINT_R         reduce using rule 12 (instruccion -> estructurasDatos .)
    ECHO            reduce using rule 12 (instruccion -> estructurasDatos .)
    VARIABLE        reduce using rule 12 (instruccion -> estructurasDatos .)
    WHILE           reduce using rule 12 (instruccion -> estructurasDatos .)
    IF              reduce using rule 12 (instruccion -> estructurasDatos .)
    ELSE            reduce using rule 12 (instruccion -> estructurasDatos .)
    FOR             reduce using rule 12 (instruccion -> estructurasDatos .)
    LBRACKET        reduce using rule 12 (instruccion -> estructurasDatos .)
    LBRACE          reduce using rule 12 (instruccion -> estructurasDatos .)
    FUNCTION        reduce using rule 12 (instruccion -> estructurasDatos .)
    PHP_END         reduce using rule 12 (instruccion -> estructurasDatos .)
    RLLAVE          reduce using rule 12 (instruccion -> estructurasDatos .)


state 14

    (13) instruccion -> funciones .

    PRINT           reduce using rule 13 (instruccion -> funciones .)
    PRINT_R         reduce using rule 13 (instruccion -> funciones .)
    ECHO            reduce using rule 13 (instruccion -> funciones .)
    VARIABLE        reduce using rule 13 (instruccion -> funciones .)
    WHILE           reduce using rule 13 (instruccion -> funciones .)
    IF              reduce using rule 13 (instruccion -> funciones .)
    ELSE            reduce using rule 13 (instruccion -> funciones .)
    FOR             reduce using rule 13 (instruccion -> funciones .)
    LBRACKET        reduce using rule 13 (instruccion -> funciones .)
    LBRACE          reduce using rule 13 (instruccion -> funciones .)
    FUNCTION        reduce using rule 13 (instruccion -> funciones .)
    PHP_END         reduce using rule 13 (instruccion -> funciones .)
    RLLAVE          reduce using rule 13 (instruccion -> funciones .)


state 15

    (14) instruccion -> expresiones .

    PRINT           reduce using rule 14 (instruccion -> expresiones .)
    PRINT_R         reduce using rule 14 (instruccion -> expresiones .)
    ECHO            reduce using rule 14 (instruccion -> expresiones .)
    VARIABLE        reduce using rule 14 (instruccion -> expresiones .)
    WHILE           reduce using rule 14 (instruccion -> expresiones .)
    IF              reduce using rule 14 (instruccion -> expresiones .)
    ELSE            reduce using rule 14 (instruccion -> expresiones .)
    FOR             reduce using rule 14 (instruccion -> expresiones .)
    LBRACKET        reduce using rule 14 (instruccion -> expresiones .)
    LBRACE          reduce using rule 14 (instruccion -> expresiones .)
    FUNCTION        reduce using rule 14 (instruccion -> expresiones .)
    PHP_END         reduce using rule 14 (instruccion -> expresiones .)
    RLLAVE          reduce using rule 14 (instruccion -> expresiones .)


state 16

    (15) instruccion -> increment .

    PRINT           reduce using rule 15 (instruccion -> increment .)
    PRINT_R         reduce using rule 15 (instruccion -> increment .)
    ECHO            reduce using rule 15 (instruccion -> increment .)
    VARIABLE        reduce using rule 15 (instruccion -> increment .)
    WHILE           reduce using rule 15 (instruccion -> increment .)
    IF              reduce using rule 15 (instruccion -> increment .)
    ELSE            reduce using rule 15 (instruccion -> increment .)
    FOR             reduce using rule 15 (instruccion -> increment .)
    LBRACKET        reduce using rule 15 (instruccion -> increment .)
    LBRACE          reduce using rule 15 (instruccion -> increment .)
    FUNCTION        reduce using rule 15 (instruccion -> increment .)
    PHP_END         reduce using rule 15 (instruccion -> increment .)
    RLLAVE          reduce using rule 15 (instruccion -> increment .)


state 17

    (16) imprimir -> PRINT . LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> PRINT . LPAREN argumentos RPAREN PUNTOYCOMA

    LPAREN          shift and go to state 42


state 18

    (18) imprimir -> PRINT_R . LPAREN valor RPAREN PUNTOYCOMA
    (19) imprimir -> PRINT_R . LPAREN argumentos RPAREN PUNTOYCOMA

    LPAREN          shift and go to state 43


state 19

    (20) imprimir -> ECHO . valor PUNTOYCOMA
    (21) imprimir -> ECHO . concatenar PUNTOYCOMA
    (22) imprimir -> ECHO . valor COMA VARIABLE valor PUNTOYCOMA
    (38) indexacion -> ECHO . VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (32) concatenar -> . valor
    (33) concatenar -> . valor PUNTO concatenar
    (144) expression -> . VARIABLE
    (145) expression -> . NUMBER
    (146) expression -> . VARIABLE TIMES VARIABLE
    (147) expression -> . VARIABLE PLUS VARIABLE
    (148) expression -> . VARIABLE MINUS VARIABLE
    (149) expression -> . VARIABLE DIVIDE VARIABLE
    (150) expression -> . VARIABLE TIMES NUMBER
    (151) expression -> . VARIABLE PLUS NUMBER
    (152) expression -> . VARIABLE MINUS NUMBER
    (153) expression -> . VARIABLE DIVIDE NUMBER
    (154) expression -> . VARIABLE MOD VARIABLE

    VARIABLE        shift and go to state 46
    NUMBER          shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 49
    BOOLEAN         shift and go to state 50
    ID              shift and go to state 51

    valor                          shift and go to state 44
    concatenar                     shift and go to state 45
    expression                     shift and go to state 52

state 20

    (34) solicitud_datos -> VARIABLE . IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> VARIABLE . IGUAL READLINE LPAREN RPAREN PUNTOYCOMA
    (36) input -> VARIABLE . IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (37) indexacion -> VARIABLE . LBRACKET valor RBRACKET
    (63) asignacion -> VARIABLE . IGUAL valor PUNTOYCOMA
    (64) asignacion -> VARIABLE . IGUAL ARRAY PUNTOYCOMA
    (65) asignacion -> VARIABLE . IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (66) expresiones -> VARIABLE . IGUAL valor operadorAritmetico valor PUNTOYCOMA
    (67) expresiones -> VARIABLE . IGUAL valor operadorAritmetico operacion
    (88) increment -> VARIABLE . INCREMENT
    (89) increment -> VARIABLE . DECREMENT
    (90) increment -> VARIABLE . DECREMENT PUNTOYCOMA
    (91) increment -> VARIABLE . PLUS_ASSIGN valor
    (92) increment -> VARIABLE . MINUS_ASSIGN valor
    (94) increment -> VARIABLE . INCREMENT PUNTOYCOMA
    (99) array -> VARIABLE . IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (100) array -> VARIABLE . IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (101) array -> VARIABLE . IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA
    (102) array -> VARIABLE . IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (103) array -> VARIABLE . IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (122) funcioninbuilt -> VARIABLE . IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA
    (123) funcioninbuilt -> VARIABLE . funcionesdefin LPAREN RPAREN PUNTOYCOMA
    (136) funcion_anonima -> VARIABLE . IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (141) arrow_function -> VARIABLE . IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA
    (124) funcionesdefin -> . STRLEN
    (125) funcionesdefin -> . STRPOS
    (126) funcionesdefin -> . ARRAY_PUSH
    (127) funcionesdefin -> . ARRAY_POP
    (128) funcionesdefin -> . IN_ARRAY
    (129) funcionesdefin -> . COUNT
    (130) funcionesdefin -> . SORT

    IGUAL           shift and go to state 53
    LBRACKET        shift and go to state 54
    INCREMENT       shift and go to state 55
    DECREMENT       shift and go to state 56
    PLUS_ASSIGN     shift and go to state 57
    MINUS_ASSIGN    shift and go to state 58
    STRLEN          shift and go to state 60
    STRPOS          shift and go to state 61
    ARRAY_PUSH      shift and go to state 62
    ARRAY_POP       shift and go to state 63
    IN_ARRAY        shift and go to state 64
    COUNT           shift and go to state 65
    SORT            shift and go to state 66

    funcionesdefin                 shift and go to state 59

state 21

    (110) lista -> LBRACKET . RBRACKET
    (111) lista -> LBRACKET . elementos RBRACKET
    (104) elementos -> . elemento
    (105) elementos -> . elementos COMA elemento
    (106) elemento -> . valor
    (107) elemento -> . lista
    (108) elemento -> . clave_valor
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (110) lista -> . LBRACKET RBRACKET
    (111) lista -> . LBRACKET elementos RBRACKET
    (109) clave_valor -> . valor ARROW valor
    (144) expression -> . VARIABLE
    (145) expression -> . NUMBER
    (146) expression -> . VARIABLE TIMES VARIABLE
    (147) expression -> . VARIABLE PLUS VARIABLE
    (148) expression -> . VARIABLE MINUS VARIABLE
    (149) expression -> . VARIABLE DIVIDE VARIABLE
    (150) expression -> . VARIABLE TIMES NUMBER
    (151) expression -> . VARIABLE PLUS NUMBER
    (152) expression -> . VARIABLE MINUS NUMBER
    (153) expression -> . VARIABLE DIVIDE NUMBER
    (154) expression -> . VARIABLE MOD VARIABLE

    RBRACKET        shift and go to state 67
    NUMBER          shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 49
    BOOLEAN         shift and go to state 50
    VARIABLE        shift and go to state 73
    ID              shift and go to state 51
    LBRACKET        shift and go to state 21

    elementos                      shift and go to state 68
    elemento                       shift and go to state 69
    valor                          shift and go to state 70
    lista                          shift and go to state 71
    clave_valor                    shift and go to state 72
    expression                     shift and go to state 52

state 22

    (39) estructurasControl -> while .

    PRINT           reduce using rule 39 (estructurasControl -> while .)
    PRINT_R         reduce using rule 39 (estructurasControl -> while .)
    ECHO            reduce using rule 39 (estructurasControl -> while .)
    VARIABLE        reduce using rule 39 (estructurasControl -> while .)
    WHILE           reduce using rule 39 (estructurasControl -> while .)
    IF              reduce using rule 39 (estructurasControl -> while .)
    ELSE            reduce using rule 39 (estructurasControl -> while .)
    FOR             reduce using rule 39 (estructurasControl -> while .)
    LBRACKET        reduce using rule 39 (estructurasControl -> while .)
    LBRACE          reduce using rule 39 (estructurasControl -> while .)
    FUNCTION        reduce using rule 39 (estructurasControl -> while .)
    PHP_END         reduce using rule 39 (estructurasControl -> while .)
    RLLAVE          reduce using rule 39 (estructurasControl -> while .)


state 23

    (40) estructurasControl -> if .

    PRINT           reduce using rule 40 (estructurasControl -> if .)
    PRINT_R         reduce using rule 40 (estructurasControl -> if .)
    ECHO            reduce using rule 40 (estructurasControl -> if .)
    VARIABLE        reduce using rule 40 (estructurasControl -> if .)
    WHILE           reduce using rule 40 (estructurasControl -> if .)
    IF              reduce using rule 40 (estructurasControl -> if .)
    ELSE            reduce using rule 40 (estructurasControl -> if .)
    FOR             reduce using rule 40 (estructurasControl -> if .)
    LBRACKET        reduce using rule 40 (estructurasControl -> if .)
    LBRACE          reduce using rule 40 (estructurasControl -> if .)
    FUNCTION        reduce using rule 40 (estructurasControl -> if .)
    PHP_END         reduce using rule 40 (estructurasControl -> if .)
    RLLAVE          reduce using rule 40 (estructurasControl -> if .)


state 24

    (41) estructurasControl -> else .

    PRINT           reduce using rule 41 (estructurasControl -> else .)
    PRINT_R         reduce using rule 41 (estructurasControl -> else .)
    ECHO            reduce using rule 41 (estructurasControl -> else .)
    VARIABLE        reduce using rule 41 (estructurasControl -> else .)
    WHILE           reduce using rule 41 (estructurasControl -> else .)
    IF              reduce using rule 41 (estructurasControl -> else .)
    ELSE            reduce using rule 41 (estructurasControl -> else .)
    FOR             reduce using rule 41 (estructurasControl -> else .)
    LBRACKET        reduce using rule 41 (estructurasControl -> else .)
    LBRACE          reduce using rule 41 (estructurasControl -> else .)
    FUNCTION        reduce using rule 41 (estructurasControl -> else .)
    PHP_END         reduce using rule 41 (estructurasControl -> else .)
    RLLAVE          reduce using rule 41 (estructurasControl -> else .)


state 25

    (42) estructurasControl -> for_statement .

    PRINT           reduce using rule 42 (estructurasControl -> for_statement .)
    PRINT_R         reduce using rule 42 (estructurasControl -> for_statement .)
    ECHO            reduce using rule 42 (estructurasControl -> for_statement .)
    VARIABLE        reduce using rule 42 (estructurasControl -> for_statement .)
    WHILE           reduce using rule 42 (estructurasControl -> for_statement .)
    IF              reduce using rule 42 (estructurasControl -> for_statement .)
    ELSE            reduce using rule 42 (estructurasControl -> for_statement .)
    FOR             reduce using rule 42 (estructurasControl -> for_statement .)
    LBRACKET        reduce using rule 42 (estructurasControl -> for_statement .)
    LBRACE          reduce using rule 42 (estructurasControl -> for_statement .)
    FUNCTION        reduce using rule 42 (estructurasControl -> for_statement .)
    PHP_END         reduce using rule 42 (estructurasControl -> for_statement .)
    RLLAVE          reduce using rule 42 (estructurasControl -> for_statement .)


state 26

    (96) estructurasDatos -> array .

    PRINT           reduce using rule 96 (estructurasDatos -> array .)
    PRINT_R         reduce using rule 96 (estructurasDatos -> array .)
    ECHO            reduce using rule 96 (estructurasDatos -> array .)
    VARIABLE        reduce using rule 96 (estructurasDatos -> array .)
    WHILE           reduce using rule 96 (estructurasDatos -> array .)
    IF              reduce using rule 96 (estructurasDatos -> array .)
    ELSE            reduce using rule 96 (estructurasDatos -> array .)
    FOR             reduce using rule 96 (estructurasDatos -> array .)
    LBRACKET        reduce using rule 96 (estructurasDatos -> array .)
    LBRACE          reduce using rule 96 (estructurasDatos -> array .)
    FUNCTION        reduce using rule 96 (estructurasDatos -> array .)
    PHP_END         reduce using rule 96 (estructurasDatos -> array .)
    RLLAVE          reduce using rule 96 (estructurasDatos -> array .)


state 27

    (97) estructurasDatos -> lista .

    PRINT           reduce using rule 97 (estructurasDatos -> lista .)
    PRINT_R         reduce using rule 97 (estructurasDatos -> lista .)
    ECHO            reduce using rule 97 (estructurasDatos -> lista .)
    VARIABLE        reduce using rule 97 (estructurasDatos -> lista .)
    WHILE           reduce using rule 97 (estructurasDatos -> lista .)
    IF              reduce using rule 97 (estructurasDatos -> lista .)
    ELSE            reduce using rule 97 (estructurasDatos -> lista .)
    FOR             reduce using rule 97 (estructurasDatos -> lista .)
    LBRACKET        reduce using rule 97 (estructurasDatos -> lista .)
    LBRACE          reduce using rule 97 (estructurasDatos -> lista .)
    FUNCTION        reduce using rule 97 (estructurasDatos -> lista .)
    PHP_END         reduce using rule 97 (estructurasDatos -> lista .)
    RLLAVE          reduce using rule 97 (estructurasDatos -> lista .)


state 28

    (98) estructurasDatos -> diccionario .

    PRINT           reduce using rule 98 (estructurasDatos -> diccionario .)
    PRINT_R         reduce using rule 98 (estructurasDatos -> diccionario .)
    ECHO            reduce using rule 98 (estructurasDatos -> diccionario .)
    VARIABLE        reduce using rule 98 (estructurasDatos -> diccionario .)
    WHILE           reduce using rule 98 (estructurasDatos -> diccionario .)
    IF              reduce using rule 98 (estructurasDatos -> diccionario .)
    ELSE            reduce using rule 98 (estructurasDatos -> diccionario .)
    FOR             reduce using rule 98 (estructurasDatos -> diccionario .)
    LBRACKET        reduce using rule 98 (estructurasDatos -> diccionario .)
    LBRACE          reduce using rule 98 (estructurasDatos -> diccionario .)
    FUNCTION        reduce using rule 98 (estructurasDatos -> diccionario .)
    PHP_END         reduce using rule 98 (estructurasDatos -> diccionario .)
    RLLAVE          reduce using rule 98 (estructurasDatos -> diccionario .)


state 29

    (116) funciones -> funcion .

    PRINT           reduce using rule 116 (funciones -> funcion .)
    PRINT_R         reduce using rule 116 (funciones -> funcion .)
    ECHO            reduce using rule 116 (funciones -> funcion .)
    VARIABLE        reduce using rule 116 (funciones -> funcion .)
    WHILE           reduce using rule 116 (funciones -> funcion .)
    IF              reduce using rule 116 (funciones -> funcion .)
    ELSE            reduce using rule 116 (funciones -> funcion .)
    FOR             reduce using rule 116 (funciones -> funcion .)
    LBRACKET        reduce using rule 116 (funciones -> funcion .)
    LBRACE          reduce using rule 116 (funciones -> funcion .)
    FUNCTION        reduce using rule 116 (funciones -> funcion .)
    PHP_END         reduce using rule 116 (funciones -> funcion .)
    RLLAVE          reduce using rule 116 (funciones -> funcion .)


state 30

    (117) funciones -> funcioninbuilt .

    PRINT           reduce using rule 117 (funciones -> funcioninbuilt .)
    PRINT_R         reduce using rule 117 (funciones -> funcioninbuilt .)
    ECHO            reduce using rule 117 (funciones -> funcioninbuilt .)
    VARIABLE        reduce using rule 117 (funciones -> funcioninbuilt .)
    WHILE           reduce using rule 117 (funciones -> funcioninbuilt .)
    IF              reduce using rule 117 (funciones -> funcioninbuilt .)
    ELSE            reduce using rule 117 (funciones -> funcioninbuilt .)
    FOR             reduce using rule 117 (funciones -> funcioninbuilt .)
    LBRACKET        reduce using rule 117 (funciones -> funcioninbuilt .)
    LBRACE          reduce using rule 117 (funciones -> funcioninbuilt .)
    FUNCTION        reduce using rule 117 (funciones -> funcioninbuilt .)
    PHP_END         reduce using rule 117 (funciones -> funcioninbuilt .)
    RLLAVE          reduce using rule 117 (funciones -> funcioninbuilt .)


state 31

    (118) funciones -> funcion_anonima .

    PRINT           reduce using rule 118 (funciones -> funcion_anonima .)
    PRINT_R         reduce using rule 118 (funciones -> funcion_anonima .)
    ECHO            reduce using rule 118 (funciones -> funcion_anonima .)
    VARIABLE        reduce using rule 118 (funciones -> funcion_anonima .)
    WHILE           reduce using rule 118 (funciones -> funcion_anonima .)
    IF              reduce using rule 118 (funciones -> funcion_anonima .)
    ELSE            reduce using rule 118 (funciones -> funcion_anonima .)
    FOR             reduce using rule 118 (funciones -> funcion_anonima .)
    LBRACKET        reduce using rule 118 (funciones -> funcion_anonima .)
    LBRACE          reduce using rule 118 (funciones -> funcion_anonima .)
    FUNCTION        reduce using rule 118 (funciones -> funcion_anonima .)
    PHP_END         reduce using rule 118 (funciones -> funcion_anonima .)
    RLLAVE          reduce using rule 118 (funciones -> funcion_anonima .)


state 32

    (119) funciones -> arrow_function .

    PRINT           reduce using rule 119 (funciones -> arrow_function .)
    PRINT_R         reduce using rule 119 (funciones -> arrow_function .)
    ECHO            reduce using rule 119 (funciones -> arrow_function .)
    VARIABLE        reduce using rule 119 (funciones -> arrow_function .)
    WHILE           reduce using rule 119 (funciones -> arrow_function .)
    IF              reduce using rule 119 (funciones -> arrow_function .)
    ELSE            reduce using rule 119 (funciones -> arrow_function .)
    FOR             reduce using rule 119 (funciones -> arrow_function .)
    LBRACKET        reduce using rule 119 (funciones -> arrow_function .)
    LBRACE          reduce using rule 119 (funciones -> arrow_function .)
    FUNCTION        reduce using rule 119 (funciones -> arrow_function .)
    PHP_END         reduce using rule 119 (funciones -> arrow_function .)
    RLLAVE          reduce using rule 119 (funciones -> arrow_function .)


state 33

    (77) while -> WHILE . LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE

    LPAREN          shift and go to state 74


state 34

    (43) if -> IF . LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (44) if -> IF . LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE

    LPAREN          shift and go to state 75


state 35

    (76) else -> ELSE . LLLAVE instrucciones RLLAVE

    LLLAVE          shift and go to state 76


state 36

    (85) for_statement -> FOR . LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE

    LPAREN          shift and go to state 77


state 37

    (112) diccionario -> LBRACE . pares RBRACE
    (113) pares -> . par
    (114) pares -> . pares COMA par
    (115) par -> . STRING ARROW valor

    STRING          shift and go to state 80

    pares                          shift and go to state 78
    par                            shift and go to state 79

state 38

    (120) funcion -> FUNCTION . ID LPAREN RPAREN LLLAVE instrucciones RLLAVE
    (121) funcion -> FUNCTION . ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE

    ID              shift and go to state 81


state 39

    (1) padre -> PHP_START cuerpo PHP_END .

    $end            reduce using rule 1 (padre -> PHP_START cuerpo PHP_END .)


state 40

    (5) instrucciones -> instrucciones instruccion .

    PRINT           reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    PRINT_R         reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    ECHO            reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    VARIABLE        reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    ELSE            reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    FOR             reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    LBRACKET        reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    LBRACE          reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    FUNCTION        reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    PHP_END         reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    RLLAVE          reduce using rule 5 (instrucciones -> instrucciones instruccion .)


state 41

    (93) increment -> empty .

    PRINT           reduce using rule 93 (increment -> empty .)
    PRINT_R         reduce using rule 93 (increment -> empty .)
    ECHO            reduce using rule 93 (increment -> empty .)
    VARIABLE        reduce using rule 93 (increment -> empty .)
    WHILE           reduce using rule 93 (increment -> empty .)
    IF              reduce using rule 93 (increment -> empty .)
    ELSE            reduce using rule 93 (increment -> empty .)
    FOR             reduce using rule 93 (increment -> empty .)
    LBRACKET        reduce using rule 93 (increment -> empty .)
    LBRACE          reduce using rule 93 (increment -> empty .)
    FUNCTION        reduce using rule 93 (increment -> empty .)
    PHP_END         reduce using rule 93 (increment -> empty .)
    RLLAVE          reduce using rule 93 (increment -> empty .)
    RPAREN          reduce using rule 93 (increment -> empty .)


state 42

    (16) imprimir -> PRINT LPAREN . valor RPAREN PUNTOYCOMA
    (17) imprimir -> PRINT LPAREN . argumentos RPAREN PUNTOYCOMA
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (30) argumentos -> . valor
    (31) argumentos -> . argumentos COMA valor
    (144) expression -> . VARIABLE
    (145) expression -> . NUMBER
    (146) expression -> . VARIABLE TIMES VARIABLE
    (147) expression -> . VARIABLE PLUS VARIABLE
    (148) expression -> . VARIABLE MINUS VARIABLE
    (149) expression -> . VARIABLE DIVIDE VARIABLE
    (150) expression -> . VARIABLE TIMES NUMBER
    (151) expression -> . VARIABLE PLUS NUMBER
    (152) expression -> . VARIABLE MINUS NUMBER
    (153) expression -> . VARIABLE DIVIDE NUMBER
    (154) expression -> . VARIABLE MOD VARIABLE

    NUMBER          shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 49
    BOOLEAN         shift and go to state 50
    VARIABLE        shift and go to state 73
    ID              shift and go to state 51

    valor                          shift and go to state 82
    argumentos                     shift and go to state 83
    expression                     shift and go to state 52

state 43

    (18) imprimir -> PRINT_R LPAREN . valor RPAREN PUNTOYCOMA
    (19) imprimir -> PRINT_R LPAREN . argumentos RPAREN PUNTOYCOMA
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (30) argumentos -> . valor
    (31) argumentos -> . argumentos COMA valor
    (144) expression -> . VARIABLE
    (145) expression -> . NUMBER
    (146) expression -> . VARIABLE TIMES VARIABLE
    (147) expression -> . VARIABLE PLUS VARIABLE
    (148) expression -> . VARIABLE MINUS VARIABLE
    (149) expression -> . VARIABLE DIVIDE VARIABLE
    (150) expression -> . VARIABLE TIMES NUMBER
    (151) expression -> . VARIABLE PLUS NUMBER
    (152) expression -> . VARIABLE MINUS NUMBER
    (153) expression -> . VARIABLE DIVIDE NUMBER
    (154) expression -> . VARIABLE MOD VARIABLE

    NUMBER          shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 49
    BOOLEAN         shift and go to state 50
    VARIABLE        shift and go to state 73
    ID              shift and go to state 51

    valor                          shift and go to state 84
    argumentos                     shift and go to state 85
    expression                     shift and go to state 52

state 44

    (20) imprimir -> ECHO valor . PUNTOYCOMA
    (22) imprimir -> ECHO valor . COMA VARIABLE valor PUNTOYCOMA
    (32) concatenar -> valor .
    (33) concatenar -> valor . PUNTO concatenar

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 86
    COMA            shift and go to state 87
    PUNTO           shift and go to state 88

  ! PUNTOYCOMA      [ reduce using rule 32 (concatenar -> valor .) ]


state 45

    (21) imprimir -> ECHO concatenar . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 89


state 46

    (38) indexacion -> ECHO VARIABLE . LBRACKET valor RBRACKET PUNTOYCOMA
    (27) valor -> VARIABLE .
    (144) expression -> VARIABLE .
    (146) expression -> VARIABLE . TIMES VARIABLE
    (147) expression -> VARIABLE . PLUS VARIABLE
    (148) expression -> VARIABLE . MINUS VARIABLE
    (149) expression -> VARIABLE . DIVIDE VARIABLE
    (150) expression -> VARIABLE . TIMES NUMBER
    (151) expression -> VARIABLE . PLUS NUMBER
    (152) expression -> VARIABLE . MINUS NUMBER
    (153) expression -> VARIABLE . DIVIDE NUMBER
    (154) expression -> VARIABLE . MOD VARIABLE

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for COMA resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTO resolved using rule 27 (valor -> VARIABLE .)
    LBRACKET        shift and go to state 90
    PUNTOYCOMA      reduce using rule 27 (valor -> VARIABLE .)
    COMA            reduce using rule 27 (valor -> VARIABLE .)
    PUNTO           reduce using rule 27 (valor -> VARIABLE .)
    TIMES           shift and go to state 91
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    DIVIDE          shift and go to state 94
    MOD             shift and go to state 95

  ! PUNTOYCOMA      [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! COMA            [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! PUNTO           [ reduce using rule 144 (expression -> VARIABLE .) ]


state 47

    (23) valor -> NUMBER .
    (145) expression -> NUMBER .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for COMA resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for PUNTO resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for ARROW resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for RPAREN resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for PLUS resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for MINUS resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for TIMES resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for MOD resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for POT resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for PRINT resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for PRINT_R resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for ECHO resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for WHILE resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for IF resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for ELSE resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for FOR resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for LBRACE resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for PHP_END resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for EQUAL resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for NOT_IDENTICAL resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for IGUAL resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for MAYOR resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for MENOR resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for RBRACE resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for AND_LOGICAL resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for OR_LOGICAL resolved using rule 23 (valor -> NUMBER .)
    PUNTOYCOMA      reduce using rule 23 (valor -> NUMBER .)
    COMA            reduce using rule 23 (valor -> NUMBER .)
    PUNTO           reduce using rule 23 (valor -> NUMBER .)
    ARROW           reduce using rule 23 (valor -> NUMBER .)
    RBRACKET        reduce using rule 23 (valor -> NUMBER .)
    RPAREN          reduce using rule 23 (valor -> NUMBER .)
    PLUS            reduce using rule 23 (valor -> NUMBER .)
    MINUS           reduce using rule 23 (valor -> NUMBER .)
    TIMES           reduce using rule 23 (valor -> NUMBER .)
    DIVIDE          reduce using rule 23 (valor -> NUMBER .)
    MOD             reduce using rule 23 (valor -> NUMBER .)
    POT             reduce using rule 23 (valor -> NUMBER .)
    PRINT           reduce using rule 23 (valor -> NUMBER .)
    PRINT_R         reduce using rule 23 (valor -> NUMBER .)
    ECHO            reduce using rule 23 (valor -> NUMBER .)
    VARIABLE        reduce using rule 23 (valor -> NUMBER .)
    WHILE           reduce using rule 23 (valor -> NUMBER .)
    IF              reduce using rule 23 (valor -> NUMBER .)
    ELSE            reduce using rule 23 (valor -> NUMBER .)
    FOR             reduce using rule 23 (valor -> NUMBER .)
    LBRACKET        reduce using rule 23 (valor -> NUMBER .)
    LBRACE          reduce using rule 23 (valor -> NUMBER .)
    FUNCTION        reduce using rule 23 (valor -> NUMBER .)
    PHP_END         reduce using rule 23 (valor -> NUMBER .)
    RLLAVE          reduce using rule 23 (valor -> NUMBER .)
    EQUAL           reduce using rule 23 (valor -> NUMBER .)
    NOT_IDENTICAL   reduce using rule 23 (valor -> NUMBER .)
    NOT_EQUAL       reduce using rule 23 (valor -> NUMBER .)
    IGUAL           reduce using rule 23 (valor -> NUMBER .)
    IDENTICAL       reduce using rule 23 (valor -> NUMBER .)
    MAYOR           reduce using rule 23 (valor -> NUMBER .)
    MENOR           reduce using rule 23 (valor -> NUMBER .)
    RBRACE          reduce using rule 23 (valor -> NUMBER .)
    AND_LOGICAL     reduce using rule 23 (valor -> NUMBER .)
    OR_LOGICAL      reduce using rule 23 (valor -> NUMBER .)

  ! PUNTOYCOMA      [ reduce using rule 145 (expression -> NUMBER .) ]
  ! COMA            [ reduce using rule 145 (expression -> NUMBER .) ]
  ! PUNTO           [ reduce using rule 145 (expression -> NUMBER .) ]
  ! ARROW           [ reduce using rule 145 (expression -> NUMBER .) ]
  ! RBRACKET        [ reduce using rule 145 (expression -> NUMBER .) ]
  ! RPAREN          [ reduce using rule 145 (expression -> NUMBER .) ]
  ! PLUS            [ reduce using rule 145 (expression -> NUMBER .) ]
  ! MINUS           [ reduce using rule 145 (expression -> NUMBER .) ]
  ! TIMES           [ reduce using rule 145 (expression -> NUMBER .) ]
  ! DIVIDE          [ reduce using rule 145 (expression -> NUMBER .) ]
  ! MOD             [ reduce using rule 145 (expression -> NUMBER .) ]
  ! POT             [ reduce using rule 145 (expression -> NUMBER .) ]
  ! PRINT           [ reduce using rule 145 (expression -> NUMBER .) ]
  ! PRINT_R         [ reduce using rule 145 (expression -> NUMBER .) ]
  ! ECHO            [ reduce using rule 145 (expression -> NUMBER .) ]
  ! VARIABLE        [ reduce using rule 145 (expression -> NUMBER .) ]
  ! WHILE           [ reduce using rule 145 (expression -> NUMBER .) ]
  ! IF              [ reduce using rule 145 (expression -> NUMBER .) ]
  ! ELSE            [ reduce using rule 145 (expression -> NUMBER .) ]
  ! FOR             [ reduce using rule 145 (expression -> NUMBER .) ]
  ! LBRACKET        [ reduce using rule 145 (expression -> NUMBER .) ]
  ! LBRACE          [ reduce using rule 145 (expression -> NUMBER .) ]
  ! FUNCTION        [ reduce using rule 145 (expression -> NUMBER .) ]
  ! PHP_END         [ reduce using rule 145 (expression -> NUMBER .) ]
  ! RLLAVE          [ reduce using rule 145 (expression -> NUMBER .) ]
  ! EQUAL           [ reduce using rule 145 (expression -> NUMBER .) ]
  ! NOT_IDENTICAL   [ reduce using rule 145 (expression -> NUMBER .) ]
  ! NOT_EQUAL       [ reduce using rule 145 (expression -> NUMBER .) ]
  ! IGUAL           [ reduce using rule 145 (expression -> NUMBER .) ]
  ! IDENTICAL       [ reduce using rule 145 (expression -> NUMBER .) ]
  ! MAYOR           [ reduce using rule 145 (expression -> NUMBER .) ]
  ! MENOR           [ reduce using rule 145 (expression -> NUMBER .) ]
  ! RBRACE          [ reduce using rule 145 (expression -> NUMBER .) ]
  ! AND_LOGICAL     [ reduce using rule 145 (expression -> NUMBER .) ]
  ! OR_LOGICAL      [ reduce using rule 145 (expression -> NUMBER .) ]


state 48

    (24) valor -> FLOAT .

    PUNTOYCOMA      reduce using rule 24 (valor -> FLOAT .)
    COMA            reduce using rule 24 (valor -> FLOAT .)
    PUNTO           reduce using rule 24 (valor -> FLOAT .)
    ARROW           reduce using rule 24 (valor -> FLOAT .)
    RBRACKET        reduce using rule 24 (valor -> FLOAT .)
    RPAREN          reduce using rule 24 (valor -> FLOAT .)
    PLUS            reduce using rule 24 (valor -> FLOAT .)
    MINUS           reduce using rule 24 (valor -> FLOAT .)
    TIMES           reduce using rule 24 (valor -> FLOAT .)
    DIVIDE          reduce using rule 24 (valor -> FLOAT .)
    MOD             reduce using rule 24 (valor -> FLOAT .)
    POT             reduce using rule 24 (valor -> FLOAT .)
    PRINT           reduce using rule 24 (valor -> FLOAT .)
    PRINT_R         reduce using rule 24 (valor -> FLOAT .)
    ECHO            reduce using rule 24 (valor -> FLOAT .)
    VARIABLE        reduce using rule 24 (valor -> FLOAT .)
    WHILE           reduce using rule 24 (valor -> FLOAT .)
    IF              reduce using rule 24 (valor -> FLOAT .)
    ELSE            reduce using rule 24 (valor -> FLOAT .)
    FOR             reduce using rule 24 (valor -> FLOAT .)
    LBRACKET        reduce using rule 24 (valor -> FLOAT .)
    LBRACE          reduce using rule 24 (valor -> FLOAT .)
    FUNCTION        reduce using rule 24 (valor -> FLOAT .)
    PHP_END         reduce using rule 24 (valor -> FLOAT .)
    RLLAVE          reduce using rule 24 (valor -> FLOAT .)
    EQUAL           reduce using rule 24 (valor -> FLOAT .)
    NOT_IDENTICAL   reduce using rule 24 (valor -> FLOAT .)
    NOT_EQUAL       reduce using rule 24 (valor -> FLOAT .)
    IGUAL           reduce using rule 24 (valor -> FLOAT .)
    IDENTICAL       reduce using rule 24 (valor -> FLOAT .)
    MAYOR           reduce using rule 24 (valor -> FLOAT .)
    MENOR           reduce using rule 24 (valor -> FLOAT .)
    RBRACE          reduce using rule 24 (valor -> FLOAT .)
    AND_LOGICAL     reduce using rule 24 (valor -> FLOAT .)
    OR_LOGICAL      reduce using rule 24 (valor -> FLOAT .)


state 49

    (25) valor -> STRING .

    PUNTOYCOMA      reduce using rule 25 (valor -> STRING .)
    COMA            reduce using rule 25 (valor -> STRING .)
    PUNTO           reduce using rule 25 (valor -> STRING .)
    ARROW           reduce using rule 25 (valor -> STRING .)
    RBRACKET        reduce using rule 25 (valor -> STRING .)
    RPAREN          reduce using rule 25 (valor -> STRING .)
    PLUS            reduce using rule 25 (valor -> STRING .)
    MINUS           reduce using rule 25 (valor -> STRING .)
    TIMES           reduce using rule 25 (valor -> STRING .)
    DIVIDE          reduce using rule 25 (valor -> STRING .)
    MOD             reduce using rule 25 (valor -> STRING .)
    POT             reduce using rule 25 (valor -> STRING .)
    PRINT           reduce using rule 25 (valor -> STRING .)
    PRINT_R         reduce using rule 25 (valor -> STRING .)
    ECHO            reduce using rule 25 (valor -> STRING .)
    VARIABLE        reduce using rule 25 (valor -> STRING .)
    WHILE           reduce using rule 25 (valor -> STRING .)
    IF              reduce using rule 25 (valor -> STRING .)
    ELSE            reduce using rule 25 (valor -> STRING .)
    FOR             reduce using rule 25 (valor -> STRING .)
    LBRACKET        reduce using rule 25 (valor -> STRING .)
    LBRACE          reduce using rule 25 (valor -> STRING .)
    FUNCTION        reduce using rule 25 (valor -> STRING .)
    PHP_END         reduce using rule 25 (valor -> STRING .)
    RLLAVE          reduce using rule 25 (valor -> STRING .)
    EQUAL           reduce using rule 25 (valor -> STRING .)
    NOT_IDENTICAL   reduce using rule 25 (valor -> STRING .)
    NOT_EQUAL       reduce using rule 25 (valor -> STRING .)
    IGUAL           reduce using rule 25 (valor -> STRING .)
    IDENTICAL       reduce using rule 25 (valor -> STRING .)
    MAYOR           reduce using rule 25 (valor -> STRING .)
    MENOR           reduce using rule 25 (valor -> STRING .)
    RBRACE          reduce using rule 25 (valor -> STRING .)
    AND_LOGICAL     reduce using rule 25 (valor -> STRING .)
    OR_LOGICAL      reduce using rule 25 (valor -> STRING .)


state 50

    (26) valor -> BOOLEAN .

    PUNTOYCOMA      reduce using rule 26 (valor -> BOOLEAN .)
    COMA            reduce using rule 26 (valor -> BOOLEAN .)
    PUNTO           reduce using rule 26 (valor -> BOOLEAN .)
    ARROW           reduce using rule 26 (valor -> BOOLEAN .)
    RBRACKET        reduce using rule 26 (valor -> BOOLEAN .)
    RPAREN          reduce using rule 26 (valor -> BOOLEAN .)
    PLUS            reduce using rule 26 (valor -> BOOLEAN .)
    MINUS           reduce using rule 26 (valor -> BOOLEAN .)
    TIMES           reduce using rule 26 (valor -> BOOLEAN .)
    DIVIDE          reduce using rule 26 (valor -> BOOLEAN .)
    MOD             reduce using rule 26 (valor -> BOOLEAN .)
    POT             reduce using rule 26 (valor -> BOOLEAN .)
    PRINT           reduce using rule 26 (valor -> BOOLEAN .)
    PRINT_R         reduce using rule 26 (valor -> BOOLEAN .)
    ECHO            reduce using rule 26 (valor -> BOOLEAN .)
    VARIABLE        reduce using rule 26 (valor -> BOOLEAN .)
    WHILE           reduce using rule 26 (valor -> BOOLEAN .)
    IF              reduce using rule 26 (valor -> BOOLEAN .)
    ELSE            reduce using rule 26 (valor -> BOOLEAN .)
    FOR             reduce using rule 26 (valor -> BOOLEAN .)
    LBRACKET        reduce using rule 26 (valor -> BOOLEAN .)
    LBRACE          reduce using rule 26 (valor -> BOOLEAN .)
    FUNCTION        reduce using rule 26 (valor -> BOOLEAN .)
    PHP_END         reduce using rule 26 (valor -> BOOLEAN .)
    RLLAVE          reduce using rule 26 (valor -> BOOLEAN .)
    EQUAL           reduce using rule 26 (valor -> BOOLEAN .)
    NOT_IDENTICAL   reduce using rule 26 (valor -> BOOLEAN .)
    NOT_EQUAL       reduce using rule 26 (valor -> BOOLEAN .)
    IGUAL           reduce using rule 26 (valor -> BOOLEAN .)
    IDENTICAL       reduce using rule 26 (valor -> BOOLEAN .)
    MAYOR           reduce using rule 26 (valor -> BOOLEAN .)
    MENOR           reduce using rule 26 (valor -> BOOLEAN .)
    RBRACE          reduce using rule 26 (valor -> BOOLEAN .)
    AND_LOGICAL     reduce using rule 26 (valor -> BOOLEAN .)
    OR_LOGICAL      reduce using rule 26 (valor -> BOOLEAN .)


state 51

    (28) valor -> ID .

    PUNTOYCOMA      reduce using rule 28 (valor -> ID .)
    COMA            reduce using rule 28 (valor -> ID .)
    PUNTO           reduce using rule 28 (valor -> ID .)
    ARROW           reduce using rule 28 (valor -> ID .)
    RBRACKET        reduce using rule 28 (valor -> ID .)
    RPAREN          reduce using rule 28 (valor -> ID .)
    PLUS            reduce using rule 28 (valor -> ID .)
    MINUS           reduce using rule 28 (valor -> ID .)
    TIMES           reduce using rule 28 (valor -> ID .)
    DIVIDE          reduce using rule 28 (valor -> ID .)
    MOD             reduce using rule 28 (valor -> ID .)
    POT             reduce using rule 28 (valor -> ID .)
    PRINT           reduce using rule 28 (valor -> ID .)
    PRINT_R         reduce using rule 28 (valor -> ID .)
    ECHO            reduce using rule 28 (valor -> ID .)
    VARIABLE        reduce using rule 28 (valor -> ID .)
    WHILE           reduce using rule 28 (valor -> ID .)
    IF              reduce using rule 28 (valor -> ID .)
    ELSE            reduce using rule 28 (valor -> ID .)
    FOR             reduce using rule 28 (valor -> ID .)
    LBRACKET        reduce using rule 28 (valor -> ID .)
    LBRACE          reduce using rule 28 (valor -> ID .)
    FUNCTION        reduce using rule 28 (valor -> ID .)
    PHP_END         reduce using rule 28 (valor -> ID .)
    RLLAVE          reduce using rule 28 (valor -> ID .)
    EQUAL           reduce using rule 28 (valor -> ID .)
    NOT_IDENTICAL   reduce using rule 28 (valor -> ID .)
    NOT_EQUAL       reduce using rule 28 (valor -> ID .)
    IGUAL           reduce using rule 28 (valor -> ID .)
    IDENTICAL       reduce using rule 28 (valor -> ID .)
    MAYOR           reduce using rule 28 (valor -> ID .)
    MENOR           reduce using rule 28 (valor -> ID .)
    RBRACE          reduce using rule 28 (valor -> ID .)
    AND_LOGICAL     reduce using rule 28 (valor -> ID .)
    OR_LOGICAL      reduce using rule 28 (valor -> ID .)


state 52

    (29) valor -> expression .

    PUNTOYCOMA      reduce using rule 29 (valor -> expression .)
    COMA            reduce using rule 29 (valor -> expression .)
    PUNTO           reduce using rule 29 (valor -> expression .)
    ARROW           reduce using rule 29 (valor -> expression .)
    RBRACKET        reduce using rule 29 (valor -> expression .)
    RPAREN          reduce using rule 29 (valor -> expression .)
    PLUS            reduce using rule 29 (valor -> expression .)
    MINUS           reduce using rule 29 (valor -> expression .)
    TIMES           reduce using rule 29 (valor -> expression .)
    DIVIDE          reduce using rule 29 (valor -> expression .)
    MOD             reduce using rule 29 (valor -> expression .)
    POT             reduce using rule 29 (valor -> expression .)
    PRINT           reduce using rule 29 (valor -> expression .)
    PRINT_R         reduce using rule 29 (valor -> expression .)
    ECHO            reduce using rule 29 (valor -> expression .)
    VARIABLE        reduce using rule 29 (valor -> expression .)
    WHILE           reduce using rule 29 (valor -> expression .)
    IF              reduce using rule 29 (valor -> expression .)
    ELSE            reduce using rule 29 (valor -> expression .)
    FOR             reduce using rule 29 (valor -> expression .)
    LBRACKET        reduce using rule 29 (valor -> expression .)
    LBRACE          reduce using rule 29 (valor -> expression .)
    FUNCTION        reduce using rule 29 (valor -> expression .)
    PHP_END         reduce using rule 29 (valor -> expression .)
    RLLAVE          reduce using rule 29 (valor -> expression .)
    EQUAL           reduce using rule 29 (valor -> expression .)
    NOT_IDENTICAL   reduce using rule 29 (valor -> expression .)
    NOT_EQUAL       reduce using rule 29 (valor -> expression .)
    IGUAL           reduce using rule 29 (valor -> expression .)
    IDENTICAL       reduce using rule 29 (valor -> expression .)
    MAYOR           reduce using rule 29 (valor -> expression .)
    MENOR           reduce using rule 29 (valor -> expression .)
    RBRACE          reduce using rule 29 (valor -> expression .)
    AND_LOGICAL     reduce using rule 29 (valor -> expression .)
    OR_LOGICAL      reduce using rule 29 (valor -> expression .)


state 53

    (34) solicitud_datos -> VARIABLE IGUAL . READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> VARIABLE IGUAL . READLINE LPAREN RPAREN PUNTOYCOMA
    (36) input -> VARIABLE IGUAL . FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (63) asignacion -> VARIABLE IGUAL . valor PUNTOYCOMA
    (64) asignacion -> VARIABLE IGUAL . ARRAY PUNTOYCOMA
    (65) asignacion -> VARIABLE IGUAL . ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (66) expresiones -> VARIABLE IGUAL . valor operadorAritmetico valor PUNTOYCOMA
    (67) expresiones -> VARIABLE IGUAL . valor operadorAritmetico operacion
    (99) array -> VARIABLE IGUAL . ARRAY LPAREN RPAREN PUNTOYCOMA
    (100) array -> VARIABLE IGUAL . ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (101) array -> VARIABLE IGUAL . ARRAY LPAREN valor RPAREN PUNTOYCOMA
    (102) array -> VARIABLE IGUAL . LBRACKET RBRACKET PUNTOYCOMA
    (103) array -> VARIABLE IGUAL . LBRACKET elementos RBRACKET PUNTOYCOMA
    (122) funcioninbuilt -> VARIABLE IGUAL . funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA
    (136) funcion_anonima -> VARIABLE IGUAL . FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (141) arrow_function -> VARIABLE IGUAL . FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (124) funcionesdefin -> . STRLEN
    (125) funcionesdefin -> . STRPOS
    (126) funcionesdefin -> . ARRAY_PUSH
    (127) funcionesdefin -> . ARRAY_POP
    (128) funcionesdefin -> . IN_ARRAY
    (129) funcionesdefin -> . COUNT
    (130) funcionesdefin -> . SORT
    (144) expression -> . VARIABLE
    (145) expression -> . NUMBER
    (146) expression -> . VARIABLE TIMES VARIABLE
    (147) expression -> . VARIABLE PLUS VARIABLE
    (148) expression -> . VARIABLE MINUS VARIABLE
    (149) expression -> . VARIABLE DIVIDE VARIABLE
    (150) expression -> . VARIABLE TIMES NUMBER
    (151) expression -> . VARIABLE PLUS NUMBER
    (152) expression -> . VARIABLE MINUS NUMBER
    (153) expression -> . VARIABLE DIVIDE NUMBER
    (154) expression -> . VARIABLE MOD VARIABLE

    READLINE        shift and go to state 96
    FGETS           shift and go to state 97
    ARRAY           shift and go to state 99
    LBRACKET        shift and go to state 100
    FUNCTION        shift and go to state 102
    FN              shift and go to state 103
    NUMBER          shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 49
    BOOLEAN         shift and go to state 50
    VARIABLE        shift and go to state 73
    ID              shift and go to state 51
    STRLEN          shift and go to state 60
    STRPOS          shift and go to state 61
    ARRAY_PUSH      shift and go to state 62
    ARRAY_POP       shift and go to state 63
    IN_ARRAY        shift and go to state 64
    COUNT           shift and go to state 65
    SORT            shift and go to state 66

    valor                          shift and go to state 98
    funcionesdefin                 shift and go to state 101
    expression                     shift and go to state 52

state 54

    (37) indexacion -> VARIABLE LBRACKET . valor RBRACKET
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (144) expression -> . VARIABLE
    (145) expression -> . NUMBER
    (146) expression -> . VARIABLE TIMES VARIABLE
    (147) expression -> . VARIABLE PLUS VARIABLE
    (148) expression -> . VARIABLE MINUS VARIABLE
    (149) expression -> . VARIABLE DIVIDE VARIABLE
    (150) expression -> . VARIABLE TIMES NUMBER
    (151) expression -> . VARIABLE PLUS NUMBER
    (152) expression -> . VARIABLE MINUS NUMBER
    (153) expression -> . VARIABLE DIVIDE NUMBER
    (154) expression -> . VARIABLE MOD VARIABLE

    NUMBER          shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 49
    BOOLEAN         shift and go to state 50
    VARIABLE        shift and go to state 73
    ID              shift and go to state 51

    valor                          shift and go to state 104
    expression                     shift and go to state 52

state 55

    (88) increment -> VARIABLE INCREMENT .
    (94) increment -> VARIABLE INCREMENT . PUNTOYCOMA

    PRINT           reduce using rule 88 (increment -> VARIABLE INCREMENT .)
    PRINT_R         reduce using rule 88 (increment -> VARIABLE INCREMENT .)
    ECHO            reduce using rule 88 (increment -> VARIABLE INCREMENT .)
    VARIABLE        reduce using rule 88 (increment -> VARIABLE INCREMENT .)
    WHILE           reduce using rule 88 (increment -> VARIABLE INCREMENT .)
    IF              reduce using rule 88 (increment -> VARIABLE INCREMENT .)
    ELSE            reduce using rule 88 (increment -> VARIABLE INCREMENT .)
    FOR             reduce using rule 88 (increment -> VARIABLE INCREMENT .)
    LBRACKET        reduce using rule 88 (increment -> VARIABLE INCREMENT .)
    LBRACE          reduce using rule 88 (increment -> VARIABLE INCREMENT .)
    FUNCTION        reduce using rule 88 (increment -> VARIABLE INCREMENT .)
    PHP_END         reduce using rule 88 (increment -> VARIABLE INCREMENT .)
    RLLAVE          reduce using rule 88 (increment -> VARIABLE INCREMENT .)
    RPAREN          reduce using rule 88 (increment -> VARIABLE INCREMENT .)
    PUNTOYCOMA      shift and go to state 105


state 56

    (89) increment -> VARIABLE DECREMENT .
    (90) increment -> VARIABLE DECREMENT . PUNTOYCOMA

    PRINT           reduce using rule 89 (increment -> VARIABLE DECREMENT .)
    PRINT_R         reduce using rule 89 (increment -> VARIABLE DECREMENT .)
    ECHO            reduce using rule 89 (increment -> VARIABLE DECREMENT .)
    VARIABLE        reduce using rule 89 (increment -> VARIABLE DECREMENT .)
    WHILE           reduce using rule 89 (increment -> VARIABLE DECREMENT .)
    IF              reduce using rule 89 (increment -> VARIABLE DECREMENT .)
    ELSE            reduce using rule 89 (increment -> VARIABLE DECREMENT .)
    FOR             reduce using rule 89 (increment -> VARIABLE DECREMENT .)
    LBRACKET        reduce using rule 89 (increment -> VARIABLE DECREMENT .)
    LBRACE          reduce using rule 89 (increment -> VARIABLE DECREMENT .)
    FUNCTION        reduce using rule 89 (increment -> VARIABLE DECREMENT .)
    PHP_END         reduce using rule 89 (increment -> VARIABLE DECREMENT .)
    RLLAVE          reduce using rule 89 (increment -> VARIABLE DECREMENT .)
    RPAREN          reduce using rule 89 (increment -> VARIABLE DECREMENT .)
    PUNTOYCOMA      shift and go to state 106


state 57

    (91) increment -> VARIABLE PLUS_ASSIGN . valor
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (144) expression -> . VARIABLE
    (145) expression -> . NUMBER
    (146) expression -> . VARIABLE TIMES VARIABLE
    (147) expression -> . VARIABLE PLUS VARIABLE
    (148) expression -> . VARIABLE MINUS VARIABLE
    (149) expression -> . VARIABLE DIVIDE VARIABLE
    (150) expression -> . VARIABLE TIMES NUMBER
    (151) expression -> . VARIABLE PLUS NUMBER
    (152) expression -> . VARIABLE MINUS NUMBER
    (153) expression -> . VARIABLE DIVIDE NUMBER
    (154) expression -> . VARIABLE MOD VARIABLE

    NUMBER          shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 49
    BOOLEAN         shift and go to state 50
    VARIABLE        shift and go to state 73
    ID              shift and go to state 51

    valor                          shift and go to state 107
    expression                     shift and go to state 52

state 58

    (92) increment -> VARIABLE MINUS_ASSIGN . valor
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (144) expression -> . VARIABLE
    (145) expression -> . NUMBER
    (146) expression -> . VARIABLE TIMES VARIABLE
    (147) expression -> . VARIABLE PLUS VARIABLE
    (148) expression -> . VARIABLE MINUS VARIABLE
    (149) expression -> . VARIABLE DIVIDE VARIABLE
    (150) expression -> . VARIABLE TIMES NUMBER
    (151) expression -> . VARIABLE PLUS NUMBER
    (152) expression -> . VARIABLE MINUS NUMBER
    (153) expression -> . VARIABLE DIVIDE NUMBER
    (154) expression -> . VARIABLE MOD VARIABLE

    NUMBER          shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 49
    BOOLEAN         shift and go to state 50
    VARIABLE        shift and go to state 73
    ID              shift and go to state 51

    valor                          shift and go to state 108
    expression                     shift and go to state 52

state 59

    (123) funcioninbuilt -> VARIABLE funcionesdefin . LPAREN RPAREN PUNTOYCOMA

    LPAREN          shift and go to state 109


state 60

    (124) funcionesdefin -> STRLEN .

    LPAREN          reduce using rule 124 (funcionesdefin -> STRLEN .)


state 61

    (125) funcionesdefin -> STRPOS .

    LPAREN          reduce using rule 125 (funcionesdefin -> STRPOS .)


state 62

    (126) funcionesdefin -> ARRAY_PUSH .

    LPAREN          reduce using rule 126 (funcionesdefin -> ARRAY_PUSH .)


state 63

    (127) funcionesdefin -> ARRAY_POP .

    LPAREN          reduce using rule 127 (funcionesdefin -> ARRAY_POP .)


state 64

    (128) funcionesdefin -> IN_ARRAY .

    LPAREN          reduce using rule 128 (funcionesdefin -> IN_ARRAY .)


state 65

    (129) funcionesdefin -> COUNT .

    LPAREN          reduce using rule 129 (funcionesdefin -> COUNT .)


state 66

    (130) funcionesdefin -> SORT .

    LPAREN          reduce using rule 130 (funcionesdefin -> SORT .)


state 67

    (110) lista -> LBRACKET RBRACKET .

    PRINT           reduce using rule 110 (lista -> LBRACKET RBRACKET .)
    PRINT_R         reduce using rule 110 (lista -> LBRACKET RBRACKET .)
    ECHO            reduce using rule 110 (lista -> LBRACKET RBRACKET .)
    VARIABLE        reduce using rule 110 (lista -> LBRACKET RBRACKET .)
    WHILE           reduce using rule 110 (lista -> LBRACKET RBRACKET .)
    IF              reduce using rule 110 (lista -> LBRACKET RBRACKET .)
    ELSE            reduce using rule 110 (lista -> LBRACKET RBRACKET .)
    FOR             reduce using rule 110 (lista -> LBRACKET RBRACKET .)
    LBRACKET        reduce using rule 110 (lista -> LBRACKET RBRACKET .)
    LBRACE          reduce using rule 110 (lista -> LBRACKET RBRACKET .)
    FUNCTION        reduce using rule 110 (lista -> LBRACKET RBRACKET .)
    PHP_END         reduce using rule 110 (lista -> LBRACKET RBRACKET .)
    RBRACKET        reduce using rule 110 (lista -> LBRACKET RBRACKET .)
    COMA            reduce using rule 110 (lista -> LBRACKET RBRACKET .)
    RLLAVE          reduce using rule 110 (lista -> LBRACKET RBRACKET .)
    RPAREN          reduce using rule 110 (lista -> LBRACKET RBRACKET .)


state 68

    (111) lista -> LBRACKET elementos . RBRACKET
    (105) elementos -> elementos . COMA elemento

    RBRACKET        shift and go to state 110
    COMA            shift and go to state 111


state 69

    (104) elementos -> elemento .

    RBRACKET        reduce using rule 104 (elementos -> elemento .)
    COMA            reduce using rule 104 (elementos -> elemento .)
    RPAREN          reduce using rule 104 (elementos -> elemento .)


state 70

    (106) elemento -> valor .
    (109) clave_valor -> valor . ARROW valor

    RBRACKET        reduce using rule 106 (elemento -> valor .)
    COMA            reduce using rule 106 (elemento -> valor .)
    RPAREN          reduce using rule 106 (elemento -> valor .)
    ARROW           shift and go to state 112


state 71

    (107) elemento -> lista .

    RBRACKET        reduce using rule 107 (elemento -> lista .)
    COMA            reduce using rule 107 (elemento -> lista .)
    RPAREN          reduce using rule 107 (elemento -> lista .)


state 72

    (108) elemento -> clave_valor .

    RBRACKET        reduce using rule 108 (elemento -> clave_valor .)
    COMA            reduce using rule 108 (elemento -> clave_valor .)
    RPAREN          reduce using rule 108 (elemento -> clave_valor .)


state 73

    (27) valor -> VARIABLE .
    (144) expression -> VARIABLE .
    (146) expression -> VARIABLE . TIMES VARIABLE
    (147) expression -> VARIABLE . PLUS VARIABLE
    (148) expression -> VARIABLE . MINUS VARIABLE
    (149) expression -> VARIABLE . DIVIDE VARIABLE
    (150) expression -> VARIABLE . TIMES NUMBER
    (151) expression -> VARIABLE . PLUS NUMBER
    (152) expression -> VARIABLE . MINUS NUMBER
    (153) expression -> VARIABLE . DIVIDE NUMBER
    (154) expression -> VARIABLE . MOD VARIABLE

  ! reduce/reduce conflict for ARROW resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for COMA resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PLUS resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MINUS resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for TIMES resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for POT resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PRINT_R resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ECHO resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for FOR resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for LBRACE resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PHP_END resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTO resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RBRACE resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for AND_LOGICAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for OR_LOGICAL resolved using rule 27 (valor -> VARIABLE .)
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    ARROW           reduce using rule 27 (valor -> VARIABLE .)
    RBRACKET        reduce using rule 27 (valor -> VARIABLE .)
    COMA            reduce using rule 27 (valor -> VARIABLE .)
    RPAREN          reduce using rule 27 (valor -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 27 (valor -> VARIABLE .)
    POT             reduce using rule 27 (valor -> VARIABLE .)
    PRINT           reduce using rule 27 (valor -> VARIABLE .)
    PRINT_R         reduce using rule 27 (valor -> VARIABLE .)
    ECHO            reduce using rule 27 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 27 (valor -> VARIABLE .)
    WHILE           reduce using rule 27 (valor -> VARIABLE .)
    IF              reduce using rule 27 (valor -> VARIABLE .)
    ELSE            reduce using rule 27 (valor -> VARIABLE .)
    FOR             reduce using rule 27 (valor -> VARIABLE .)
    LBRACKET        reduce using rule 27 (valor -> VARIABLE .)
    LBRACE          reduce using rule 27 (valor -> VARIABLE .)
    FUNCTION        reduce using rule 27 (valor -> VARIABLE .)
    PHP_END         reduce using rule 27 (valor -> VARIABLE .)
    RLLAVE          reduce using rule 27 (valor -> VARIABLE .)
    PUNTO           reduce using rule 27 (valor -> VARIABLE .)
    RBRACE          reduce using rule 27 (valor -> VARIABLE .)
    AND_LOGICAL     reduce using rule 27 (valor -> VARIABLE .)
    OR_LOGICAL      reduce using rule 27 (valor -> VARIABLE .)
    TIMES           shift and go to state 91
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    DIVIDE          shift and go to state 94
    MOD             shift and go to state 95

  ! PLUS            [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! MINUS           [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! TIMES           [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! DIVIDE          [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! MOD             [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! ARROW           [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! RBRACKET        [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! COMA            [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! RPAREN          [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! PLUS            [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! MINUS           [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! TIMES           [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! DIVIDE          [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! MOD             [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! POT             [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! PRINT_R         [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! ECHO            [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! IF              [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! FOR             [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! LBRACKET        [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! LBRACE          [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! FUNCTION        [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! PHP_END         [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! RLLAVE          [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! PUNTO           [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! RBRACE          [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! AND_LOGICAL     [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! OR_LOGICAL      [ reduce using rule 144 (expression -> VARIABLE .) ]


state 74

    (77) while -> WHILE LPAREN . condicion RPAREN LLLAVE instrucciones RLLAVE
    (78) condicion -> . condicion_simple
    (79) condicion -> . condicion compuesta_logica condicion
    (80) condicion_simple -> . valor comparador valor
    (81) condicion_simple -> . VARIABLE comparador valor
    (82) condicion_simple -> . VARIABLE comparador VARIABLE
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (144) expression -> . VARIABLE
    (145) expression -> . NUMBER
    (146) expression -> . VARIABLE TIMES VARIABLE
    (147) expression -> . VARIABLE PLUS VARIABLE
    (148) expression -> . VARIABLE MINUS VARIABLE
    (149) expression -> . VARIABLE DIVIDE VARIABLE
    (150) expression -> . VARIABLE TIMES NUMBER
    (151) expression -> . VARIABLE PLUS NUMBER
    (152) expression -> . VARIABLE MINUS NUMBER
    (153) expression -> . VARIABLE DIVIDE NUMBER
    (154) expression -> . VARIABLE MOD VARIABLE

    VARIABLE        shift and go to state 116
    NUMBER          shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 49
    BOOLEAN         shift and go to state 50
    ID              shift and go to state 51

    condicion                      shift and go to state 113
    condicion_simple               shift and go to state 114
    valor                          shift and go to state 115
    expression                     shift and go to state 52

state 75

    (43) if -> IF LPAREN . comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (44) if -> IF LPAREN . VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (45) comparaciones -> . comparacion
    (46) comparaciones -> . comparacion operadores comparaciones
    (47) comparacion -> . VARIABLE comparadorNum VARIABLE
    (48) comparacion -> . valor comparador valor
    (49) comparacion -> . VARIABLE comparadorNum valor
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (144) expression -> . VARIABLE
    (145) expression -> . NUMBER
    (146) expression -> . VARIABLE TIMES VARIABLE
    (147) expression -> . VARIABLE PLUS VARIABLE
    (148) expression -> . VARIABLE MINUS VARIABLE
    (149) expression -> . VARIABLE DIVIDE VARIABLE
    (150) expression -> . VARIABLE TIMES NUMBER
    (151) expression -> . VARIABLE PLUS NUMBER
    (152) expression -> . VARIABLE MINUS NUMBER
    (153) expression -> . VARIABLE DIVIDE NUMBER
    (154) expression -> . VARIABLE MOD VARIABLE

    VARIABLE        shift and go to state 118
    NUMBER          shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 49
    BOOLEAN         shift and go to state 50
    ID              shift and go to state 51

    comparaciones                  shift and go to state 117
    comparacion                    shift and go to state 119
    valor                          shift and go to state 120
    expression                     shift and go to state 52

state 76

    (76) else -> ELSE LLLAVE . instrucciones RLLAVE
    (4) instrucciones -> . instruccion
    (5) instrucciones -> . instrucciones instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) instruccion -> . expresiones
    (15) instruccion -> . increment
    (16) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (19) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (20) imprimir -> . ECHO valor PUNTOYCOMA
    (21) imprimir -> . ECHO concatenar PUNTOYCOMA
    (22) imprimir -> . ECHO valor COMA VARIABLE valor PUNTOYCOMA
    (34) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA
    (36) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (37) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (38) indexacion -> . ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (39) estructurasControl -> . while
    (40) estructurasControl -> . if
    (41) estructurasControl -> . else
    (42) estructurasControl -> . for_statement
    (63) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (64) asignacion -> . VARIABLE IGUAL ARRAY PUNTOYCOMA
    (65) asignacion -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (96) estructurasDatos -> . array
    (97) estructurasDatos -> . lista
    (98) estructurasDatos -> . diccionario
    (116) funciones -> . funcion
    (117) funciones -> . funcioninbuilt
    (118) funciones -> . funcion_anonima
    (119) funciones -> . arrow_function
    (66) expresiones -> . VARIABLE IGUAL valor operadorAritmetico valor PUNTOYCOMA
    (67) expresiones -> . VARIABLE IGUAL valor operadorAritmetico operacion
    (88) increment -> . VARIABLE INCREMENT
    (89) increment -> . VARIABLE DECREMENT
    (90) increment -> . VARIABLE DECREMENT PUNTOYCOMA
    (91) increment -> . VARIABLE PLUS_ASSIGN valor
    (92) increment -> . VARIABLE MINUS_ASSIGN valor
    (93) increment -> . empty
    (94) increment -> . VARIABLE INCREMENT PUNTOYCOMA
    (77) while -> . WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE
    (43) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (44) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (76) else -> . ELSE LLLAVE instrucciones RLLAVE
    (85) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (99) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (100) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (101) array -> . VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA
    (102) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (103) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (110) lista -> . LBRACKET RBRACKET
    (111) lista -> . LBRACKET elementos RBRACKET
    (112) diccionario -> . LBRACE pares RBRACE
    (120) funcion -> . FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE
    (121) funcion -> . FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE
    (122) funcioninbuilt -> . VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA
    (123) funcioninbuilt -> . VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA
    (136) funcion_anonima -> . VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (141) arrow_function -> . VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA
    (95) empty -> .

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINT_R resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
    PRINT           shift and go to state 17
    PRINT_R         shift and go to state 18
    ECHO            shift and go to state 19
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    FOR             shift and go to state 36
    LBRACKET        shift and go to state 21
    LBRACE          shift and go to state 37
    FUNCTION        shift and go to state 38
    RLLAVE          reduce using rule 95 (empty -> .)

  ! PRINT           [ reduce using rule 95 (empty -> .) ]
  ! PRINT_R         [ reduce using rule 95 (empty -> .) ]
  ! ECHO            [ reduce using rule 95 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 95 (empty -> .) ]
  ! WHILE           [ reduce using rule 95 (empty -> .) ]
  ! IF              [ reduce using rule 95 (empty -> .) ]
  ! ELSE            [ reduce using rule 95 (empty -> .) ]
  ! FOR             [ reduce using rule 95 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 95 (empty -> .) ]
  ! LBRACE          [ reduce using rule 95 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 95 (empty -> .) ]

    instrucciones                  shift and go to state 121
    instruccion                    shift and go to state 6
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    expresiones                    shift and go to state 15
    increment                      shift and go to state 16
    while                          shift and go to state 22
    if                             shift and go to state 23
    else                           shift and go to state 24
    for_statement                  shift and go to state 25
    array                          shift and go to state 26
    lista                          shift and go to state 27
    diccionario                    shift and go to state 28
    funcion                        shift and go to state 29
    funcioninbuilt                 shift and go to state 30
    funcion_anonima                shift and go to state 31
    arrow_function                 shift and go to state 32
    empty                          shift and go to state 41

state 77

    (85) for_statement -> FOR LPAREN . initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (86) initialization -> . VARIABLE IGUAL valor
    (87) initialization -> . empty
    (95) empty -> .

    VARIABLE        shift and go to state 123
    PUNTOYCOMA      reduce using rule 95 (empty -> .)

    initialization                 shift and go to state 122
    empty                          shift and go to state 124

state 78

    (112) diccionario -> LBRACE pares . RBRACE
    (114) pares -> pares . COMA par

    RBRACE          shift and go to state 125
    COMA            shift and go to state 126


state 79

    (113) pares -> par .

    RBRACE          reduce using rule 113 (pares -> par .)
    COMA            reduce using rule 113 (pares -> par .)


state 80

    (115) par -> STRING . ARROW valor

    ARROW           shift and go to state 127


state 81

    (120) funcion -> FUNCTION ID . LPAREN RPAREN LLLAVE instrucciones RLLAVE
    (121) funcion -> FUNCTION ID . LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE

    LPAREN          shift and go to state 128


state 82

    (16) imprimir -> PRINT LPAREN valor . RPAREN PUNTOYCOMA
    (30) argumentos -> valor .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 129
    COMA            reduce using rule 30 (argumentos -> valor .)

  ! RPAREN          [ reduce using rule 30 (argumentos -> valor .) ]


state 83

    (17) imprimir -> PRINT LPAREN argumentos . RPAREN PUNTOYCOMA
    (31) argumentos -> argumentos . COMA valor

    RPAREN          shift and go to state 130
    COMA            shift and go to state 131


state 84

    (18) imprimir -> PRINT_R LPAREN valor . RPAREN PUNTOYCOMA
    (30) argumentos -> valor .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 132
    COMA            reduce using rule 30 (argumentos -> valor .)

  ! RPAREN          [ reduce using rule 30 (argumentos -> valor .) ]


state 85

    (19) imprimir -> PRINT_R LPAREN argumentos . RPAREN PUNTOYCOMA
    (31) argumentos -> argumentos . COMA valor

    RPAREN          shift and go to state 133
    COMA            shift and go to state 131


state 86

    (20) imprimir -> ECHO valor PUNTOYCOMA .

    PRINT           reduce using rule 20 (imprimir -> ECHO valor PUNTOYCOMA .)
    PRINT_R         reduce using rule 20 (imprimir -> ECHO valor PUNTOYCOMA .)
    ECHO            reduce using rule 20 (imprimir -> ECHO valor PUNTOYCOMA .)
    VARIABLE        reduce using rule 20 (imprimir -> ECHO valor PUNTOYCOMA .)
    WHILE           reduce using rule 20 (imprimir -> ECHO valor PUNTOYCOMA .)
    IF              reduce using rule 20 (imprimir -> ECHO valor PUNTOYCOMA .)
    ELSE            reduce using rule 20 (imprimir -> ECHO valor PUNTOYCOMA .)
    FOR             reduce using rule 20 (imprimir -> ECHO valor PUNTOYCOMA .)
    LBRACKET        reduce using rule 20 (imprimir -> ECHO valor PUNTOYCOMA .)
    LBRACE          reduce using rule 20 (imprimir -> ECHO valor PUNTOYCOMA .)
    FUNCTION        reduce using rule 20 (imprimir -> ECHO valor PUNTOYCOMA .)
    PHP_END         reduce using rule 20 (imprimir -> ECHO valor PUNTOYCOMA .)
    RLLAVE          reduce using rule 20 (imprimir -> ECHO valor PUNTOYCOMA .)


state 87

    (22) imprimir -> ECHO valor COMA . VARIABLE valor PUNTOYCOMA

    VARIABLE        shift and go to state 134


state 88

    (33) concatenar -> valor PUNTO . concatenar
    (32) concatenar -> . valor
    (33) concatenar -> . valor PUNTO concatenar
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (144) expression -> . VARIABLE
    (145) expression -> . NUMBER
    (146) expression -> . VARIABLE TIMES VARIABLE
    (147) expression -> . VARIABLE PLUS VARIABLE
    (148) expression -> . VARIABLE MINUS VARIABLE
    (149) expression -> . VARIABLE DIVIDE VARIABLE
    (150) expression -> . VARIABLE TIMES NUMBER
    (151) expression -> . VARIABLE PLUS NUMBER
    (152) expression -> . VARIABLE MINUS NUMBER
    (153) expression -> . VARIABLE DIVIDE NUMBER
    (154) expression -> . VARIABLE MOD VARIABLE

    NUMBER          shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 49
    BOOLEAN         shift and go to state 50
    VARIABLE        shift and go to state 73
    ID              shift and go to state 51

    valor                          shift and go to state 135
    concatenar                     shift and go to state 136
    expression                     shift and go to state 52

state 89

    (21) imprimir -> ECHO concatenar PUNTOYCOMA .

    PRINT           reduce using rule 21 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    PRINT_R         reduce using rule 21 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    ECHO            reduce using rule 21 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    VARIABLE        reduce using rule 21 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    WHILE           reduce using rule 21 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    IF              reduce using rule 21 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    ELSE            reduce using rule 21 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    FOR             reduce using rule 21 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    LBRACKET        reduce using rule 21 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    LBRACE          reduce using rule 21 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    FUNCTION        reduce using rule 21 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    PHP_END         reduce using rule 21 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    RLLAVE          reduce using rule 21 (imprimir -> ECHO concatenar PUNTOYCOMA .)


state 90

    (38) indexacion -> ECHO VARIABLE LBRACKET . valor RBRACKET PUNTOYCOMA
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (144) expression -> . VARIABLE
    (145) expression -> . NUMBER
    (146) expression -> . VARIABLE TIMES VARIABLE
    (147) expression -> . VARIABLE PLUS VARIABLE
    (148) expression -> . VARIABLE MINUS VARIABLE
    (149) expression -> . VARIABLE DIVIDE VARIABLE
    (150) expression -> . VARIABLE TIMES NUMBER
    (151) expression -> . VARIABLE PLUS NUMBER
    (152) expression -> . VARIABLE MINUS NUMBER
    (153) expression -> . VARIABLE DIVIDE NUMBER
    (154) expression -> . VARIABLE MOD VARIABLE

    NUMBER          shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 49
    BOOLEAN         shift and go to state 50
    VARIABLE        shift and go to state 73
    ID              shift and go to state 51

    valor                          shift and go to state 137
    expression                     shift and go to state 52

state 91

    (146) expression -> VARIABLE TIMES . VARIABLE
    (150) expression -> VARIABLE TIMES . NUMBER

    VARIABLE        shift and go to state 138
    NUMBER          shift and go to state 139


state 92

    (147) expression -> VARIABLE PLUS . VARIABLE
    (151) expression -> VARIABLE PLUS . NUMBER

    VARIABLE        shift and go to state 140
    NUMBER          shift and go to state 141


state 93

    (148) expression -> VARIABLE MINUS . VARIABLE
    (152) expression -> VARIABLE MINUS . NUMBER

    VARIABLE        shift and go to state 142
    NUMBER          shift and go to state 143


state 94

    (149) expression -> VARIABLE DIVIDE . VARIABLE
    (153) expression -> VARIABLE DIVIDE . NUMBER

    VARIABLE        shift and go to state 144
    NUMBER          shift and go to state 145


state 95

    (154) expression -> VARIABLE MOD . VARIABLE

    VARIABLE        shift and go to state 146


state 96

    (34) solicitud_datos -> VARIABLE IGUAL READLINE . LPAREN STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> VARIABLE IGUAL READLINE . LPAREN RPAREN PUNTOYCOMA

    LPAREN          shift and go to state 147


state 97

    (36) input -> VARIABLE IGUAL FGETS . LPAREN VARIABLE RPAREN PUNTOYCOMA

    LPAREN          shift and go to state 148


state 98

    (63) asignacion -> VARIABLE IGUAL valor . PUNTOYCOMA
    (66) expresiones -> VARIABLE IGUAL valor . operadorAritmetico valor PUNTOYCOMA
    (67) expresiones -> VARIABLE IGUAL valor . operadorAritmetico operacion
    (70) operadorAritmetico -> . PLUS
    (71) operadorAritmetico -> . MINUS
    (72) operadorAritmetico -> . TIMES
    (73) operadorAritmetico -> . DIVIDE
    (74) operadorAritmetico -> . MOD
    (75) operadorAritmetico -> . POT

    PUNTOYCOMA      shift and go to state 149
    PLUS            shift and go to state 151
    MINUS           shift and go to state 152
    TIMES           shift and go to state 153
    DIVIDE          shift and go to state 154
    MOD             shift and go to state 155
    POT             shift and go to state 156

    operadorAritmetico             shift and go to state 150

state 99

    (64) asignacion -> VARIABLE IGUAL ARRAY . PUNTOYCOMA
    (65) asignacion -> VARIABLE IGUAL ARRAY . LPAREN elementos RPAREN PUNTOYCOMA
    (99) array -> VARIABLE IGUAL ARRAY . LPAREN RPAREN PUNTOYCOMA
    (100) array -> VARIABLE IGUAL ARRAY . LPAREN elementos RPAREN PUNTOYCOMA
    (101) array -> VARIABLE IGUAL ARRAY . LPAREN valor RPAREN PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 157
    LPAREN          shift and go to state 158


state 100

    (102) array -> VARIABLE IGUAL LBRACKET . RBRACKET PUNTOYCOMA
    (103) array -> VARIABLE IGUAL LBRACKET . elementos RBRACKET PUNTOYCOMA
    (104) elementos -> . elemento
    (105) elementos -> . elementos COMA elemento
    (106) elemento -> . valor
    (107) elemento -> . lista
    (108) elemento -> . clave_valor
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (110) lista -> . LBRACKET RBRACKET
    (111) lista -> . LBRACKET elementos RBRACKET
    (109) clave_valor -> . valor ARROW valor
    (144) expression -> . VARIABLE
    (145) expression -> . NUMBER
    (146) expression -> . VARIABLE TIMES VARIABLE
    (147) expression -> . VARIABLE PLUS VARIABLE
    (148) expression -> . VARIABLE MINUS VARIABLE
    (149) expression -> . VARIABLE DIVIDE VARIABLE
    (150) expression -> . VARIABLE TIMES NUMBER
    (151) expression -> . VARIABLE PLUS NUMBER
    (152) expression -> . VARIABLE MINUS NUMBER
    (153) expression -> . VARIABLE DIVIDE NUMBER
    (154) expression -> . VARIABLE MOD VARIABLE

    RBRACKET        shift and go to state 159
    NUMBER          shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 49
    BOOLEAN         shift and go to state 50
    VARIABLE        shift and go to state 73
    ID              shift and go to state 51
    LBRACKET        shift and go to state 21

    elementos                      shift and go to state 160
    elemento                       shift and go to state 69
    valor                          shift and go to state 70
    lista                          shift and go to state 71
    clave_valor                    shift and go to state 72
    expression                     shift and go to state 52

state 101

    (122) funcioninbuilt -> VARIABLE IGUAL funcionesdefin . LPAREN operaciones RPAREN PUNTOYCOMA

    LPAREN          shift and go to state 161


state 102

    (136) funcion_anonima -> VARIABLE IGUAL FUNCTION . LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA

    LPAREN          shift and go to state 162


state 103

    (141) arrow_function -> VARIABLE IGUAL FN . LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA

    LPAREN          shift and go to state 163


state 104

    (37) indexacion -> VARIABLE LBRACKET valor . RBRACKET

    RBRACKET        shift and go to state 164


state 105

    (94) increment -> VARIABLE INCREMENT PUNTOYCOMA .

    PRINT           reduce using rule 94 (increment -> VARIABLE INCREMENT PUNTOYCOMA .)
    PRINT_R         reduce using rule 94 (increment -> VARIABLE INCREMENT PUNTOYCOMA .)
    ECHO            reduce using rule 94 (increment -> VARIABLE INCREMENT PUNTOYCOMA .)
    VARIABLE        reduce using rule 94 (increment -> VARIABLE INCREMENT PUNTOYCOMA .)
    WHILE           reduce using rule 94 (increment -> VARIABLE INCREMENT PUNTOYCOMA .)
    IF              reduce using rule 94 (increment -> VARIABLE INCREMENT PUNTOYCOMA .)
    ELSE            reduce using rule 94 (increment -> VARIABLE INCREMENT PUNTOYCOMA .)
    FOR             reduce using rule 94 (increment -> VARIABLE INCREMENT PUNTOYCOMA .)
    LBRACKET        reduce using rule 94 (increment -> VARIABLE INCREMENT PUNTOYCOMA .)
    LBRACE          reduce using rule 94 (increment -> VARIABLE INCREMENT PUNTOYCOMA .)
    FUNCTION        reduce using rule 94 (increment -> VARIABLE INCREMENT PUNTOYCOMA .)
    PHP_END         reduce using rule 94 (increment -> VARIABLE INCREMENT PUNTOYCOMA .)
    RLLAVE          reduce using rule 94 (increment -> VARIABLE INCREMENT PUNTOYCOMA .)
    RPAREN          reduce using rule 94 (increment -> VARIABLE INCREMENT PUNTOYCOMA .)


state 106

    (90) increment -> VARIABLE DECREMENT PUNTOYCOMA .

    PRINT           reduce using rule 90 (increment -> VARIABLE DECREMENT PUNTOYCOMA .)
    PRINT_R         reduce using rule 90 (increment -> VARIABLE DECREMENT PUNTOYCOMA .)
    ECHO            reduce using rule 90 (increment -> VARIABLE DECREMENT PUNTOYCOMA .)
    VARIABLE        reduce using rule 90 (increment -> VARIABLE DECREMENT PUNTOYCOMA .)
    WHILE           reduce using rule 90 (increment -> VARIABLE DECREMENT PUNTOYCOMA .)
    IF              reduce using rule 90 (increment -> VARIABLE DECREMENT PUNTOYCOMA .)
    ELSE            reduce using rule 90 (increment -> VARIABLE DECREMENT PUNTOYCOMA .)
    FOR             reduce using rule 90 (increment -> VARIABLE DECREMENT PUNTOYCOMA .)
    LBRACKET        reduce using rule 90 (increment -> VARIABLE DECREMENT PUNTOYCOMA .)
    LBRACE          reduce using rule 90 (increment -> VARIABLE DECREMENT PUNTOYCOMA .)
    FUNCTION        reduce using rule 90 (increment -> VARIABLE DECREMENT PUNTOYCOMA .)
    PHP_END         reduce using rule 90 (increment -> VARIABLE DECREMENT PUNTOYCOMA .)
    RLLAVE          reduce using rule 90 (increment -> VARIABLE DECREMENT PUNTOYCOMA .)
    RPAREN          reduce using rule 90 (increment -> VARIABLE DECREMENT PUNTOYCOMA .)


state 107

    (91) increment -> VARIABLE PLUS_ASSIGN valor .

    PRINT           reduce using rule 91 (increment -> VARIABLE PLUS_ASSIGN valor .)
    PRINT_R         reduce using rule 91 (increment -> VARIABLE PLUS_ASSIGN valor .)
    ECHO            reduce using rule 91 (increment -> VARIABLE PLUS_ASSIGN valor .)
    VARIABLE        reduce using rule 91 (increment -> VARIABLE PLUS_ASSIGN valor .)
    WHILE           reduce using rule 91 (increment -> VARIABLE PLUS_ASSIGN valor .)
    IF              reduce using rule 91 (increment -> VARIABLE PLUS_ASSIGN valor .)
    ELSE            reduce using rule 91 (increment -> VARIABLE PLUS_ASSIGN valor .)
    FOR             reduce using rule 91 (increment -> VARIABLE PLUS_ASSIGN valor .)
    LBRACKET        reduce using rule 91 (increment -> VARIABLE PLUS_ASSIGN valor .)
    LBRACE          reduce using rule 91 (increment -> VARIABLE PLUS_ASSIGN valor .)
    FUNCTION        reduce using rule 91 (increment -> VARIABLE PLUS_ASSIGN valor .)
    PHP_END         reduce using rule 91 (increment -> VARIABLE PLUS_ASSIGN valor .)
    RLLAVE          reduce using rule 91 (increment -> VARIABLE PLUS_ASSIGN valor .)
    RPAREN          reduce using rule 91 (increment -> VARIABLE PLUS_ASSIGN valor .)


state 108

    (92) increment -> VARIABLE MINUS_ASSIGN valor .

    PRINT           reduce using rule 92 (increment -> VARIABLE MINUS_ASSIGN valor .)
    PRINT_R         reduce using rule 92 (increment -> VARIABLE MINUS_ASSIGN valor .)
    ECHO            reduce using rule 92 (increment -> VARIABLE MINUS_ASSIGN valor .)
    VARIABLE        reduce using rule 92 (increment -> VARIABLE MINUS_ASSIGN valor .)
    WHILE           reduce using rule 92 (increment -> VARIABLE MINUS_ASSIGN valor .)
    IF              reduce using rule 92 (increment -> VARIABLE MINUS_ASSIGN valor .)
    ELSE            reduce using rule 92 (increment -> VARIABLE MINUS_ASSIGN valor .)
    FOR             reduce using rule 92 (increment -> VARIABLE MINUS_ASSIGN valor .)
    LBRACKET        reduce using rule 92 (increment -> VARIABLE MINUS_ASSIGN valor .)
    LBRACE          reduce using rule 92 (increment -> VARIABLE MINUS_ASSIGN valor .)
    FUNCTION        reduce using rule 92 (increment -> VARIABLE MINUS_ASSIGN valor .)
    PHP_END         reduce using rule 92 (increment -> VARIABLE MINUS_ASSIGN valor .)
    RLLAVE          reduce using rule 92 (increment -> VARIABLE MINUS_ASSIGN valor .)
    RPAREN          reduce using rule 92 (increment -> VARIABLE MINUS_ASSIGN valor .)


state 109

    (123) funcioninbuilt -> VARIABLE funcionesdefin LPAREN . RPAREN PUNTOYCOMA

    RPAREN          shift and go to state 165


state 110

    (111) lista -> LBRACKET elementos RBRACKET .

    PRINT           reduce using rule 111 (lista -> LBRACKET elementos RBRACKET .)
    PRINT_R         reduce using rule 111 (lista -> LBRACKET elementos RBRACKET .)
    ECHO            reduce using rule 111 (lista -> LBRACKET elementos RBRACKET .)
    VARIABLE        reduce using rule 111 (lista -> LBRACKET elementos RBRACKET .)
    WHILE           reduce using rule 111 (lista -> LBRACKET elementos RBRACKET .)
    IF              reduce using rule 111 (lista -> LBRACKET elementos RBRACKET .)
    ELSE            reduce using rule 111 (lista -> LBRACKET elementos RBRACKET .)
    FOR             reduce using rule 111 (lista -> LBRACKET elementos RBRACKET .)
    LBRACKET        reduce using rule 111 (lista -> LBRACKET elementos RBRACKET .)
    LBRACE          reduce using rule 111 (lista -> LBRACKET elementos RBRACKET .)
    FUNCTION        reduce using rule 111 (lista -> LBRACKET elementos RBRACKET .)
    PHP_END         reduce using rule 111 (lista -> LBRACKET elementos RBRACKET .)
    RBRACKET        reduce using rule 111 (lista -> LBRACKET elementos RBRACKET .)
    COMA            reduce using rule 111 (lista -> LBRACKET elementos RBRACKET .)
    RLLAVE          reduce using rule 111 (lista -> LBRACKET elementos RBRACKET .)
    RPAREN          reduce using rule 111 (lista -> LBRACKET elementos RBRACKET .)


state 111

    (105) elementos -> elementos COMA . elemento
    (106) elemento -> . valor
    (107) elemento -> . lista
    (108) elemento -> . clave_valor
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (110) lista -> . LBRACKET RBRACKET
    (111) lista -> . LBRACKET elementos RBRACKET
    (109) clave_valor -> . valor ARROW valor
    (144) expression -> . VARIABLE
    (145) expression -> . NUMBER
    (146) expression -> . VARIABLE TIMES VARIABLE
    (147) expression -> . VARIABLE PLUS VARIABLE
    (148) expression -> . VARIABLE MINUS VARIABLE
    (149) expression -> . VARIABLE DIVIDE VARIABLE
    (150) expression -> . VARIABLE TIMES NUMBER
    (151) expression -> . VARIABLE PLUS NUMBER
    (152) expression -> . VARIABLE MINUS NUMBER
    (153) expression -> . VARIABLE DIVIDE NUMBER
    (154) expression -> . VARIABLE MOD VARIABLE

    NUMBER          shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 49
    BOOLEAN         shift and go to state 50
    VARIABLE        shift and go to state 73
    ID              shift and go to state 51
    LBRACKET        shift and go to state 21

    elemento                       shift and go to state 166
    valor                          shift and go to state 70
    lista                          shift and go to state 71
    clave_valor                    shift and go to state 72
    expression                     shift and go to state 52

state 112

    (109) clave_valor -> valor ARROW . valor
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (144) expression -> . VARIABLE
    (145) expression -> . NUMBER
    (146) expression -> . VARIABLE TIMES VARIABLE
    (147) expression -> . VARIABLE PLUS VARIABLE
    (148) expression -> . VARIABLE MINUS VARIABLE
    (149) expression -> . VARIABLE DIVIDE VARIABLE
    (150) expression -> . VARIABLE TIMES NUMBER
    (151) expression -> . VARIABLE PLUS NUMBER
    (152) expression -> . VARIABLE MINUS NUMBER
    (153) expression -> . VARIABLE DIVIDE NUMBER
    (154) expression -> . VARIABLE MOD VARIABLE

    NUMBER          shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 49
    BOOLEAN         shift and go to state 50
    VARIABLE        shift and go to state 73
    ID              shift and go to state 51

    valor                          shift and go to state 167
    expression                     shift and go to state 52

state 113

    (77) while -> WHILE LPAREN condicion . RPAREN LLLAVE instrucciones RLLAVE
    (79) condicion -> condicion . compuesta_logica condicion
    (83) compuesta_logica -> . AND_LOGICAL
    (84) compuesta_logica -> . OR_LOGICAL

    RPAREN          shift and go to state 168
    AND_LOGICAL     shift and go to state 170
    OR_LOGICAL      shift and go to state 171

    compuesta_logica               shift and go to state 169

state 114

    (78) condicion -> condicion_simple .

    RPAREN          reduce using rule 78 (condicion -> condicion_simple .)
    AND_LOGICAL     reduce using rule 78 (condicion -> condicion_simple .)
    OR_LOGICAL      reduce using rule 78 (condicion -> condicion_simple .)
    PUNTOYCOMA      reduce using rule 78 (condicion -> condicion_simple .)


state 115

    (80) condicion_simple -> valor . comparador valor
    (54) comparador -> . EQUAL
    (55) comparador -> . NOT_IDENTICAL
    (56) comparador -> . NOT_EQUAL
    (57) comparador -> . IGUAL
    (58) comparador -> . IDENTICAL
    (59) comparador -> . MAYOR
    (60) comparador -> . MENOR

    EQUAL           shift and go to state 173
    NOT_IDENTICAL   shift and go to state 174
    NOT_EQUAL       shift and go to state 175
    IGUAL           shift and go to state 176
    IDENTICAL       shift and go to state 177
    MAYOR           shift and go to state 178
    MENOR           shift and go to state 179

    comparador                     shift and go to state 172

state 116

    (81) condicion_simple -> VARIABLE . comparador valor
    (82) condicion_simple -> VARIABLE . comparador VARIABLE
    (27) valor -> VARIABLE .
    (144) expression -> VARIABLE .
    (146) expression -> VARIABLE . TIMES VARIABLE
    (147) expression -> VARIABLE . PLUS VARIABLE
    (148) expression -> VARIABLE . MINUS VARIABLE
    (149) expression -> VARIABLE . DIVIDE VARIABLE
    (150) expression -> VARIABLE . TIMES NUMBER
    (151) expression -> VARIABLE . PLUS NUMBER
    (152) expression -> VARIABLE . MINUS NUMBER
    (153) expression -> VARIABLE . DIVIDE NUMBER
    (154) expression -> VARIABLE . MOD VARIABLE
    (54) comparador -> . EQUAL
    (55) comparador -> . NOT_IDENTICAL
    (56) comparador -> . NOT_EQUAL
    (57) comparador -> . IGUAL
    (58) comparador -> . IDENTICAL
    (59) comparador -> . MAYOR
    (60) comparador -> . MENOR

  ! reduce/reduce conflict for EQUAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NOT_IDENTICAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IGUAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MAYOR resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MENOR resolved using rule 27 (valor -> VARIABLE .)
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_IDENTICAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for IDENTICAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
    TIMES           shift and go to state 91
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    DIVIDE          shift and go to state 94
    MOD             shift and go to state 95
    EQUAL           shift and go to state 173
    NOT_IDENTICAL   shift and go to state 174
    NOT_EQUAL       shift and go to state 175
    IGUAL           shift and go to state 176
    IDENTICAL       shift and go to state 177
    MAYOR           shift and go to state 178
    MENOR           shift and go to state 179

  ! EQUAL           [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! NOT_IDENTICAL   [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! NOT_EQUAL       [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! IGUAL           [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! IDENTICAL       [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! EQUAL           [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! NOT_IDENTICAL   [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! NOT_EQUAL       [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! IGUAL           [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! IDENTICAL       [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 144 (expression -> VARIABLE .) ]

    comparador                     shift and go to state 180

state 117

    (43) if -> IF LPAREN comparaciones . RPAREN LLLAVE instrucciones RLLAVE

    RPAREN          shift and go to state 181


state 118

    (44) if -> IF LPAREN VARIABLE . RPAREN LLLAVE instrucciones RLLAVE
    (47) comparacion -> VARIABLE . comparadorNum VARIABLE
    (49) comparacion -> VARIABLE . comparadorNum valor
    (27) valor -> VARIABLE .
    (144) expression -> VARIABLE .
    (146) expression -> VARIABLE . TIMES VARIABLE
    (147) expression -> VARIABLE . PLUS VARIABLE
    (148) expression -> VARIABLE . MINUS VARIABLE
    (149) expression -> VARIABLE . DIVIDE VARIABLE
    (150) expression -> VARIABLE . TIMES NUMBER
    (151) expression -> VARIABLE . PLUS NUMBER
    (152) expression -> VARIABLE . MINUS NUMBER
    (153) expression -> VARIABLE . DIVIDE NUMBER
    (154) expression -> VARIABLE . MOD VARIABLE
    (50) comparadorNum -> . MAYOR
    (51) comparadorNum -> . MAYORIGUAL
    (52) comparadorNum -> . MENOR
    (53) comparadorNum -> . MENORIGUAL

  ! reduce/reduce conflict for EQUAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NOT_IDENTICAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IGUAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MAYOR resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MENOR resolved using rule 27 (valor -> VARIABLE .)
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
    RPAREN          shift and go to state 182
    EQUAL           reduce using rule 27 (valor -> VARIABLE .)
    NOT_IDENTICAL   reduce using rule 27 (valor -> VARIABLE .)
    NOT_EQUAL       reduce using rule 27 (valor -> VARIABLE .)
    IGUAL           reduce using rule 27 (valor -> VARIABLE .)
    IDENTICAL       reduce using rule 27 (valor -> VARIABLE .)
    TIMES           shift and go to state 91
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    DIVIDE          shift and go to state 94
    MOD             shift and go to state 95
    MAYOR           shift and go to state 184
    MAYORIGUAL      shift and go to state 185
    MENOR           shift and go to state 186
    MENORIGUAL      shift and go to state 187

  ! MAYOR           [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! EQUAL           [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! NOT_IDENTICAL   [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! NOT_EQUAL       [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! IGUAL           [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! IDENTICAL       [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 144 (expression -> VARIABLE .) ]

    comparadorNum                  shift and go to state 183

state 119

    (45) comparaciones -> comparacion .
    (46) comparaciones -> comparacion . operadores comparaciones
    (61) operadores -> . AND_LOGICAL
    (62) operadores -> . OR_LOGICAL

    RPAREN          reduce using rule 45 (comparaciones -> comparacion .)
    AND_LOGICAL     shift and go to state 189
    OR_LOGICAL      shift and go to state 190

    operadores                     shift and go to state 188

state 120

    (48) comparacion -> valor . comparador valor
    (54) comparador -> . EQUAL
    (55) comparador -> . NOT_IDENTICAL
    (56) comparador -> . NOT_EQUAL
    (57) comparador -> . IGUAL
    (58) comparador -> . IDENTICAL
    (59) comparador -> . MAYOR
    (60) comparador -> . MENOR

    EQUAL           shift and go to state 173
    NOT_IDENTICAL   shift and go to state 174
    NOT_EQUAL       shift and go to state 175
    IGUAL           shift and go to state 176
    IDENTICAL       shift and go to state 177
    MAYOR           shift and go to state 178
    MENOR           shift and go to state 179

    comparador                     shift and go to state 191

state 121

    (76) else -> ELSE LLLAVE instrucciones . RLLAVE
    (5) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) instruccion -> . expresiones
    (15) instruccion -> . increment
    (16) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (19) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (20) imprimir -> . ECHO valor PUNTOYCOMA
    (21) imprimir -> . ECHO concatenar PUNTOYCOMA
    (22) imprimir -> . ECHO valor COMA VARIABLE valor PUNTOYCOMA
    (34) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA
    (36) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (37) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (38) indexacion -> . ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (39) estructurasControl -> . while
    (40) estructurasControl -> . if
    (41) estructurasControl -> . else
    (42) estructurasControl -> . for_statement
    (63) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (64) asignacion -> . VARIABLE IGUAL ARRAY PUNTOYCOMA
    (65) asignacion -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (96) estructurasDatos -> . array
    (97) estructurasDatos -> . lista
    (98) estructurasDatos -> . diccionario
    (116) funciones -> . funcion
    (117) funciones -> . funcioninbuilt
    (118) funciones -> . funcion_anonima
    (119) funciones -> . arrow_function
    (66) expresiones -> . VARIABLE IGUAL valor operadorAritmetico valor PUNTOYCOMA
    (67) expresiones -> . VARIABLE IGUAL valor operadorAritmetico operacion
    (88) increment -> . VARIABLE INCREMENT
    (89) increment -> . VARIABLE DECREMENT
    (90) increment -> . VARIABLE DECREMENT PUNTOYCOMA
    (91) increment -> . VARIABLE PLUS_ASSIGN valor
    (92) increment -> . VARIABLE MINUS_ASSIGN valor
    (93) increment -> . empty
    (94) increment -> . VARIABLE INCREMENT PUNTOYCOMA
    (77) while -> . WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE
    (43) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (44) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (76) else -> . ELSE LLLAVE instrucciones RLLAVE
    (85) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (99) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (100) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (101) array -> . VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA
    (102) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (103) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (110) lista -> . LBRACKET RBRACKET
    (111) lista -> . LBRACKET elementos RBRACKET
    (112) diccionario -> . LBRACE pares RBRACE
    (120) funcion -> . FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE
    (121) funcion -> . FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE
    (122) funcioninbuilt -> . VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA
    (123) funcioninbuilt -> . VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA
    (136) funcion_anonima -> . VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (141) arrow_function -> . VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA
    (95) empty -> .

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINT_R resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
    RLLAVE          shift and go to state 192
    PRINT           shift and go to state 17
    PRINT_R         shift and go to state 18
    ECHO            shift and go to state 19
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    FOR             shift and go to state 36
    LBRACKET        shift and go to state 21
    LBRACE          shift and go to state 37
    FUNCTION        shift and go to state 38

  ! RLLAVE          [ reduce using rule 95 (empty -> .) ]
  ! PRINT           [ reduce using rule 95 (empty -> .) ]
  ! PRINT_R         [ reduce using rule 95 (empty -> .) ]
  ! ECHO            [ reduce using rule 95 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 95 (empty -> .) ]
  ! WHILE           [ reduce using rule 95 (empty -> .) ]
  ! IF              [ reduce using rule 95 (empty -> .) ]
  ! ELSE            [ reduce using rule 95 (empty -> .) ]
  ! FOR             [ reduce using rule 95 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 95 (empty -> .) ]
  ! LBRACE          [ reduce using rule 95 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 95 (empty -> .) ]

    instruccion                    shift and go to state 40
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    expresiones                    shift and go to state 15
    increment                      shift and go to state 16
    while                          shift and go to state 22
    if                             shift and go to state 23
    else                           shift and go to state 24
    for_statement                  shift and go to state 25
    array                          shift and go to state 26
    lista                          shift and go to state 27
    diccionario                    shift and go to state 28
    funcion                        shift and go to state 29
    funcioninbuilt                 shift and go to state 30
    funcion_anonima                shift and go to state 31
    arrow_function                 shift and go to state 32
    empty                          shift and go to state 41

state 122

    (85) for_statement -> FOR LPAREN initialization . PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE

    PUNTOYCOMA      shift and go to state 193


state 123

    (86) initialization -> VARIABLE . IGUAL valor

    IGUAL           shift and go to state 194


state 124

    (87) initialization -> empty .

    PUNTOYCOMA      reduce using rule 87 (initialization -> empty .)


state 125

    (112) diccionario -> LBRACE pares RBRACE .

    PRINT           reduce using rule 112 (diccionario -> LBRACE pares RBRACE .)
    PRINT_R         reduce using rule 112 (diccionario -> LBRACE pares RBRACE .)
    ECHO            reduce using rule 112 (diccionario -> LBRACE pares RBRACE .)
    VARIABLE        reduce using rule 112 (diccionario -> LBRACE pares RBRACE .)
    WHILE           reduce using rule 112 (diccionario -> LBRACE pares RBRACE .)
    IF              reduce using rule 112 (diccionario -> LBRACE pares RBRACE .)
    ELSE            reduce using rule 112 (diccionario -> LBRACE pares RBRACE .)
    FOR             reduce using rule 112 (diccionario -> LBRACE pares RBRACE .)
    LBRACKET        reduce using rule 112 (diccionario -> LBRACE pares RBRACE .)
    LBRACE          reduce using rule 112 (diccionario -> LBRACE pares RBRACE .)
    FUNCTION        reduce using rule 112 (diccionario -> LBRACE pares RBRACE .)
    PHP_END         reduce using rule 112 (diccionario -> LBRACE pares RBRACE .)
    RLLAVE          reduce using rule 112 (diccionario -> LBRACE pares RBRACE .)


state 126

    (114) pares -> pares COMA . par
    (115) par -> . STRING ARROW valor

    STRING          shift and go to state 80

    par                            shift and go to state 195

state 127

    (115) par -> STRING ARROW . valor
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (144) expression -> . VARIABLE
    (145) expression -> . NUMBER
    (146) expression -> . VARIABLE TIMES VARIABLE
    (147) expression -> . VARIABLE PLUS VARIABLE
    (148) expression -> . VARIABLE MINUS VARIABLE
    (149) expression -> . VARIABLE DIVIDE VARIABLE
    (150) expression -> . VARIABLE TIMES NUMBER
    (151) expression -> . VARIABLE PLUS NUMBER
    (152) expression -> . VARIABLE MINUS NUMBER
    (153) expression -> . VARIABLE DIVIDE NUMBER
    (154) expression -> . VARIABLE MOD VARIABLE

    NUMBER          shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 49
    BOOLEAN         shift and go to state 50
    VARIABLE        shift and go to state 73
    ID              shift and go to state 51

    valor                          shift and go to state 196
    expression                     shift and go to state 52

state 128

    (120) funcion -> FUNCTION ID LPAREN . RPAREN LLLAVE instrucciones RLLAVE
    (121) funcion -> FUNCTION ID LPAREN . parametros RPAREN LLLAVE instrucciones RLLAVE
    (137) parametros -> . STRING
    (138) parametros -> . parametros COMA STRING
    (139) parametros -> . VARIABLE
    (140) parametros -> . parametros COMA VARIABLE

    RPAREN          shift and go to state 197
    STRING          shift and go to state 199
    VARIABLE        shift and go to state 200

    parametros                     shift and go to state 198

state 129

    (16) imprimir -> PRINT LPAREN valor RPAREN . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 201


state 130

    (17) imprimir -> PRINT LPAREN argumentos RPAREN . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 202


state 131

    (31) argumentos -> argumentos COMA . valor
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (144) expression -> . VARIABLE
    (145) expression -> . NUMBER
    (146) expression -> . VARIABLE TIMES VARIABLE
    (147) expression -> . VARIABLE PLUS VARIABLE
    (148) expression -> . VARIABLE MINUS VARIABLE
    (149) expression -> . VARIABLE DIVIDE VARIABLE
    (150) expression -> . VARIABLE TIMES NUMBER
    (151) expression -> . VARIABLE PLUS NUMBER
    (152) expression -> . VARIABLE MINUS NUMBER
    (153) expression -> . VARIABLE DIVIDE NUMBER
    (154) expression -> . VARIABLE MOD VARIABLE

    NUMBER          shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 49
    BOOLEAN         shift and go to state 50
    VARIABLE        shift and go to state 73
    ID              shift and go to state 51

    valor                          shift and go to state 203
    expression                     shift and go to state 52

state 132

    (18) imprimir -> PRINT_R LPAREN valor RPAREN . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 204


state 133

    (19) imprimir -> PRINT_R LPAREN argumentos RPAREN . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 205


state 134

    (22) imprimir -> ECHO valor COMA VARIABLE . valor PUNTOYCOMA
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (144) expression -> . VARIABLE
    (145) expression -> . NUMBER
    (146) expression -> . VARIABLE TIMES VARIABLE
    (147) expression -> . VARIABLE PLUS VARIABLE
    (148) expression -> . VARIABLE MINUS VARIABLE
    (149) expression -> . VARIABLE DIVIDE VARIABLE
    (150) expression -> . VARIABLE TIMES NUMBER
    (151) expression -> . VARIABLE PLUS NUMBER
    (152) expression -> . VARIABLE MINUS NUMBER
    (153) expression -> . VARIABLE DIVIDE NUMBER
    (154) expression -> . VARIABLE MOD VARIABLE

    NUMBER          shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 49
    BOOLEAN         shift and go to state 50
    VARIABLE        shift and go to state 73
    ID              shift and go to state 51

    valor                          shift and go to state 206
    expression                     shift and go to state 52

state 135

    (32) concatenar -> valor .
    (33) concatenar -> valor . PUNTO concatenar

    PUNTOYCOMA      reduce using rule 32 (concatenar -> valor .)
    PUNTO           shift and go to state 88


state 136

    (33) concatenar -> valor PUNTO concatenar .

    PUNTOYCOMA      reduce using rule 33 (concatenar -> valor PUNTO concatenar .)


state 137

    (38) indexacion -> ECHO VARIABLE LBRACKET valor . RBRACKET PUNTOYCOMA

    RBRACKET        shift and go to state 207


state 138

    (146) expression -> VARIABLE TIMES VARIABLE .

    PUNTOYCOMA      reduce using rule 146 (expression -> VARIABLE TIMES VARIABLE .)
    COMA            reduce using rule 146 (expression -> VARIABLE TIMES VARIABLE .)
    PUNTO           reduce using rule 146 (expression -> VARIABLE TIMES VARIABLE .)
    ARROW           reduce using rule 146 (expression -> VARIABLE TIMES VARIABLE .)
    RBRACKET        reduce using rule 146 (expression -> VARIABLE TIMES VARIABLE .)
    RPAREN          reduce using rule 146 (expression -> VARIABLE TIMES VARIABLE .)
    PLUS            reduce using rule 146 (expression -> VARIABLE TIMES VARIABLE .)
    MINUS           reduce using rule 146 (expression -> VARIABLE TIMES VARIABLE .)
    TIMES           reduce using rule 146 (expression -> VARIABLE TIMES VARIABLE .)
    DIVIDE          reduce using rule 146 (expression -> VARIABLE TIMES VARIABLE .)
    MOD             reduce using rule 146 (expression -> VARIABLE TIMES VARIABLE .)
    POT             reduce using rule 146 (expression -> VARIABLE TIMES VARIABLE .)
    PRINT           reduce using rule 146 (expression -> VARIABLE TIMES VARIABLE .)
    PRINT_R         reduce using rule 146 (expression -> VARIABLE TIMES VARIABLE .)
    ECHO            reduce using rule 146 (expression -> VARIABLE TIMES VARIABLE .)
    VARIABLE        reduce using rule 146 (expression -> VARIABLE TIMES VARIABLE .)
    WHILE           reduce using rule 146 (expression -> VARIABLE TIMES VARIABLE .)
    IF              reduce using rule 146 (expression -> VARIABLE TIMES VARIABLE .)
    ELSE            reduce using rule 146 (expression -> VARIABLE TIMES VARIABLE .)
    FOR             reduce using rule 146 (expression -> VARIABLE TIMES VARIABLE .)
    LBRACKET        reduce using rule 146 (expression -> VARIABLE TIMES VARIABLE .)
    LBRACE          reduce using rule 146 (expression -> VARIABLE TIMES VARIABLE .)
    FUNCTION        reduce using rule 146 (expression -> VARIABLE TIMES VARIABLE .)
    PHP_END         reduce using rule 146 (expression -> VARIABLE TIMES VARIABLE .)
    RLLAVE          reduce using rule 146 (expression -> VARIABLE TIMES VARIABLE .)
    EQUAL           reduce using rule 146 (expression -> VARIABLE TIMES VARIABLE .)
    NOT_IDENTICAL   reduce using rule 146 (expression -> VARIABLE TIMES VARIABLE .)
    NOT_EQUAL       reduce using rule 146 (expression -> VARIABLE TIMES VARIABLE .)
    IGUAL           reduce using rule 146 (expression -> VARIABLE TIMES VARIABLE .)
    IDENTICAL       reduce using rule 146 (expression -> VARIABLE TIMES VARIABLE .)
    MAYOR           reduce using rule 146 (expression -> VARIABLE TIMES VARIABLE .)
    MENOR           reduce using rule 146 (expression -> VARIABLE TIMES VARIABLE .)
    RBRACE          reduce using rule 146 (expression -> VARIABLE TIMES VARIABLE .)
    AND_LOGICAL     reduce using rule 146 (expression -> VARIABLE TIMES VARIABLE .)
    OR_LOGICAL      reduce using rule 146 (expression -> VARIABLE TIMES VARIABLE .)


state 139

    (150) expression -> VARIABLE TIMES NUMBER .

    PUNTOYCOMA      reduce using rule 150 (expression -> VARIABLE TIMES NUMBER .)
    COMA            reduce using rule 150 (expression -> VARIABLE TIMES NUMBER .)
    PUNTO           reduce using rule 150 (expression -> VARIABLE TIMES NUMBER .)
    ARROW           reduce using rule 150 (expression -> VARIABLE TIMES NUMBER .)
    RBRACKET        reduce using rule 150 (expression -> VARIABLE TIMES NUMBER .)
    RPAREN          reduce using rule 150 (expression -> VARIABLE TIMES NUMBER .)
    PLUS            reduce using rule 150 (expression -> VARIABLE TIMES NUMBER .)
    MINUS           reduce using rule 150 (expression -> VARIABLE TIMES NUMBER .)
    TIMES           reduce using rule 150 (expression -> VARIABLE TIMES NUMBER .)
    DIVIDE          reduce using rule 150 (expression -> VARIABLE TIMES NUMBER .)
    MOD             reduce using rule 150 (expression -> VARIABLE TIMES NUMBER .)
    POT             reduce using rule 150 (expression -> VARIABLE TIMES NUMBER .)
    PRINT           reduce using rule 150 (expression -> VARIABLE TIMES NUMBER .)
    PRINT_R         reduce using rule 150 (expression -> VARIABLE TIMES NUMBER .)
    ECHO            reduce using rule 150 (expression -> VARIABLE TIMES NUMBER .)
    VARIABLE        reduce using rule 150 (expression -> VARIABLE TIMES NUMBER .)
    WHILE           reduce using rule 150 (expression -> VARIABLE TIMES NUMBER .)
    IF              reduce using rule 150 (expression -> VARIABLE TIMES NUMBER .)
    ELSE            reduce using rule 150 (expression -> VARIABLE TIMES NUMBER .)
    FOR             reduce using rule 150 (expression -> VARIABLE TIMES NUMBER .)
    LBRACKET        reduce using rule 150 (expression -> VARIABLE TIMES NUMBER .)
    LBRACE          reduce using rule 150 (expression -> VARIABLE TIMES NUMBER .)
    FUNCTION        reduce using rule 150 (expression -> VARIABLE TIMES NUMBER .)
    PHP_END         reduce using rule 150 (expression -> VARIABLE TIMES NUMBER .)
    RLLAVE          reduce using rule 150 (expression -> VARIABLE TIMES NUMBER .)
    EQUAL           reduce using rule 150 (expression -> VARIABLE TIMES NUMBER .)
    NOT_IDENTICAL   reduce using rule 150 (expression -> VARIABLE TIMES NUMBER .)
    NOT_EQUAL       reduce using rule 150 (expression -> VARIABLE TIMES NUMBER .)
    IGUAL           reduce using rule 150 (expression -> VARIABLE TIMES NUMBER .)
    IDENTICAL       reduce using rule 150 (expression -> VARIABLE TIMES NUMBER .)
    MAYOR           reduce using rule 150 (expression -> VARIABLE TIMES NUMBER .)
    MENOR           reduce using rule 150 (expression -> VARIABLE TIMES NUMBER .)
    RBRACE          reduce using rule 150 (expression -> VARIABLE TIMES NUMBER .)
    AND_LOGICAL     reduce using rule 150 (expression -> VARIABLE TIMES NUMBER .)
    OR_LOGICAL      reduce using rule 150 (expression -> VARIABLE TIMES NUMBER .)


state 140

    (147) expression -> VARIABLE PLUS VARIABLE .

    PUNTOYCOMA      reduce using rule 147 (expression -> VARIABLE PLUS VARIABLE .)
    COMA            reduce using rule 147 (expression -> VARIABLE PLUS VARIABLE .)
    PUNTO           reduce using rule 147 (expression -> VARIABLE PLUS VARIABLE .)
    ARROW           reduce using rule 147 (expression -> VARIABLE PLUS VARIABLE .)
    RBRACKET        reduce using rule 147 (expression -> VARIABLE PLUS VARIABLE .)
    RPAREN          reduce using rule 147 (expression -> VARIABLE PLUS VARIABLE .)
    PLUS            reduce using rule 147 (expression -> VARIABLE PLUS VARIABLE .)
    MINUS           reduce using rule 147 (expression -> VARIABLE PLUS VARIABLE .)
    TIMES           reduce using rule 147 (expression -> VARIABLE PLUS VARIABLE .)
    DIVIDE          reduce using rule 147 (expression -> VARIABLE PLUS VARIABLE .)
    MOD             reduce using rule 147 (expression -> VARIABLE PLUS VARIABLE .)
    POT             reduce using rule 147 (expression -> VARIABLE PLUS VARIABLE .)
    PRINT           reduce using rule 147 (expression -> VARIABLE PLUS VARIABLE .)
    PRINT_R         reduce using rule 147 (expression -> VARIABLE PLUS VARIABLE .)
    ECHO            reduce using rule 147 (expression -> VARIABLE PLUS VARIABLE .)
    VARIABLE        reduce using rule 147 (expression -> VARIABLE PLUS VARIABLE .)
    WHILE           reduce using rule 147 (expression -> VARIABLE PLUS VARIABLE .)
    IF              reduce using rule 147 (expression -> VARIABLE PLUS VARIABLE .)
    ELSE            reduce using rule 147 (expression -> VARIABLE PLUS VARIABLE .)
    FOR             reduce using rule 147 (expression -> VARIABLE PLUS VARIABLE .)
    LBRACKET        reduce using rule 147 (expression -> VARIABLE PLUS VARIABLE .)
    LBRACE          reduce using rule 147 (expression -> VARIABLE PLUS VARIABLE .)
    FUNCTION        reduce using rule 147 (expression -> VARIABLE PLUS VARIABLE .)
    PHP_END         reduce using rule 147 (expression -> VARIABLE PLUS VARIABLE .)
    RLLAVE          reduce using rule 147 (expression -> VARIABLE PLUS VARIABLE .)
    EQUAL           reduce using rule 147 (expression -> VARIABLE PLUS VARIABLE .)
    NOT_IDENTICAL   reduce using rule 147 (expression -> VARIABLE PLUS VARIABLE .)
    NOT_EQUAL       reduce using rule 147 (expression -> VARIABLE PLUS VARIABLE .)
    IGUAL           reduce using rule 147 (expression -> VARIABLE PLUS VARIABLE .)
    IDENTICAL       reduce using rule 147 (expression -> VARIABLE PLUS VARIABLE .)
    MAYOR           reduce using rule 147 (expression -> VARIABLE PLUS VARIABLE .)
    MENOR           reduce using rule 147 (expression -> VARIABLE PLUS VARIABLE .)
    RBRACE          reduce using rule 147 (expression -> VARIABLE PLUS VARIABLE .)
    AND_LOGICAL     reduce using rule 147 (expression -> VARIABLE PLUS VARIABLE .)
    OR_LOGICAL      reduce using rule 147 (expression -> VARIABLE PLUS VARIABLE .)


state 141

    (151) expression -> VARIABLE PLUS NUMBER .

    PUNTOYCOMA      reduce using rule 151 (expression -> VARIABLE PLUS NUMBER .)
    COMA            reduce using rule 151 (expression -> VARIABLE PLUS NUMBER .)
    PUNTO           reduce using rule 151 (expression -> VARIABLE PLUS NUMBER .)
    ARROW           reduce using rule 151 (expression -> VARIABLE PLUS NUMBER .)
    RBRACKET        reduce using rule 151 (expression -> VARIABLE PLUS NUMBER .)
    RPAREN          reduce using rule 151 (expression -> VARIABLE PLUS NUMBER .)
    PLUS            reduce using rule 151 (expression -> VARIABLE PLUS NUMBER .)
    MINUS           reduce using rule 151 (expression -> VARIABLE PLUS NUMBER .)
    TIMES           reduce using rule 151 (expression -> VARIABLE PLUS NUMBER .)
    DIVIDE          reduce using rule 151 (expression -> VARIABLE PLUS NUMBER .)
    MOD             reduce using rule 151 (expression -> VARIABLE PLUS NUMBER .)
    POT             reduce using rule 151 (expression -> VARIABLE PLUS NUMBER .)
    PRINT           reduce using rule 151 (expression -> VARIABLE PLUS NUMBER .)
    PRINT_R         reduce using rule 151 (expression -> VARIABLE PLUS NUMBER .)
    ECHO            reduce using rule 151 (expression -> VARIABLE PLUS NUMBER .)
    VARIABLE        reduce using rule 151 (expression -> VARIABLE PLUS NUMBER .)
    WHILE           reduce using rule 151 (expression -> VARIABLE PLUS NUMBER .)
    IF              reduce using rule 151 (expression -> VARIABLE PLUS NUMBER .)
    ELSE            reduce using rule 151 (expression -> VARIABLE PLUS NUMBER .)
    FOR             reduce using rule 151 (expression -> VARIABLE PLUS NUMBER .)
    LBRACKET        reduce using rule 151 (expression -> VARIABLE PLUS NUMBER .)
    LBRACE          reduce using rule 151 (expression -> VARIABLE PLUS NUMBER .)
    FUNCTION        reduce using rule 151 (expression -> VARIABLE PLUS NUMBER .)
    PHP_END         reduce using rule 151 (expression -> VARIABLE PLUS NUMBER .)
    RLLAVE          reduce using rule 151 (expression -> VARIABLE PLUS NUMBER .)
    EQUAL           reduce using rule 151 (expression -> VARIABLE PLUS NUMBER .)
    NOT_IDENTICAL   reduce using rule 151 (expression -> VARIABLE PLUS NUMBER .)
    NOT_EQUAL       reduce using rule 151 (expression -> VARIABLE PLUS NUMBER .)
    IGUAL           reduce using rule 151 (expression -> VARIABLE PLUS NUMBER .)
    IDENTICAL       reduce using rule 151 (expression -> VARIABLE PLUS NUMBER .)
    MAYOR           reduce using rule 151 (expression -> VARIABLE PLUS NUMBER .)
    MENOR           reduce using rule 151 (expression -> VARIABLE PLUS NUMBER .)
    RBRACE          reduce using rule 151 (expression -> VARIABLE PLUS NUMBER .)
    AND_LOGICAL     reduce using rule 151 (expression -> VARIABLE PLUS NUMBER .)
    OR_LOGICAL      reduce using rule 151 (expression -> VARIABLE PLUS NUMBER .)


state 142

    (148) expression -> VARIABLE MINUS VARIABLE .

    PUNTOYCOMA      reduce using rule 148 (expression -> VARIABLE MINUS VARIABLE .)
    COMA            reduce using rule 148 (expression -> VARIABLE MINUS VARIABLE .)
    PUNTO           reduce using rule 148 (expression -> VARIABLE MINUS VARIABLE .)
    ARROW           reduce using rule 148 (expression -> VARIABLE MINUS VARIABLE .)
    RBRACKET        reduce using rule 148 (expression -> VARIABLE MINUS VARIABLE .)
    RPAREN          reduce using rule 148 (expression -> VARIABLE MINUS VARIABLE .)
    PLUS            reduce using rule 148 (expression -> VARIABLE MINUS VARIABLE .)
    MINUS           reduce using rule 148 (expression -> VARIABLE MINUS VARIABLE .)
    TIMES           reduce using rule 148 (expression -> VARIABLE MINUS VARIABLE .)
    DIVIDE          reduce using rule 148 (expression -> VARIABLE MINUS VARIABLE .)
    MOD             reduce using rule 148 (expression -> VARIABLE MINUS VARIABLE .)
    POT             reduce using rule 148 (expression -> VARIABLE MINUS VARIABLE .)
    PRINT           reduce using rule 148 (expression -> VARIABLE MINUS VARIABLE .)
    PRINT_R         reduce using rule 148 (expression -> VARIABLE MINUS VARIABLE .)
    ECHO            reduce using rule 148 (expression -> VARIABLE MINUS VARIABLE .)
    VARIABLE        reduce using rule 148 (expression -> VARIABLE MINUS VARIABLE .)
    WHILE           reduce using rule 148 (expression -> VARIABLE MINUS VARIABLE .)
    IF              reduce using rule 148 (expression -> VARIABLE MINUS VARIABLE .)
    ELSE            reduce using rule 148 (expression -> VARIABLE MINUS VARIABLE .)
    FOR             reduce using rule 148 (expression -> VARIABLE MINUS VARIABLE .)
    LBRACKET        reduce using rule 148 (expression -> VARIABLE MINUS VARIABLE .)
    LBRACE          reduce using rule 148 (expression -> VARIABLE MINUS VARIABLE .)
    FUNCTION        reduce using rule 148 (expression -> VARIABLE MINUS VARIABLE .)
    PHP_END         reduce using rule 148 (expression -> VARIABLE MINUS VARIABLE .)
    RLLAVE          reduce using rule 148 (expression -> VARIABLE MINUS VARIABLE .)
    EQUAL           reduce using rule 148 (expression -> VARIABLE MINUS VARIABLE .)
    NOT_IDENTICAL   reduce using rule 148 (expression -> VARIABLE MINUS VARIABLE .)
    NOT_EQUAL       reduce using rule 148 (expression -> VARIABLE MINUS VARIABLE .)
    IGUAL           reduce using rule 148 (expression -> VARIABLE MINUS VARIABLE .)
    IDENTICAL       reduce using rule 148 (expression -> VARIABLE MINUS VARIABLE .)
    MAYOR           reduce using rule 148 (expression -> VARIABLE MINUS VARIABLE .)
    MENOR           reduce using rule 148 (expression -> VARIABLE MINUS VARIABLE .)
    RBRACE          reduce using rule 148 (expression -> VARIABLE MINUS VARIABLE .)
    AND_LOGICAL     reduce using rule 148 (expression -> VARIABLE MINUS VARIABLE .)
    OR_LOGICAL      reduce using rule 148 (expression -> VARIABLE MINUS VARIABLE .)


state 143

    (152) expression -> VARIABLE MINUS NUMBER .

    PUNTOYCOMA      reduce using rule 152 (expression -> VARIABLE MINUS NUMBER .)
    COMA            reduce using rule 152 (expression -> VARIABLE MINUS NUMBER .)
    PUNTO           reduce using rule 152 (expression -> VARIABLE MINUS NUMBER .)
    ARROW           reduce using rule 152 (expression -> VARIABLE MINUS NUMBER .)
    RBRACKET        reduce using rule 152 (expression -> VARIABLE MINUS NUMBER .)
    RPAREN          reduce using rule 152 (expression -> VARIABLE MINUS NUMBER .)
    PLUS            reduce using rule 152 (expression -> VARIABLE MINUS NUMBER .)
    MINUS           reduce using rule 152 (expression -> VARIABLE MINUS NUMBER .)
    TIMES           reduce using rule 152 (expression -> VARIABLE MINUS NUMBER .)
    DIVIDE          reduce using rule 152 (expression -> VARIABLE MINUS NUMBER .)
    MOD             reduce using rule 152 (expression -> VARIABLE MINUS NUMBER .)
    POT             reduce using rule 152 (expression -> VARIABLE MINUS NUMBER .)
    PRINT           reduce using rule 152 (expression -> VARIABLE MINUS NUMBER .)
    PRINT_R         reduce using rule 152 (expression -> VARIABLE MINUS NUMBER .)
    ECHO            reduce using rule 152 (expression -> VARIABLE MINUS NUMBER .)
    VARIABLE        reduce using rule 152 (expression -> VARIABLE MINUS NUMBER .)
    WHILE           reduce using rule 152 (expression -> VARIABLE MINUS NUMBER .)
    IF              reduce using rule 152 (expression -> VARIABLE MINUS NUMBER .)
    ELSE            reduce using rule 152 (expression -> VARIABLE MINUS NUMBER .)
    FOR             reduce using rule 152 (expression -> VARIABLE MINUS NUMBER .)
    LBRACKET        reduce using rule 152 (expression -> VARIABLE MINUS NUMBER .)
    LBRACE          reduce using rule 152 (expression -> VARIABLE MINUS NUMBER .)
    FUNCTION        reduce using rule 152 (expression -> VARIABLE MINUS NUMBER .)
    PHP_END         reduce using rule 152 (expression -> VARIABLE MINUS NUMBER .)
    RLLAVE          reduce using rule 152 (expression -> VARIABLE MINUS NUMBER .)
    EQUAL           reduce using rule 152 (expression -> VARIABLE MINUS NUMBER .)
    NOT_IDENTICAL   reduce using rule 152 (expression -> VARIABLE MINUS NUMBER .)
    NOT_EQUAL       reduce using rule 152 (expression -> VARIABLE MINUS NUMBER .)
    IGUAL           reduce using rule 152 (expression -> VARIABLE MINUS NUMBER .)
    IDENTICAL       reduce using rule 152 (expression -> VARIABLE MINUS NUMBER .)
    MAYOR           reduce using rule 152 (expression -> VARIABLE MINUS NUMBER .)
    MENOR           reduce using rule 152 (expression -> VARIABLE MINUS NUMBER .)
    RBRACE          reduce using rule 152 (expression -> VARIABLE MINUS NUMBER .)
    AND_LOGICAL     reduce using rule 152 (expression -> VARIABLE MINUS NUMBER .)
    OR_LOGICAL      reduce using rule 152 (expression -> VARIABLE MINUS NUMBER .)


state 144

    (149) expression -> VARIABLE DIVIDE VARIABLE .

    PUNTOYCOMA      reduce using rule 149 (expression -> VARIABLE DIVIDE VARIABLE .)
    COMA            reduce using rule 149 (expression -> VARIABLE DIVIDE VARIABLE .)
    PUNTO           reduce using rule 149 (expression -> VARIABLE DIVIDE VARIABLE .)
    ARROW           reduce using rule 149 (expression -> VARIABLE DIVIDE VARIABLE .)
    RBRACKET        reduce using rule 149 (expression -> VARIABLE DIVIDE VARIABLE .)
    RPAREN          reduce using rule 149 (expression -> VARIABLE DIVIDE VARIABLE .)
    PLUS            reduce using rule 149 (expression -> VARIABLE DIVIDE VARIABLE .)
    MINUS           reduce using rule 149 (expression -> VARIABLE DIVIDE VARIABLE .)
    TIMES           reduce using rule 149 (expression -> VARIABLE DIVIDE VARIABLE .)
    DIVIDE          reduce using rule 149 (expression -> VARIABLE DIVIDE VARIABLE .)
    MOD             reduce using rule 149 (expression -> VARIABLE DIVIDE VARIABLE .)
    POT             reduce using rule 149 (expression -> VARIABLE DIVIDE VARIABLE .)
    PRINT           reduce using rule 149 (expression -> VARIABLE DIVIDE VARIABLE .)
    PRINT_R         reduce using rule 149 (expression -> VARIABLE DIVIDE VARIABLE .)
    ECHO            reduce using rule 149 (expression -> VARIABLE DIVIDE VARIABLE .)
    VARIABLE        reduce using rule 149 (expression -> VARIABLE DIVIDE VARIABLE .)
    WHILE           reduce using rule 149 (expression -> VARIABLE DIVIDE VARIABLE .)
    IF              reduce using rule 149 (expression -> VARIABLE DIVIDE VARIABLE .)
    ELSE            reduce using rule 149 (expression -> VARIABLE DIVIDE VARIABLE .)
    FOR             reduce using rule 149 (expression -> VARIABLE DIVIDE VARIABLE .)
    LBRACKET        reduce using rule 149 (expression -> VARIABLE DIVIDE VARIABLE .)
    LBRACE          reduce using rule 149 (expression -> VARIABLE DIVIDE VARIABLE .)
    FUNCTION        reduce using rule 149 (expression -> VARIABLE DIVIDE VARIABLE .)
    PHP_END         reduce using rule 149 (expression -> VARIABLE DIVIDE VARIABLE .)
    RLLAVE          reduce using rule 149 (expression -> VARIABLE DIVIDE VARIABLE .)
    EQUAL           reduce using rule 149 (expression -> VARIABLE DIVIDE VARIABLE .)
    NOT_IDENTICAL   reduce using rule 149 (expression -> VARIABLE DIVIDE VARIABLE .)
    NOT_EQUAL       reduce using rule 149 (expression -> VARIABLE DIVIDE VARIABLE .)
    IGUAL           reduce using rule 149 (expression -> VARIABLE DIVIDE VARIABLE .)
    IDENTICAL       reduce using rule 149 (expression -> VARIABLE DIVIDE VARIABLE .)
    MAYOR           reduce using rule 149 (expression -> VARIABLE DIVIDE VARIABLE .)
    MENOR           reduce using rule 149 (expression -> VARIABLE DIVIDE VARIABLE .)
    RBRACE          reduce using rule 149 (expression -> VARIABLE DIVIDE VARIABLE .)
    AND_LOGICAL     reduce using rule 149 (expression -> VARIABLE DIVIDE VARIABLE .)
    OR_LOGICAL      reduce using rule 149 (expression -> VARIABLE DIVIDE VARIABLE .)


state 145

    (153) expression -> VARIABLE DIVIDE NUMBER .

    PUNTOYCOMA      reduce using rule 153 (expression -> VARIABLE DIVIDE NUMBER .)
    COMA            reduce using rule 153 (expression -> VARIABLE DIVIDE NUMBER .)
    PUNTO           reduce using rule 153 (expression -> VARIABLE DIVIDE NUMBER .)
    ARROW           reduce using rule 153 (expression -> VARIABLE DIVIDE NUMBER .)
    RBRACKET        reduce using rule 153 (expression -> VARIABLE DIVIDE NUMBER .)
    RPAREN          reduce using rule 153 (expression -> VARIABLE DIVIDE NUMBER .)
    PLUS            reduce using rule 153 (expression -> VARIABLE DIVIDE NUMBER .)
    MINUS           reduce using rule 153 (expression -> VARIABLE DIVIDE NUMBER .)
    TIMES           reduce using rule 153 (expression -> VARIABLE DIVIDE NUMBER .)
    DIVIDE          reduce using rule 153 (expression -> VARIABLE DIVIDE NUMBER .)
    MOD             reduce using rule 153 (expression -> VARIABLE DIVIDE NUMBER .)
    POT             reduce using rule 153 (expression -> VARIABLE DIVIDE NUMBER .)
    PRINT           reduce using rule 153 (expression -> VARIABLE DIVIDE NUMBER .)
    PRINT_R         reduce using rule 153 (expression -> VARIABLE DIVIDE NUMBER .)
    ECHO            reduce using rule 153 (expression -> VARIABLE DIVIDE NUMBER .)
    VARIABLE        reduce using rule 153 (expression -> VARIABLE DIVIDE NUMBER .)
    WHILE           reduce using rule 153 (expression -> VARIABLE DIVIDE NUMBER .)
    IF              reduce using rule 153 (expression -> VARIABLE DIVIDE NUMBER .)
    ELSE            reduce using rule 153 (expression -> VARIABLE DIVIDE NUMBER .)
    FOR             reduce using rule 153 (expression -> VARIABLE DIVIDE NUMBER .)
    LBRACKET        reduce using rule 153 (expression -> VARIABLE DIVIDE NUMBER .)
    LBRACE          reduce using rule 153 (expression -> VARIABLE DIVIDE NUMBER .)
    FUNCTION        reduce using rule 153 (expression -> VARIABLE DIVIDE NUMBER .)
    PHP_END         reduce using rule 153 (expression -> VARIABLE DIVIDE NUMBER .)
    RLLAVE          reduce using rule 153 (expression -> VARIABLE DIVIDE NUMBER .)
    EQUAL           reduce using rule 153 (expression -> VARIABLE DIVIDE NUMBER .)
    NOT_IDENTICAL   reduce using rule 153 (expression -> VARIABLE DIVIDE NUMBER .)
    NOT_EQUAL       reduce using rule 153 (expression -> VARIABLE DIVIDE NUMBER .)
    IGUAL           reduce using rule 153 (expression -> VARIABLE DIVIDE NUMBER .)
    IDENTICAL       reduce using rule 153 (expression -> VARIABLE DIVIDE NUMBER .)
    MAYOR           reduce using rule 153 (expression -> VARIABLE DIVIDE NUMBER .)
    MENOR           reduce using rule 153 (expression -> VARIABLE DIVIDE NUMBER .)
    RBRACE          reduce using rule 153 (expression -> VARIABLE DIVIDE NUMBER .)
    AND_LOGICAL     reduce using rule 153 (expression -> VARIABLE DIVIDE NUMBER .)
    OR_LOGICAL      reduce using rule 153 (expression -> VARIABLE DIVIDE NUMBER .)


state 146

    (154) expression -> VARIABLE MOD VARIABLE .

    PUNTOYCOMA      reduce using rule 154 (expression -> VARIABLE MOD VARIABLE .)
    COMA            reduce using rule 154 (expression -> VARIABLE MOD VARIABLE .)
    PUNTO           reduce using rule 154 (expression -> VARIABLE MOD VARIABLE .)
    ARROW           reduce using rule 154 (expression -> VARIABLE MOD VARIABLE .)
    RBRACKET        reduce using rule 154 (expression -> VARIABLE MOD VARIABLE .)
    RPAREN          reduce using rule 154 (expression -> VARIABLE MOD VARIABLE .)
    PLUS            reduce using rule 154 (expression -> VARIABLE MOD VARIABLE .)
    MINUS           reduce using rule 154 (expression -> VARIABLE MOD VARIABLE .)
    TIMES           reduce using rule 154 (expression -> VARIABLE MOD VARIABLE .)
    DIVIDE          reduce using rule 154 (expression -> VARIABLE MOD VARIABLE .)
    MOD             reduce using rule 154 (expression -> VARIABLE MOD VARIABLE .)
    POT             reduce using rule 154 (expression -> VARIABLE MOD VARIABLE .)
    PRINT           reduce using rule 154 (expression -> VARIABLE MOD VARIABLE .)
    PRINT_R         reduce using rule 154 (expression -> VARIABLE MOD VARIABLE .)
    ECHO            reduce using rule 154 (expression -> VARIABLE MOD VARIABLE .)
    VARIABLE        reduce using rule 154 (expression -> VARIABLE MOD VARIABLE .)
    WHILE           reduce using rule 154 (expression -> VARIABLE MOD VARIABLE .)
    IF              reduce using rule 154 (expression -> VARIABLE MOD VARIABLE .)
    ELSE            reduce using rule 154 (expression -> VARIABLE MOD VARIABLE .)
    FOR             reduce using rule 154 (expression -> VARIABLE MOD VARIABLE .)
    LBRACKET        reduce using rule 154 (expression -> VARIABLE MOD VARIABLE .)
    LBRACE          reduce using rule 154 (expression -> VARIABLE MOD VARIABLE .)
    FUNCTION        reduce using rule 154 (expression -> VARIABLE MOD VARIABLE .)
    PHP_END         reduce using rule 154 (expression -> VARIABLE MOD VARIABLE .)
    RLLAVE          reduce using rule 154 (expression -> VARIABLE MOD VARIABLE .)
    EQUAL           reduce using rule 154 (expression -> VARIABLE MOD VARIABLE .)
    NOT_IDENTICAL   reduce using rule 154 (expression -> VARIABLE MOD VARIABLE .)
    NOT_EQUAL       reduce using rule 154 (expression -> VARIABLE MOD VARIABLE .)
    IGUAL           reduce using rule 154 (expression -> VARIABLE MOD VARIABLE .)
    IDENTICAL       reduce using rule 154 (expression -> VARIABLE MOD VARIABLE .)
    MAYOR           reduce using rule 154 (expression -> VARIABLE MOD VARIABLE .)
    MENOR           reduce using rule 154 (expression -> VARIABLE MOD VARIABLE .)
    RBRACE          reduce using rule 154 (expression -> VARIABLE MOD VARIABLE .)
    AND_LOGICAL     reduce using rule 154 (expression -> VARIABLE MOD VARIABLE .)
    OR_LOGICAL      reduce using rule 154 (expression -> VARIABLE MOD VARIABLE .)


state 147

    (34) solicitud_datos -> VARIABLE IGUAL READLINE LPAREN . STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> VARIABLE IGUAL READLINE LPAREN . RPAREN PUNTOYCOMA

    STRING          shift and go to state 208
    RPAREN          shift and go to state 209


state 148

    (36) input -> VARIABLE IGUAL FGETS LPAREN . VARIABLE RPAREN PUNTOYCOMA

    VARIABLE        shift and go to state 210


state 149

    (63) asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .

    PRINT           reduce using rule 63 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    PRINT_R         reduce using rule 63 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    ECHO            reduce using rule 63 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    VARIABLE        reduce using rule 63 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    WHILE           reduce using rule 63 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    IF              reduce using rule 63 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    ELSE            reduce using rule 63 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    FOR             reduce using rule 63 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    LBRACKET        reduce using rule 63 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    LBRACE          reduce using rule 63 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    FUNCTION        reduce using rule 63 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    PHP_END         reduce using rule 63 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    RLLAVE          reduce using rule 63 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)


state 150

    (66) expresiones -> VARIABLE IGUAL valor operadorAritmetico . valor PUNTOYCOMA
    (67) expresiones -> VARIABLE IGUAL valor operadorAritmetico . operacion
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (68) operacion -> . valor operadorAritmetico valor PUNTOYCOMA
    (69) operacion -> . operacion operadorAritmetico operacion
    (144) expression -> . VARIABLE
    (145) expression -> . NUMBER
    (146) expression -> . VARIABLE TIMES VARIABLE
    (147) expression -> . VARIABLE PLUS VARIABLE
    (148) expression -> . VARIABLE MINUS VARIABLE
    (149) expression -> . VARIABLE DIVIDE VARIABLE
    (150) expression -> . VARIABLE TIMES NUMBER
    (151) expression -> . VARIABLE PLUS NUMBER
    (152) expression -> . VARIABLE MINUS NUMBER
    (153) expression -> . VARIABLE DIVIDE NUMBER
    (154) expression -> . VARIABLE MOD VARIABLE

    NUMBER          shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 49
    BOOLEAN         shift and go to state 50
    VARIABLE        shift and go to state 73
    ID              shift and go to state 51

    valor                          shift and go to state 211
    operacion                      shift and go to state 212
    expression                     shift and go to state 52

state 151

    (70) operadorAritmetico -> PLUS .

    NUMBER          reduce using rule 70 (operadorAritmetico -> PLUS .)
    FLOAT           reduce using rule 70 (operadorAritmetico -> PLUS .)
    STRING          reduce using rule 70 (operadorAritmetico -> PLUS .)
    BOOLEAN         reduce using rule 70 (operadorAritmetico -> PLUS .)
    VARIABLE        reduce using rule 70 (operadorAritmetico -> PLUS .)
    ID              reduce using rule 70 (operadorAritmetico -> PLUS .)


state 152

    (71) operadorAritmetico -> MINUS .

    NUMBER          reduce using rule 71 (operadorAritmetico -> MINUS .)
    FLOAT           reduce using rule 71 (operadorAritmetico -> MINUS .)
    STRING          reduce using rule 71 (operadorAritmetico -> MINUS .)
    BOOLEAN         reduce using rule 71 (operadorAritmetico -> MINUS .)
    VARIABLE        reduce using rule 71 (operadorAritmetico -> MINUS .)
    ID              reduce using rule 71 (operadorAritmetico -> MINUS .)


state 153

    (72) operadorAritmetico -> TIMES .

    NUMBER          reduce using rule 72 (operadorAritmetico -> TIMES .)
    FLOAT           reduce using rule 72 (operadorAritmetico -> TIMES .)
    STRING          reduce using rule 72 (operadorAritmetico -> TIMES .)
    BOOLEAN         reduce using rule 72 (operadorAritmetico -> TIMES .)
    VARIABLE        reduce using rule 72 (operadorAritmetico -> TIMES .)
    ID              reduce using rule 72 (operadorAritmetico -> TIMES .)


state 154

    (73) operadorAritmetico -> DIVIDE .

    NUMBER          reduce using rule 73 (operadorAritmetico -> DIVIDE .)
    FLOAT           reduce using rule 73 (operadorAritmetico -> DIVIDE .)
    STRING          reduce using rule 73 (operadorAritmetico -> DIVIDE .)
    BOOLEAN         reduce using rule 73 (operadorAritmetico -> DIVIDE .)
    VARIABLE        reduce using rule 73 (operadorAritmetico -> DIVIDE .)
    ID              reduce using rule 73 (operadorAritmetico -> DIVIDE .)


state 155

    (74) operadorAritmetico -> MOD .

    NUMBER          reduce using rule 74 (operadorAritmetico -> MOD .)
    FLOAT           reduce using rule 74 (operadorAritmetico -> MOD .)
    STRING          reduce using rule 74 (operadorAritmetico -> MOD .)
    BOOLEAN         reduce using rule 74 (operadorAritmetico -> MOD .)
    VARIABLE        reduce using rule 74 (operadorAritmetico -> MOD .)
    ID              reduce using rule 74 (operadorAritmetico -> MOD .)


state 156

    (75) operadorAritmetico -> POT .

    NUMBER          reduce using rule 75 (operadorAritmetico -> POT .)
    FLOAT           reduce using rule 75 (operadorAritmetico -> POT .)
    STRING          reduce using rule 75 (operadorAritmetico -> POT .)
    BOOLEAN         reduce using rule 75 (operadorAritmetico -> POT .)
    VARIABLE        reduce using rule 75 (operadorAritmetico -> POT .)
    ID              reduce using rule 75 (operadorAritmetico -> POT .)


state 157

    (64) asignacion -> VARIABLE IGUAL ARRAY PUNTOYCOMA .

    PRINT           reduce using rule 64 (asignacion -> VARIABLE IGUAL ARRAY PUNTOYCOMA .)
    PRINT_R         reduce using rule 64 (asignacion -> VARIABLE IGUAL ARRAY PUNTOYCOMA .)
    ECHO            reduce using rule 64 (asignacion -> VARIABLE IGUAL ARRAY PUNTOYCOMA .)
    VARIABLE        reduce using rule 64 (asignacion -> VARIABLE IGUAL ARRAY PUNTOYCOMA .)
    WHILE           reduce using rule 64 (asignacion -> VARIABLE IGUAL ARRAY PUNTOYCOMA .)
    IF              reduce using rule 64 (asignacion -> VARIABLE IGUAL ARRAY PUNTOYCOMA .)
    ELSE            reduce using rule 64 (asignacion -> VARIABLE IGUAL ARRAY PUNTOYCOMA .)
    FOR             reduce using rule 64 (asignacion -> VARIABLE IGUAL ARRAY PUNTOYCOMA .)
    LBRACKET        reduce using rule 64 (asignacion -> VARIABLE IGUAL ARRAY PUNTOYCOMA .)
    LBRACE          reduce using rule 64 (asignacion -> VARIABLE IGUAL ARRAY PUNTOYCOMA .)
    FUNCTION        reduce using rule 64 (asignacion -> VARIABLE IGUAL ARRAY PUNTOYCOMA .)
    PHP_END         reduce using rule 64 (asignacion -> VARIABLE IGUAL ARRAY PUNTOYCOMA .)
    RLLAVE          reduce using rule 64 (asignacion -> VARIABLE IGUAL ARRAY PUNTOYCOMA .)


state 158

    (65) asignacion -> VARIABLE IGUAL ARRAY LPAREN . elementos RPAREN PUNTOYCOMA
    (99) array -> VARIABLE IGUAL ARRAY LPAREN . RPAREN PUNTOYCOMA
    (100) array -> VARIABLE IGUAL ARRAY LPAREN . elementos RPAREN PUNTOYCOMA
    (101) array -> VARIABLE IGUAL ARRAY LPAREN . valor RPAREN PUNTOYCOMA
    (104) elementos -> . elemento
    (105) elementos -> . elementos COMA elemento
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (106) elemento -> . valor
    (107) elemento -> . lista
    (108) elemento -> . clave_valor
    (144) expression -> . VARIABLE
    (145) expression -> . NUMBER
    (146) expression -> . VARIABLE TIMES VARIABLE
    (147) expression -> . VARIABLE PLUS VARIABLE
    (148) expression -> . VARIABLE MINUS VARIABLE
    (149) expression -> . VARIABLE DIVIDE VARIABLE
    (150) expression -> . VARIABLE TIMES NUMBER
    (151) expression -> . VARIABLE PLUS NUMBER
    (152) expression -> . VARIABLE MINUS NUMBER
    (153) expression -> . VARIABLE DIVIDE NUMBER
    (154) expression -> . VARIABLE MOD VARIABLE
    (110) lista -> . LBRACKET RBRACKET
    (111) lista -> . LBRACKET elementos RBRACKET
    (109) clave_valor -> . valor ARROW valor

    RPAREN          shift and go to state 214
    NUMBER          shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 49
    BOOLEAN         shift and go to state 50
    VARIABLE        shift and go to state 73
    ID              shift and go to state 51
    LBRACKET        shift and go to state 21

    elementos                      shift and go to state 213
    valor                          shift and go to state 215
    elemento                       shift and go to state 69
    expression                     shift and go to state 52
    lista                          shift and go to state 71
    clave_valor                    shift and go to state 72

state 159

    (102) array -> VARIABLE IGUAL LBRACKET RBRACKET . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 216


state 160

    (103) array -> VARIABLE IGUAL LBRACKET elementos . RBRACKET PUNTOYCOMA
    (105) elementos -> elementos . COMA elemento

    RBRACKET        shift and go to state 217
    COMA            shift and go to state 111


state 161

    (122) funcioninbuilt -> VARIABLE IGUAL funcionesdefin LPAREN . operaciones RPAREN PUNTOYCOMA
    (131) operaciones -> . operacion
    (132) operaciones -> . operacion PUNTOYCOMA
    (133) operaciones -> . operacion operadorAritmetico operaciones
    (134) operaciones -> . VARIABLE IGUAL operaciones
    (135) operaciones -> . VARIABLE
    (68) operacion -> . valor operadorAritmetico valor PUNTOYCOMA
    (69) operacion -> . operacion operadorAritmetico operacion
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (144) expression -> . VARIABLE
    (145) expression -> . NUMBER
    (146) expression -> . VARIABLE TIMES VARIABLE
    (147) expression -> . VARIABLE PLUS VARIABLE
    (148) expression -> . VARIABLE MINUS VARIABLE
    (149) expression -> . VARIABLE DIVIDE VARIABLE
    (150) expression -> . VARIABLE TIMES NUMBER
    (151) expression -> . VARIABLE PLUS NUMBER
    (152) expression -> . VARIABLE MINUS NUMBER
    (153) expression -> . VARIABLE DIVIDE NUMBER
    (154) expression -> . VARIABLE MOD VARIABLE

    VARIABLE        shift and go to state 218
    NUMBER          shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 49
    BOOLEAN         shift and go to state 50
    ID              shift and go to state 51

    operaciones                    shift and go to state 219
    operacion                      shift and go to state 220
    valor                          shift and go to state 221
    expression                     shift and go to state 52

state 162

    (136) funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN . parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (137) parametros -> . STRING
    (138) parametros -> . parametros COMA STRING
    (139) parametros -> . VARIABLE
    (140) parametros -> . parametros COMA VARIABLE

    STRING          shift and go to state 199
    VARIABLE        shift and go to state 200

    parametros                     shift and go to state 222

state 163

    (141) arrow_function -> VARIABLE IGUAL FN LPAREN . parameter_list RPAREN ARROW expression PUNTOYCOMA
    (142) parameter_list -> . VARIABLE
    (143) parameter_list -> . VARIABLE COMA parameter_list

    VARIABLE        shift and go to state 223

    parameter_list                 shift and go to state 224

state 164

    (37) indexacion -> VARIABLE LBRACKET valor RBRACKET .

    PRINT           reduce using rule 37 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    PRINT_R         reduce using rule 37 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    ECHO            reduce using rule 37 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    VARIABLE        reduce using rule 37 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    WHILE           reduce using rule 37 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    IF              reduce using rule 37 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    ELSE            reduce using rule 37 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    FOR             reduce using rule 37 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    LBRACKET        reduce using rule 37 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    LBRACE          reduce using rule 37 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    FUNCTION        reduce using rule 37 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    PHP_END         reduce using rule 37 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    RLLAVE          reduce using rule 37 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)


state 165

    (123) funcioninbuilt -> VARIABLE funcionesdefin LPAREN RPAREN . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 225


state 166

    (105) elementos -> elementos COMA elemento .

    RBRACKET        reduce using rule 105 (elementos -> elementos COMA elemento .)
    COMA            reduce using rule 105 (elementos -> elementos COMA elemento .)
    RPAREN          reduce using rule 105 (elementos -> elementos COMA elemento .)


state 167

    (109) clave_valor -> valor ARROW valor .

    RBRACKET        reduce using rule 109 (clave_valor -> valor ARROW valor .)
    COMA            reduce using rule 109 (clave_valor -> valor ARROW valor .)
    RPAREN          reduce using rule 109 (clave_valor -> valor ARROW valor .)


state 168

    (77) while -> WHILE LPAREN condicion RPAREN . LLLAVE instrucciones RLLAVE

    LLLAVE          shift and go to state 226


state 169

    (79) condicion -> condicion compuesta_logica . condicion
    (78) condicion -> . condicion_simple
    (79) condicion -> . condicion compuesta_logica condicion
    (80) condicion_simple -> . valor comparador valor
    (81) condicion_simple -> . VARIABLE comparador valor
    (82) condicion_simple -> . VARIABLE comparador VARIABLE
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (144) expression -> . VARIABLE
    (145) expression -> . NUMBER
    (146) expression -> . VARIABLE TIMES VARIABLE
    (147) expression -> . VARIABLE PLUS VARIABLE
    (148) expression -> . VARIABLE MINUS VARIABLE
    (149) expression -> . VARIABLE DIVIDE VARIABLE
    (150) expression -> . VARIABLE TIMES NUMBER
    (151) expression -> . VARIABLE PLUS NUMBER
    (152) expression -> . VARIABLE MINUS NUMBER
    (153) expression -> . VARIABLE DIVIDE NUMBER
    (154) expression -> . VARIABLE MOD VARIABLE

    VARIABLE        shift and go to state 116
    NUMBER          shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 49
    BOOLEAN         shift and go to state 50
    ID              shift and go to state 51

    condicion                      shift and go to state 227
    condicion_simple               shift and go to state 114
    valor                          shift and go to state 115
    expression                     shift and go to state 52

state 170

    (83) compuesta_logica -> AND_LOGICAL .

    VARIABLE        reduce using rule 83 (compuesta_logica -> AND_LOGICAL .)
    NUMBER          reduce using rule 83 (compuesta_logica -> AND_LOGICAL .)
    FLOAT           reduce using rule 83 (compuesta_logica -> AND_LOGICAL .)
    STRING          reduce using rule 83 (compuesta_logica -> AND_LOGICAL .)
    BOOLEAN         reduce using rule 83 (compuesta_logica -> AND_LOGICAL .)
    ID              reduce using rule 83 (compuesta_logica -> AND_LOGICAL .)


state 171

    (84) compuesta_logica -> OR_LOGICAL .

    VARIABLE        reduce using rule 84 (compuesta_logica -> OR_LOGICAL .)
    NUMBER          reduce using rule 84 (compuesta_logica -> OR_LOGICAL .)
    FLOAT           reduce using rule 84 (compuesta_logica -> OR_LOGICAL .)
    STRING          reduce using rule 84 (compuesta_logica -> OR_LOGICAL .)
    BOOLEAN         reduce using rule 84 (compuesta_logica -> OR_LOGICAL .)
    ID              reduce using rule 84 (compuesta_logica -> OR_LOGICAL .)


state 172

    (80) condicion_simple -> valor comparador . valor
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (144) expression -> . VARIABLE
    (145) expression -> . NUMBER
    (146) expression -> . VARIABLE TIMES VARIABLE
    (147) expression -> . VARIABLE PLUS VARIABLE
    (148) expression -> . VARIABLE MINUS VARIABLE
    (149) expression -> . VARIABLE DIVIDE VARIABLE
    (150) expression -> . VARIABLE TIMES NUMBER
    (151) expression -> . VARIABLE PLUS NUMBER
    (152) expression -> . VARIABLE MINUS NUMBER
    (153) expression -> . VARIABLE DIVIDE NUMBER
    (154) expression -> . VARIABLE MOD VARIABLE

    NUMBER          shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 49
    BOOLEAN         shift and go to state 50
    VARIABLE        shift and go to state 73
    ID              shift and go to state 51

    valor                          shift and go to state 228
    expression                     shift and go to state 52

state 173

    (54) comparador -> EQUAL .

    NUMBER          reduce using rule 54 (comparador -> EQUAL .)
    FLOAT           reduce using rule 54 (comparador -> EQUAL .)
    STRING          reduce using rule 54 (comparador -> EQUAL .)
    BOOLEAN         reduce using rule 54 (comparador -> EQUAL .)
    VARIABLE        reduce using rule 54 (comparador -> EQUAL .)
    ID              reduce using rule 54 (comparador -> EQUAL .)


state 174

    (55) comparador -> NOT_IDENTICAL .

    NUMBER          reduce using rule 55 (comparador -> NOT_IDENTICAL .)
    FLOAT           reduce using rule 55 (comparador -> NOT_IDENTICAL .)
    STRING          reduce using rule 55 (comparador -> NOT_IDENTICAL .)
    BOOLEAN         reduce using rule 55 (comparador -> NOT_IDENTICAL .)
    VARIABLE        reduce using rule 55 (comparador -> NOT_IDENTICAL .)
    ID              reduce using rule 55 (comparador -> NOT_IDENTICAL .)


state 175

    (56) comparador -> NOT_EQUAL .

    NUMBER          reduce using rule 56 (comparador -> NOT_EQUAL .)
    FLOAT           reduce using rule 56 (comparador -> NOT_EQUAL .)
    STRING          reduce using rule 56 (comparador -> NOT_EQUAL .)
    BOOLEAN         reduce using rule 56 (comparador -> NOT_EQUAL .)
    VARIABLE        reduce using rule 56 (comparador -> NOT_EQUAL .)
    ID              reduce using rule 56 (comparador -> NOT_EQUAL .)


state 176

    (57) comparador -> IGUAL .

    NUMBER          reduce using rule 57 (comparador -> IGUAL .)
    FLOAT           reduce using rule 57 (comparador -> IGUAL .)
    STRING          reduce using rule 57 (comparador -> IGUAL .)
    BOOLEAN         reduce using rule 57 (comparador -> IGUAL .)
    VARIABLE        reduce using rule 57 (comparador -> IGUAL .)
    ID              reduce using rule 57 (comparador -> IGUAL .)


state 177

    (58) comparador -> IDENTICAL .

    NUMBER          reduce using rule 58 (comparador -> IDENTICAL .)
    FLOAT           reduce using rule 58 (comparador -> IDENTICAL .)
    STRING          reduce using rule 58 (comparador -> IDENTICAL .)
    BOOLEAN         reduce using rule 58 (comparador -> IDENTICAL .)
    VARIABLE        reduce using rule 58 (comparador -> IDENTICAL .)
    ID              reduce using rule 58 (comparador -> IDENTICAL .)


state 178

    (59) comparador -> MAYOR .

    NUMBER          reduce using rule 59 (comparador -> MAYOR .)
    FLOAT           reduce using rule 59 (comparador -> MAYOR .)
    STRING          reduce using rule 59 (comparador -> MAYOR .)
    BOOLEAN         reduce using rule 59 (comparador -> MAYOR .)
    VARIABLE        reduce using rule 59 (comparador -> MAYOR .)
    ID              reduce using rule 59 (comparador -> MAYOR .)


state 179

    (60) comparador -> MENOR .

    NUMBER          reduce using rule 60 (comparador -> MENOR .)
    FLOAT           reduce using rule 60 (comparador -> MENOR .)
    STRING          reduce using rule 60 (comparador -> MENOR .)
    BOOLEAN         reduce using rule 60 (comparador -> MENOR .)
    VARIABLE        reduce using rule 60 (comparador -> MENOR .)
    ID              reduce using rule 60 (comparador -> MENOR .)


state 180

    (81) condicion_simple -> VARIABLE comparador . valor
    (82) condicion_simple -> VARIABLE comparador . VARIABLE
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (144) expression -> . VARIABLE
    (145) expression -> . NUMBER
    (146) expression -> . VARIABLE TIMES VARIABLE
    (147) expression -> . VARIABLE PLUS VARIABLE
    (148) expression -> . VARIABLE MINUS VARIABLE
    (149) expression -> . VARIABLE DIVIDE VARIABLE
    (150) expression -> . VARIABLE TIMES NUMBER
    (151) expression -> . VARIABLE PLUS NUMBER
    (152) expression -> . VARIABLE MINUS NUMBER
    (153) expression -> . VARIABLE DIVIDE NUMBER
    (154) expression -> . VARIABLE MOD VARIABLE

    VARIABLE        shift and go to state 229
    NUMBER          shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 49
    BOOLEAN         shift and go to state 50
    ID              shift and go to state 51

    valor                          shift and go to state 230
    expression                     shift and go to state 52

state 181

    (43) if -> IF LPAREN comparaciones RPAREN . LLLAVE instrucciones RLLAVE

    LLLAVE          shift and go to state 231


state 182

    (44) if -> IF LPAREN VARIABLE RPAREN . LLLAVE instrucciones RLLAVE

    LLLAVE          shift and go to state 232


state 183

    (47) comparacion -> VARIABLE comparadorNum . VARIABLE
    (49) comparacion -> VARIABLE comparadorNum . valor
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (144) expression -> . VARIABLE
    (145) expression -> . NUMBER
    (146) expression -> . VARIABLE TIMES VARIABLE
    (147) expression -> . VARIABLE PLUS VARIABLE
    (148) expression -> . VARIABLE MINUS VARIABLE
    (149) expression -> . VARIABLE DIVIDE VARIABLE
    (150) expression -> . VARIABLE TIMES NUMBER
    (151) expression -> . VARIABLE PLUS NUMBER
    (152) expression -> . VARIABLE MINUS NUMBER
    (153) expression -> . VARIABLE DIVIDE NUMBER
    (154) expression -> . VARIABLE MOD VARIABLE

    VARIABLE        shift and go to state 233
    NUMBER          shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 49
    BOOLEAN         shift and go to state 50
    ID              shift and go to state 51

    valor                          shift and go to state 234
    expression                     shift and go to state 52

state 184

    (50) comparadorNum -> MAYOR .

    VARIABLE        reduce using rule 50 (comparadorNum -> MAYOR .)
    NUMBER          reduce using rule 50 (comparadorNum -> MAYOR .)
    FLOAT           reduce using rule 50 (comparadorNum -> MAYOR .)
    STRING          reduce using rule 50 (comparadorNum -> MAYOR .)
    BOOLEAN         reduce using rule 50 (comparadorNum -> MAYOR .)
    ID              reduce using rule 50 (comparadorNum -> MAYOR .)


state 185

    (51) comparadorNum -> MAYORIGUAL .

    VARIABLE        reduce using rule 51 (comparadorNum -> MAYORIGUAL .)
    NUMBER          reduce using rule 51 (comparadorNum -> MAYORIGUAL .)
    FLOAT           reduce using rule 51 (comparadorNum -> MAYORIGUAL .)
    STRING          reduce using rule 51 (comparadorNum -> MAYORIGUAL .)
    BOOLEAN         reduce using rule 51 (comparadorNum -> MAYORIGUAL .)
    ID              reduce using rule 51 (comparadorNum -> MAYORIGUAL .)


state 186

    (52) comparadorNum -> MENOR .

    VARIABLE        reduce using rule 52 (comparadorNum -> MENOR .)
    NUMBER          reduce using rule 52 (comparadorNum -> MENOR .)
    FLOAT           reduce using rule 52 (comparadorNum -> MENOR .)
    STRING          reduce using rule 52 (comparadorNum -> MENOR .)
    BOOLEAN         reduce using rule 52 (comparadorNum -> MENOR .)
    ID              reduce using rule 52 (comparadorNum -> MENOR .)


state 187

    (53) comparadorNum -> MENORIGUAL .

    VARIABLE        reduce using rule 53 (comparadorNum -> MENORIGUAL .)
    NUMBER          reduce using rule 53 (comparadorNum -> MENORIGUAL .)
    FLOAT           reduce using rule 53 (comparadorNum -> MENORIGUAL .)
    STRING          reduce using rule 53 (comparadorNum -> MENORIGUAL .)
    BOOLEAN         reduce using rule 53 (comparadorNum -> MENORIGUAL .)
    ID              reduce using rule 53 (comparadorNum -> MENORIGUAL .)


state 188

    (46) comparaciones -> comparacion operadores . comparaciones
    (45) comparaciones -> . comparacion
    (46) comparaciones -> . comparacion operadores comparaciones
    (47) comparacion -> . VARIABLE comparadorNum VARIABLE
    (48) comparacion -> . valor comparador valor
    (49) comparacion -> . VARIABLE comparadorNum valor
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (144) expression -> . VARIABLE
    (145) expression -> . NUMBER
    (146) expression -> . VARIABLE TIMES VARIABLE
    (147) expression -> . VARIABLE PLUS VARIABLE
    (148) expression -> . VARIABLE MINUS VARIABLE
    (149) expression -> . VARIABLE DIVIDE VARIABLE
    (150) expression -> . VARIABLE TIMES NUMBER
    (151) expression -> . VARIABLE PLUS NUMBER
    (152) expression -> . VARIABLE MINUS NUMBER
    (153) expression -> . VARIABLE DIVIDE NUMBER
    (154) expression -> . VARIABLE MOD VARIABLE

    VARIABLE        shift and go to state 236
    NUMBER          shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 49
    BOOLEAN         shift and go to state 50
    ID              shift and go to state 51

    comparacion                    shift and go to state 119
    comparaciones                  shift and go to state 235
    valor                          shift and go to state 120
    expression                     shift and go to state 52

state 189

    (61) operadores -> AND_LOGICAL .

    VARIABLE        reduce using rule 61 (operadores -> AND_LOGICAL .)
    NUMBER          reduce using rule 61 (operadores -> AND_LOGICAL .)
    FLOAT           reduce using rule 61 (operadores -> AND_LOGICAL .)
    STRING          reduce using rule 61 (operadores -> AND_LOGICAL .)
    BOOLEAN         reduce using rule 61 (operadores -> AND_LOGICAL .)
    ID              reduce using rule 61 (operadores -> AND_LOGICAL .)


state 190

    (62) operadores -> OR_LOGICAL .

    VARIABLE        reduce using rule 62 (operadores -> OR_LOGICAL .)
    NUMBER          reduce using rule 62 (operadores -> OR_LOGICAL .)
    FLOAT           reduce using rule 62 (operadores -> OR_LOGICAL .)
    STRING          reduce using rule 62 (operadores -> OR_LOGICAL .)
    BOOLEAN         reduce using rule 62 (operadores -> OR_LOGICAL .)
    ID              reduce using rule 62 (operadores -> OR_LOGICAL .)


state 191

    (48) comparacion -> valor comparador . valor
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (144) expression -> . VARIABLE
    (145) expression -> . NUMBER
    (146) expression -> . VARIABLE TIMES VARIABLE
    (147) expression -> . VARIABLE PLUS VARIABLE
    (148) expression -> . VARIABLE MINUS VARIABLE
    (149) expression -> . VARIABLE DIVIDE VARIABLE
    (150) expression -> . VARIABLE TIMES NUMBER
    (151) expression -> . VARIABLE PLUS NUMBER
    (152) expression -> . VARIABLE MINUS NUMBER
    (153) expression -> . VARIABLE DIVIDE NUMBER
    (154) expression -> . VARIABLE MOD VARIABLE

    NUMBER          shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 49
    BOOLEAN         shift and go to state 50
    VARIABLE        shift and go to state 73
    ID              shift and go to state 51

    valor                          shift and go to state 237
    expression                     shift and go to state 52

state 192

    (76) else -> ELSE LLLAVE instrucciones RLLAVE .

    PRINT           reduce using rule 76 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    PRINT_R         reduce using rule 76 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    ECHO            reduce using rule 76 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    VARIABLE        reduce using rule 76 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    WHILE           reduce using rule 76 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    IF              reduce using rule 76 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    ELSE            reduce using rule 76 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    FOR             reduce using rule 76 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    LBRACKET        reduce using rule 76 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    LBRACE          reduce using rule 76 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    FUNCTION        reduce using rule 76 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    PHP_END         reduce using rule 76 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    RLLAVE          reduce using rule 76 (else -> ELSE LLLAVE instrucciones RLLAVE .)


state 193

    (85) for_statement -> FOR LPAREN initialization PUNTOYCOMA . condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (78) condicion -> . condicion_simple
    (79) condicion -> . condicion compuesta_logica condicion
    (80) condicion_simple -> . valor comparador valor
    (81) condicion_simple -> . VARIABLE comparador valor
    (82) condicion_simple -> . VARIABLE comparador VARIABLE
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (144) expression -> . VARIABLE
    (145) expression -> . NUMBER
    (146) expression -> . VARIABLE TIMES VARIABLE
    (147) expression -> . VARIABLE PLUS VARIABLE
    (148) expression -> . VARIABLE MINUS VARIABLE
    (149) expression -> . VARIABLE DIVIDE VARIABLE
    (150) expression -> . VARIABLE TIMES NUMBER
    (151) expression -> . VARIABLE PLUS NUMBER
    (152) expression -> . VARIABLE MINUS NUMBER
    (153) expression -> . VARIABLE DIVIDE NUMBER
    (154) expression -> . VARIABLE MOD VARIABLE

    VARIABLE        shift and go to state 116
    NUMBER          shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 49
    BOOLEAN         shift and go to state 50
    ID              shift and go to state 51

    condicion                      shift and go to state 238
    condicion_simple               shift and go to state 114
    valor                          shift and go to state 115
    expression                     shift and go to state 52

state 194

    (86) initialization -> VARIABLE IGUAL . valor
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (144) expression -> . VARIABLE
    (145) expression -> . NUMBER
    (146) expression -> . VARIABLE TIMES VARIABLE
    (147) expression -> . VARIABLE PLUS VARIABLE
    (148) expression -> . VARIABLE MINUS VARIABLE
    (149) expression -> . VARIABLE DIVIDE VARIABLE
    (150) expression -> . VARIABLE TIMES NUMBER
    (151) expression -> . VARIABLE PLUS NUMBER
    (152) expression -> . VARIABLE MINUS NUMBER
    (153) expression -> . VARIABLE DIVIDE NUMBER
    (154) expression -> . VARIABLE MOD VARIABLE

    NUMBER          shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 49
    BOOLEAN         shift and go to state 50
    VARIABLE        shift and go to state 73
    ID              shift and go to state 51

    valor                          shift and go to state 239
    expression                     shift and go to state 52

state 195

    (114) pares -> pares COMA par .

    RBRACE          reduce using rule 114 (pares -> pares COMA par .)
    COMA            reduce using rule 114 (pares -> pares COMA par .)


state 196

    (115) par -> STRING ARROW valor .

    RBRACE          reduce using rule 115 (par -> STRING ARROW valor .)
    COMA            reduce using rule 115 (par -> STRING ARROW valor .)


state 197

    (120) funcion -> FUNCTION ID LPAREN RPAREN . LLLAVE instrucciones RLLAVE

    LLLAVE          shift and go to state 240


state 198

    (121) funcion -> FUNCTION ID LPAREN parametros . RPAREN LLLAVE instrucciones RLLAVE
    (138) parametros -> parametros . COMA STRING
    (140) parametros -> parametros . COMA VARIABLE

    RPAREN          shift and go to state 241
    COMA            shift and go to state 242


state 199

    (137) parametros -> STRING .

    RPAREN          reduce using rule 137 (parametros -> STRING .)
    COMA            reduce using rule 137 (parametros -> STRING .)


state 200

    (139) parametros -> VARIABLE .

    RPAREN          reduce using rule 139 (parametros -> VARIABLE .)
    COMA            reduce using rule 139 (parametros -> VARIABLE .)


state 201

    (16) imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .

    PRINT           reduce using rule 16 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    PRINT_R         reduce using rule 16 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    ECHO            reduce using rule 16 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    VARIABLE        reduce using rule 16 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    WHILE           reduce using rule 16 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    IF              reduce using rule 16 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    ELSE            reduce using rule 16 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    FOR             reduce using rule 16 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    LBRACKET        reduce using rule 16 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    LBRACE          reduce using rule 16 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    FUNCTION        reduce using rule 16 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    PHP_END         reduce using rule 16 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    RLLAVE          reduce using rule 16 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)


state 202

    (17) imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .

    PRINT           reduce using rule 17 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    PRINT_R         reduce using rule 17 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    ECHO            reduce using rule 17 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    VARIABLE        reduce using rule 17 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    WHILE           reduce using rule 17 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    IF              reduce using rule 17 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    ELSE            reduce using rule 17 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    FOR             reduce using rule 17 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    LBRACKET        reduce using rule 17 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    LBRACE          reduce using rule 17 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    FUNCTION        reduce using rule 17 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    PHP_END         reduce using rule 17 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    RLLAVE          reduce using rule 17 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)


state 203

    (31) argumentos -> argumentos COMA valor .

    RPAREN          reduce using rule 31 (argumentos -> argumentos COMA valor .)
    COMA            reduce using rule 31 (argumentos -> argumentos COMA valor .)


state 204

    (18) imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .

    PRINT           reduce using rule 18 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    PRINT_R         reduce using rule 18 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    ECHO            reduce using rule 18 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    VARIABLE        reduce using rule 18 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    WHILE           reduce using rule 18 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    IF              reduce using rule 18 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    ELSE            reduce using rule 18 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    FOR             reduce using rule 18 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    LBRACKET        reduce using rule 18 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    LBRACE          reduce using rule 18 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    FUNCTION        reduce using rule 18 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    PHP_END         reduce using rule 18 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    RLLAVE          reduce using rule 18 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)


state 205

    (19) imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .

    PRINT           reduce using rule 19 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    PRINT_R         reduce using rule 19 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    ECHO            reduce using rule 19 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    VARIABLE        reduce using rule 19 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    WHILE           reduce using rule 19 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    IF              reduce using rule 19 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    ELSE            reduce using rule 19 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    FOR             reduce using rule 19 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    LBRACKET        reduce using rule 19 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    LBRACE          reduce using rule 19 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    FUNCTION        reduce using rule 19 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    PHP_END         reduce using rule 19 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    RLLAVE          reduce using rule 19 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)


state 206

    (22) imprimir -> ECHO valor COMA VARIABLE valor . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 243


state 207

    (38) indexacion -> ECHO VARIABLE LBRACKET valor RBRACKET . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 244


state 208

    (34) solicitud_datos -> VARIABLE IGUAL READLINE LPAREN STRING . RPAREN PUNTOYCOMA

    RPAREN          shift and go to state 245


state 209

    (35) solicitud_datos -> VARIABLE IGUAL READLINE LPAREN RPAREN . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 246


state 210

    (36) input -> VARIABLE IGUAL FGETS LPAREN VARIABLE . RPAREN PUNTOYCOMA

    RPAREN          shift and go to state 247


state 211

    (66) expresiones -> VARIABLE IGUAL valor operadorAritmetico valor . PUNTOYCOMA
    (68) operacion -> valor . operadorAritmetico valor PUNTOYCOMA
    (70) operadorAritmetico -> . PLUS
    (71) operadorAritmetico -> . MINUS
    (72) operadorAritmetico -> . TIMES
    (73) operadorAritmetico -> . DIVIDE
    (74) operadorAritmetico -> . MOD
    (75) operadorAritmetico -> . POT

    PUNTOYCOMA      shift and go to state 249
    PLUS            shift and go to state 151
    MINUS           shift and go to state 152
    TIMES           shift and go to state 153
    DIVIDE          shift and go to state 154
    MOD             shift and go to state 155
    POT             shift and go to state 156

    operadorAritmetico             shift and go to state 248

state 212

    (67) expresiones -> VARIABLE IGUAL valor operadorAritmetico operacion .
    (69) operacion -> operacion . operadorAritmetico operacion
    (70) operadorAritmetico -> . PLUS
    (71) operadorAritmetico -> . MINUS
    (72) operadorAritmetico -> . TIMES
    (73) operadorAritmetico -> . DIVIDE
    (74) operadorAritmetico -> . MOD
    (75) operadorAritmetico -> . POT

    PRINT           reduce using rule 67 (expresiones -> VARIABLE IGUAL valor operadorAritmetico operacion .)
    PRINT_R         reduce using rule 67 (expresiones -> VARIABLE IGUAL valor operadorAritmetico operacion .)
    ECHO            reduce using rule 67 (expresiones -> VARIABLE IGUAL valor operadorAritmetico operacion .)
    VARIABLE        reduce using rule 67 (expresiones -> VARIABLE IGUAL valor operadorAritmetico operacion .)
    WHILE           reduce using rule 67 (expresiones -> VARIABLE IGUAL valor operadorAritmetico operacion .)
    IF              reduce using rule 67 (expresiones -> VARIABLE IGUAL valor operadorAritmetico operacion .)
    ELSE            reduce using rule 67 (expresiones -> VARIABLE IGUAL valor operadorAritmetico operacion .)
    FOR             reduce using rule 67 (expresiones -> VARIABLE IGUAL valor operadorAritmetico operacion .)
    LBRACKET        reduce using rule 67 (expresiones -> VARIABLE IGUAL valor operadorAritmetico operacion .)
    LBRACE          reduce using rule 67 (expresiones -> VARIABLE IGUAL valor operadorAritmetico operacion .)
    FUNCTION        reduce using rule 67 (expresiones -> VARIABLE IGUAL valor operadorAritmetico operacion .)
    PHP_END         reduce using rule 67 (expresiones -> VARIABLE IGUAL valor operadorAritmetico operacion .)
    RLLAVE          reduce using rule 67 (expresiones -> VARIABLE IGUAL valor operadorAritmetico operacion .)
    PLUS            shift and go to state 151
    MINUS           shift and go to state 152
    TIMES           shift and go to state 153
    DIVIDE          shift and go to state 154
    MOD             shift and go to state 155
    POT             shift and go to state 156

    operadorAritmetico             shift and go to state 250

state 213

    (65) asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos . RPAREN PUNTOYCOMA
    (100) array -> VARIABLE IGUAL ARRAY LPAREN elementos . RPAREN PUNTOYCOMA
    (105) elementos -> elementos . COMA elemento

    RPAREN          shift and go to state 251
    COMA            shift and go to state 111


state 214

    (99) array -> VARIABLE IGUAL ARRAY LPAREN RPAREN . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 252


state 215

    (101) array -> VARIABLE IGUAL ARRAY LPAREN valor . RPAREN PUNTOYCOMA
    (106) elemento -> valor .
    (109) clave_valor -> valor . ARROW valor

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 253
    COMA            reduce using rule 106 (elemento -> valor .)
    ARROW           shift and go to state 112

  ! RPAREN          [ reduce using rule 106 (elemento -> valor .) ]


state 216

    (102) array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .

    PRINT           reduce using rule 102 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    PRINT_R         reduce using rule 102 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    ECHO            reduce using rule 102 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    VARIABLE        reduce using rule 102 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    WHILE           reduce using rule 102 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    IF              reduce using rule 102 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    ELSE            reduce using rule 102 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    FOR             reduce using rule 102 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    LBRACKET        reduce using rule 102 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    LBRACE          reduce using rule 102 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    FUNCTION        reduce using rule 102 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    PHP_END         reduce using rule 102 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    RLLAVE          reduce using rule 102 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)


state 217

    (103) array -> VARIABLE IGUAL LBRACKET elementos RBRACKET . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 254


state 218

    (134) operaciones -> VARIABLE . IGUAL operaciones
    (135) operaciones -> VARIABLE .
    (27) valor -> VARIABLE .
    (144) expression -> VARIABLE .
    (146) expression -> VARIABLE . TIMES VARIABLE
    (147) expression -> VARIABLE . PLUS VARIABLE
    (148) expression -> VARIABLE . MINUS VARIABLE
    (149) expression -> VARIABLE . DIVIDE VARIABLE
    (150) expression -> VARIABLE . TIMES NUMBER
    (151) expression -> VARIABLE . PLUS NUMBER
    (152) expression -> VARIABLE . MINUS NUMBER
    (153) expression -> VARIABLE . DIVIDE NUMBER
    (154) expression -> VARIABLE . MOD VARIABLE

  ! reduce/reduce conflict for PLUS resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MINUS resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for TIMES resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for POT resolved using rule 27 (valor -> VARIABLE .)
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    IGUAL           shift and go to state 255
    RPAREN          reduce using rule 135 (operaciones -> VARIABLE .)
    POT             reduce using rule 27 (valor -> VARIABLE .)
    TIMES           shift and go to state 91
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    DIVIDE          shift and go to state 94
    MOD             shift and go to state 95

  ! PLUS            [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! MINUS           [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! TIMES           [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! DIVIDE          [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! MOD             [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! PLUS            [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! MINUS           [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! TIMES           [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! DIVIDE          [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! MOD             [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! POT             [ reduce using rule 144 (expression -> VARIABLE .) ]


state 219

    (122) funcioninbuilt -> VARIABLE IGUAL funcionesdefin LPAREN operaciones . RPAREN PUNTOYCOMA

    RPAREN          shift and go to state 256


state 220

    (131) operaciones -> operacion .
    (132) operaciones -> operacion . PUNTOYCOMA
    (133) operaciones -> operacion . operadorAritmetico operaciones
    (69) operacion -> operacion . operadorAritmetico operacion
    (70) operadorAritmetico -> . PLUS
    (71) operadorAritmetico -> . MINUS
    (72) operadorAritmetico -> . TIMES
    (73) operadorAritmetico -> . DIVIDE
    (74) operadorAritmetico -> . MOD
    (75) operadorAritmetico -> . POT

    RPAREN          reduce using rule 131 (operaciones -> operacion .)
    PUNTOYCOMA      shift and go to state 257
    PLUS            shift and go to state 151
    MINUS           shift and go to state 152
    TIMES           shift and go to state 153
    DIVIDE          shift and go to state 154
    MOD             shift and go to state 155
    POT             shift and go to state 156

    operadorAritmetico             shift and go to state 258

state 221

    (68) operacion -> valor . operadorAritmetico valor PUNTOYCOMA
    (70) operadorAritmetico -> . PLUS
    (71) operadorAritmetico -> . MINUS
    (72) operadorAritmetico -> . TIMES
    (73) operadorAritmetico -> . DIVIDE
    (74) operadorAritmetico -> . MOD
    (75) operadorAritmetico -> . POT

    PLUS            shift and go to state 151
    MINUS           shift and go to state 152
    TIMES           shift and go to state 153
    DIVIDE          shift and go to state 154
    MOD             shift and go to state 155
    POT             shift and go to state 156

    operadorAritmetico             shift and go to state 248

state 222

    (136) funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros . RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (138) parametros -> parametros . COMA STRING
    (140) parametros -> parametros . COMA VARIABLE

    RPAREN          shift and go to state 259
    COMA            shift and go to state 242


state 223

    (142) parameter_list -> VARIABLE .
    (143) parameter_list -> VARIABLE . COMA parameter_list

    RPAREN          reduce using rule 142 (parameter_list -> VARIABLE .)
    COMA            shift and go to state 260


state 224

    (141) arrow_function -> VARIABLE IGUAL FN LPAREN parameter_list . RPAREN ARROW expression PUNTOYCOMA

    RPAREN          shift and go to state 261


state 225

    (123) funcioninbuilt -> VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA .

    PRINT           reduce using rule 123 (funcioninbuilt -> VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA .)
    PRINT_R         reduce using rule 123 (funcioninbuilt -> VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA .)
    ECHO            reduce using rule 123 (funcioninbuilt -> VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA .)
    VARIABLE        reduce using rule 123 (funcioninbuilt -> VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA .)
    WHILE           reduce using rule 123 (funcioninbuilt -> VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA .)
    IF              reduce using rule 123 (funcioninbuilt -> VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA .)
    ELSE            reduce using rule 123 (funcioninbuilt -> VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA .)
    FOR             reduce using rule 123 (funcioninbuilt -> VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA .)
    LBRACKET        reduce using rule 123 (funcioninbuilt -> VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA .)
    LBRACE          reduce using rule 123 (funcioninbuilt -> VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA .)
    FUNCTION        reduce using rule 123 (funcioninbuilt -> VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA .)
    PHP_END         reduce using rule 123 (funcioninbuilt -> VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA .)
    RLLAVE          reduce using rule 123 (funcioninbuilt -> VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA .)


state 226

    (77) while -> WHILE LPAREN condicion RPAREN LLLAVE . instrucciones RLLAVE
    (4) instrucciones -> . instruccion
    (5) instrucciones -> . instrucciones instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) instruccion -> . expresiones
    (15) instruccion -> . increment
    (16) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (19) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (20) imprimir -> . ECHO valor PUNTOYCOMA
    (21) imprimir -> . ECHO concatenar PUNTOYCOMA
    (22) imprimir -> . ECHO valor COMA VARIABLE valor PUNTOYCOMA
    (34) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA
    (36) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (37) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (38) indexacion -> . ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (39) estructurasControl -> . while
    (40) estructurasControl -> . if
    (41) estructurasControl -> . else
    (42) estructurasControl -> . for_statement
    (63) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (64) asignacion -> . VARIABLE IGUAL ARRAY PUNTOYCOMA
    (65) asignacion -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (96) estructurasDatos -> . array
    (97) estructurasDatos -> . lista
    (98) estructurasDatos -> . diccionario
    (116) funciones -> . funcion
    (117) funciones -> . funcioninbuilt
    (118) funciones -> . funcion_anonima
    (119) funciones -> . arrow_function
    (66) expresiones -> . VARIABLE IGUAL valor operadorAritmetico valor PUNTOYCOMA
    (67) expresiones -> . VARIABLE IGUAL valor operadorAritmetico operacion
    (88) increment -> . VARIABLE INCREMENT
    (89) increment -> . VARIABLE DECREMENT
    (90) increment -> . VARIABLE DECREMENT PUNTOYCOMA
    (91) increment -> . VARIABLE PLUS_ASSIGN valor
    (92) increment -> . VARIABLE MINUS_ASSIGN valor
    (93) increment -> . empty
    (94) increment -> . VARIABLE INCREMENT PUNTOYCOMA
    (77) while -> . WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE
    (43) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (44) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (76) else -> . ELSE LLLAVE instrucciones RLLAVE
    (85) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (99) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (100) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (101) array -> . VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA
    (102) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (103) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (110) lista -> . LBRACKET RBRACKET
    (111) lista -> . LBRACKET elementos RBRACKET
    (112) diccionario -> . LBRACE pares RBRACE
    (120) funcion -> . FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE
    (121) funcion -> . FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE
    (122) funcioninbuilt -> . VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA
    (123) funcioninbuilt -> . VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA
    (136) funcion_anonima -> . VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (141) arrow_function -> . VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA
    (95) empty -> .

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINT_R resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
    PRINT           shift and go to state 17
    PRINT_R         shift and go to state 18
    ECHO            shift and go to state 19
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    FOR             shift and go to state 36
    LBRACKET        shift and go to state 21
    LBRACE          shift and go to state 37
    FUNCTION        shift and go to state 38
    RLLAVE          reduce using rule 95 (empty -> .)

  ! PRINT           [ reduce using rule 95 (empty -> .) ]
  ! PRINT_R         [ reduce using rule 95 (empty -> .) ]
  ! ECHO            [ reduce using rule 95 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 95 (empty -> .) ]
  ! WHILE           [ reduce using rule 95 (empty -> .) ]
  ! IF              [ reduce using rule 95 (empty -> .) ]
  ! ELSE            [ reduce using rule 95 (empty -> .) ]
  ! FOR             [ reduce using rule 95 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 95 (empty -> .) ]
  ! LBRACE          [ reduce using rule 95 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 95 (empty -> .) ]

    instrucciones                  shift and go to state 262
    instruccion                    shift and go to state 6
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    expresiones                    shift and go to state 15
    increment                      shift and go to state 16
    while                          shift and go to state 22
    if                             shift and go to state 23
    else                           shift and go to state 24
    for_statement                  shift and go to state 25
    array                          shift and go to state 26
    lista                          shift and go to state 27
    diccionario                    shift and go to state 28
    funcion                        shift and go to state 29
    funcioninbuilt                 shift and go to state 30
    funcion_anonima                shift and go to state 31
    arrow_function                 shift and go to state 32
    empty                          shift and go to state 41

state 227

    (79) condicion -> condicion compuesta_logica condicion .
    (79) condicion -> condicion . compuesta_logica condicion
    (83) compuesta_logica -> . AND_LOGICAL
    (84) compuesta_logica -> . OR_LOGICAL

  ! shift/reduce conflict for AND_LOGICAL resolved as shift
  ! shift/reduce conflict for OR_LOGICAL resolved as shift
    RPAREN          reduce using rule 79 (condicion -> condicion compuesta_logica condicion .)
    PUNTOYCOMA      reduce using rule 79 (condicion -> condicion compuesta_logica condicion .)
    AND_LOGICAL     shift and go to state 170
    OR_LOGICAL      shift and go to state 171

  ! AND_LOGICAL     [ reduce using rule 79 (condicion -> condicion compuesta_logica condicion .) ]
  ! OR_LOGICAL      [ reduce using rule 79 (condicion -> condicion compuesta_logica condicion .) ]

    compuesta_logica               shift and go to state 169

state 228

    (80) condicion_simple -> valor comparador valor .

    RPAREN          reduce using rule 80 (condicion_simple -> valor comparador valor .)
    AND_LOGICAL     reduce using rule 80 (condicion_simple -> valor comparador valor .)
    OR_LOGICAL      reduce using rule 80 (condicion_simple -> valor comparador valor .)
    PUNTOYCOMA      reduce using rule 80 (condicion_simple -> valor comparador valor .)


state 229

    (82) condicion_simple -> VARIABLE comparador VARIABLE .
    (27) valor -> VARIABLE .
    (144) expression -> VARIABLE .
    (146) expression -> VARIABLE . TIMES VARIABLE
    (147) expression -> VARIABLE . PLUS VARIABLE
    (148) expression -> VARIABLE . MINUS VARIABLE
    (149) expression -> VARIABLE . DIVIDE VARIABLE
    (150) expression -> VARIABLE . TIMES NUMBER
    (151) expression -> VARIABLE . PLUS NUMBER
    (152) expression -> VARIABLE . MINUS NUMBER
    (153) expression -> VARIABLE . DIVIDE NUMBER
    (154) expression -> VARIABLE . MOD VARIABLE

  ! reduce/reduce conflict for RPAREN resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for AND_LOGICAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for OR_LOGICAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for AND_LOGICAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for OR_LOGICAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 27 (valor -> VARIABLE .)
    RPAREN          reduce using rule 27 (valor -> VARIABLE .)
    AND_LOGICAL     reduce using rule 27 (valor -> VARIABLE .)
    OR_LOGICAL      reduce using rule 27 (valor -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 27 (valor -> VARIABLE .)
    TIMES           shift and go to state 91
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    DIVIDE          shift and go to state 94
    MOD             shift and go to state 95

  ! RPAREN          [ reduce using rule 82 (condicion_simple -> VARIABLE comparador VARIABLE .) ]
  ! AND_LOGICAL     [ reduce using rule 82 (condicion_simple -> VARIABLE comparador VARIABLE .) ]
  ! OR_LOGICAL      [ reduce using rule 82 (condicion_simple -> VARIABLE comparador VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 82 (condicion_simple -> VARIABLE comparador VARIABLE .) ]
  ! RPAREN          [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! AND_LOGICAL     [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! OR_LOGICAL      [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 144 (expression -> VARIABLE .) ]


state 230

    (81) condicion_simple -> VARIABLE comparador valor .

    RPAREN          reduce using rule 81 (condicion_simple -> VARIABLE comparador valor .)
    AND_LOGICAL     reduce using rule 81 (condicion_simple -> VARIABLE comparador valor .)
    OR_LOGICAL      reduce using rule 81 (condicion_simple -> VARIABLE comparador valor .)
    PUNTOYCOMA      reduce using rule 81 (condicion_simple -> VARIABLE comparador valor .)


state 231

    (43) if -> IF LPAREN comparaciones RPAREN LLLAVE . instrucciones RLLAVE
    (4) instrucciones -> . instruccion
    (5) instrucciones -> . instrucciones instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) instruccion -> . expresiones
    (15) instruccion -> . increment
    (16) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (19) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (20) imprimir -> . ECHO valor PUNTOYCOMA
    (21) imprimir -> . ECHO concatenar PUNTOYCOMA
    (22) imprimir -> . ECHO valor COMA VARIABLE valor PUNTOYCOMA
    (34) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA
    (36) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (37) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (38) indexacion -> . ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (39) estructurasControl -> . while
    (40) estructurasControl -> . if
    (41) estructurasControl -> . else
    (42) estructurasControl -> . for_statement
    (63) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (64) asignacion -> . VARIABLE IGUAL ARRAY PUNTOYCOMA
    (65) asignacion -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (96) estructurasDatos -> . array
    (97) estructurasDatos -> . lista
    (98) estructurasDatos -> . diccionario
    (116) funciones -> . funcion
    (117) funciones -> . funcioninbuilt
    (118) funciones -> . funcion_anonima
    (119) funciones -> . arrow_function
    (66) expresiones -> . VARIABLE IGUAL valor operadorAritmetico valor PUNTOYCOMA
    (67) expresiones -> . VARIABLE IGUAL valor operadorAritmetico operacion
    (88) increment -> . VARIABLE INCREMENT
    (89) increment -> . VARIABLE DECREMENT
    (90) increment -> . VARIABLE DECREMENT PUNTOYCOMA
    (91) increment -> . VARIABLE PLUS_ASSIGN valor
    (92) increment -> . VARIABLE MINUS_ASSIGN valor
    (93) increment -> . empty
    (94) increment -> . VARIABLE INCREMENT PUNTOYCOMA
    (77) while -> . WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE
    (43) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (44) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (76) else -> . ELSE LLLAVE instrucciones RLLAVE
    (85) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (99) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (100) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (101) array -> . VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA
    (102) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (103) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (110) lista -> . LBRACKET RBRACKET
    (111) lista -> . LBRACKET elementos RBRACKET
    (112) diccionario -> . LBRACE pares RBRACE
    (120) funcion -> . FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE
    (121) funcion -> . FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE
    (122) funcioninbuilt -> . VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA
    (123) funcioninbuilt -> . VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA
    (136) funcion_anonima -> . VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (141) arrow_function -> . VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA
    (95) empty -> .

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINT_R resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
    PRINT           shift and go to state 17
    PRINT_R         shift and go to state 18
    ECHO            shift and go to state 19
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    FOR             shift and go to state 36
    LBRACKET        shift and go to state 21
    LBRACE          shift and go to state 37
    FUNCTION        shift and go to state 38
    RLLAVE          reduce using rule 95 (empty -> .)

  ! PRINT           [ reduce using rule 95 (empty -> .) ]
  ! PRINT_R         [ reduce using rule 95 (empty -> .) ]
  ! ECHO            [ reduce using rule 95 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 95 (empty -> .) ]
  ! WHILE           [ reduce using rule 95 (empty -> .) ]
  ! IF              [ reduce using rule 95 (empty -> .) ]
  ! ELSE            [ reduce using rule 95 (empty -> .) ]
  ! FOR             [ reduce using rule 95 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 95 (empty -> .) ]
  ! LBRACE          [ reduce using rule 95 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 95 (empty -> .) ]

    instrucciones                  shift and go to state 263
    instruccion                    shift and go to state 6
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    expresiones                    shift and go to state 15
    increment                      shift and go to state 16
    while                          shift and go to state 22
    if                             shift and go to state 23
    else                           shift and go to state 24
    for_statement                  shift and go to state 25
    array                          shift and go to state 26
    lista                          shift and go to state 27
    diccionario                    shift and go to state 28
    funcion                        shift and go to state 29
    funcioninbuilt                 shift and go to state 30
    funcion_anonima                shift and go to state 31
    arrow_function                 shift and go to state 32
    empty                          shift and go to state 41

state 232

    (44) if -> IF LPAREN VARIABLE RPAREN LLLAVE . instrucciones RLLAVE
    (4) instrucciones -> . instruccion
    (5) instrucciones -> . instrucciones instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) instruccion -> . expresiones
    (15) instruccion -> . increment
    (16) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (19) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (20) imprimir -> . ECHO valor PUNTOYCOMA
    (21) imprimir -> . ECHO concatenar PUNTOYCOMA
    (22) imprimir -> . ECHO valor COMA VARIABLE valor PUNTOYCOMA
    (34) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA
    (36) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (37) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (38) indexacion -> . ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (39) estructurasControl -> . while
    (40) estructurasControl -> . if
    (41) estructurasControl -> . else
    (42) estructurasControl -> . for_statement
    (63) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (64) asignacion -> . VARIABLE IGUAL ARRAY PUNTOYCOMA
    (65) asignacion -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (96) estructurasDatos -> . array
    (97) estructurasDatos -> . lista
    (98) estructurasDatos -> . diccionario
    (116) funciones -> . funcion
    (117) funciones -> . funcioninbuilt
    (118) funciones -> . funcion_anonima
    (119) funciones -> . arrow_function
    (66) expresiones -> . VARIABLE IGUAL valor operadorAritmetico valor PUNTOYCOMA
    (67) expresiones -> . VARIABLE IGUAL valor operadorAritmetico operacion
    (88) increment -> . VARIABLE INCREMENT
    (89) increment -> . VARIABLE DECREMENT
    (90) increment -> . VARIABLE DECREMENT PUNTOYCOMA
    (91) increment -> . VARIABLE PLUS_ASSIGN valor
    (92) increment -> . VARIABLE MINUS_ASSIGN valor
    (93) increment -> . empty
    (94) increment -> . VARIABLE INCREMENT PUNTOYCOMA
    (77) while -> . WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE
    (43) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (44) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (76) else -> . ELSE LLLAVE instrucciones RLLAVE
    (85) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (99) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (100) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (101) array -> . VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA
    (102) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (103) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (110) lista -> . LBRACKET RBRACKET
    (111) lista -> . LBRACKET elementos RBRACKET
    (112) diccionario -> . LBRACE pares RBRACE
    (120) funcion -> . FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE
    (121) funcion -> . FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE
    (122) funcioninbuilt -> . VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA
    (123) funcioninbuilt -> . VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA
    (136) funcion_anonima -> . VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (141) arrow_function -> . VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA
    (95) empty -> .

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINT_R resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
    PRINT           shift and go to state 17
    PRINT_R         shift and go to state 18
    ECHO            shift and go to state 19
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    FOR             shift and go to state 36
    LBRACKET        shift and go to state 21
    LBRACE          shift and go to state 37
    FUNCTION        shift and go to state 38
    RLLAVE          reduce using rule 95 (empty -> .)

  ! PRINT           [ reduce using rule 95 (empty -> .) ]
  ! PRINT_R         [ reduce using rule 95 (empty -> .) ]
  ! ECHO            [ reduce using rule 95 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 95 (empty -> .) ]
  ! WHILE           [ reduce using rule 95 (empty -> .) ]
  ! IF              [ reduce using rule 95 (empty -> .) ]
  ! ELSE            [ reduce using rule 95 (empty -> .) ]
  ! FOR             [ reduce using rule 95 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 95 (empty -> .) ]
  ! LBRACE          [ reduce using rule 95 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 95 (empty -> .) ]

    instrucciones                  shift and go to state 264
    instruccion                    shift and go to state 6
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    expresiones                    shift and go to state 15
    increment                      shift and go to state 16
    while                          shift and go to state 22
    if                             shift and go to state 23
    else                           shift and go to state 24
    for_statement                  shift and go to state 25
    array                          shift and go to state 26
    lista                          shift and go to state 27
    diccionario                    shift and go to state 28
    funcion                        shift and go to state 29
    funcioninbuilt                 shift and go to state 30
    funcion_anonima                shift and go to state 31
    arrow_function                 shift and go to state 32
    empty                          shift and go to state 41

state 233

    (47) comparacion -> VARIABLE comparadorNum VARIABLE .
    (27) valor -> VARIABLE .
    (144) expression -> VARIABLE .
    (146) expression -> VARIABLE . TIMES VARIABLE
    (147) expression -> VARIABLE . PLUS VARIABLE
    (148) expression -> VARIABLE . MINUS VARIABLE
    (149) expression -> VARIABLE . DIVIDE VARIABLE
    (150) expression -> VARIABLE . TIMES NUMBER
    (151) expression -> VARIABLE . PLUS NUMBER
    (152) expression -> VARIABLE . MINUS NUMBER
    (153) expression -> VARIABLE . DIVIDE NUMBER
    (154) expression -> VARIABLE . MOD VARIABLE

  ! reduce/reduce conflict for AND_LOGICAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for OR_LOGICAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for AND_LOGICAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for OR_LOGICAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 27 (valor -> VARIABLE .)
    AND_LOGICAL     reduce using rule 27 (valor -> VARIABLE .)
    OR_LOGICAL      reduce using rule 27 (valor -> VARIABLE .)
    RPAREN          reduce using rule 27 (valor -> VARIABLE .)
    TIMES           shift and go to state 91
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    DIVIDE          shift and go to state 94
    MOD             shift and go to state 95

  ! AND_LOGICAL     [ reduce using rule 47 (comparacion -> VARIABLE comparadorNum VARIABLE .) ]
  ! OR_LOGICAL      [ reduce using rule 47 (comparacion -> VARIABLE comparadorNum VARIABLE .) ]
  ! RPAREN          [ reduce using rule 47 (comparacion -> VARIABLE comparadorNum VARIABLE .) ]
  ! AND_LOGICAL     [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! OR_LOGICAL      [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! RPAREN          [ reduce using rule 144 (expression -> VARIABLE .) ]


state 234

    (49) comparacion -> VARIABLE comparadorNum valor .

    AND_LOGICAL     reduce using rule 49 (comparacion -> VARIABLE comparadorNum valor .)
    OR_LOGICAL      reduce using rule 49 (comparacion -> VARIABLE comparadorNum valor .)
    RPAREN          reduce using rule 49 (comparacion -> VARIABLE comparadorNum valor .)


state 235

    (46) comparaciones -> comparacion operadores comparaciones .

    RPAREN          reduce using rule 46 (comparaciones -> comparacion operadores comparaciones .)


state 236

    (47) comparacion -> VARIABLE . comparadorNum VARIABLE
    (49) comparacion -> VARIABLE . comparadorNum valor
    (27) valor -> VARIABLE .
    (144) expression -> VARIABLE .
    (146) expression -> VARIABLE . TIMES VARIABLE
    (147) expression -> VARIABLE . PLUS VARIABLE
    (148) expression -> VARIABLE . MINUS VARIABLE
    (149) expression -> VARIABLE . DIVIDE VARIABLE
    (150) expression -> VARIABLE . TIMES NUMBER
    (151) expression -> VARIABLE . PLUS NUMBER
    (152) expression -> VARIABLE . MINUS NUMBER
    (153) expression -> VARIABLE . DIVIDE NUMBER
    (154) expression -> VARIABLE . MOD VARIABLE
    (50) comparadorNum -> . MAYOR
    (51) comparadorNum -> . MAYORIGUAL
    (52) comparadorNum -> . MENOR
    (53) comparadorNum -> . MENORIGUAL

  ! reduce/reduce conflict for EQUAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NOT_IDENTICAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IGUAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MAYOR resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MENOR resolved using rule 27 (valor -> VARIABLE .)
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
    EQUAL           reduce using rule 27 (valor -> VARIABLE .)
    NOT_IDENTICAL   reduce using rule 27 (valor -> VARIABLE .)
    NOT_EQUAL       reduce using rule 27 (valor -> VARIABLE .)
    IGUAL           reduce using rule 27 (valor -> VARIABLE .)
    IDENTICAL       reduce using rule 27 (valor -> VARIABLE .)
    TIMES           shift and go to state 91
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    DIVIDE          shift and go to state 94
    MOD             shift and go to state 95
    MAYOR           shift and go to state 184
    MAYORIGUAL      shift and go to state 185
    MENOR           shift and go to state 186
    MENORIGUAL      shift and go to state 187

  ! MAYOR           [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! EQUAL           [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! NOT_IDENTICAL   [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! NOT_EQUAL       [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! IGUAL           [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! IDENTICAL       [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 144 (expression -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 144 (expression -> VARIABLE .) ]

    comparadorNum                  shift and go to state 183

state 237

    (48) comparacion -> valor comparador valor .

    AND_LOGICAL     reduce using rule 48 (comparacion -> valor comparador valor .)
    OR_LOGICAL      reduce using rule 48 (comparacion -> valor comparador valor .)
    RPAREN          reduce using rule 48 (comparacion -> valor comparador valor .)


state 238

    (85) for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion . PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (79) condicion -> condicion . compuesta_logica condicion
    (83) compuesta_logica -> . AND_LOGICAL
    (84) compuesta_logica -> . OR_LOGICAL

    PUNTOYCOMA      shift and go to state 265
    AND_LOGICAL     shift and go to state 170
    OR_LOGICAL      shift and go to state 171

    compuesta_logica               shift and go to state 169

state 239

    (86) initialization -> VARIABLE IGUAL valor .

    PUNTOYCOMA      reduce using rule 86 (initialization -> VARIABLE IGUAL valor .)


state 240

    (120) funcion -> FUNCTION ID LPAREN RPAREN LLLAVE . instrucciones RLLAVE
    (4) instrucciones -> . instruccion
    (5) instrucciones -> . instrucciones instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) instruccion -> . expresiones
    (15) instruccion -> . increment
    (16) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (19) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (20) imprimir -> . ECHO valor PUNTOYCOMA
    (21) imprimir -> . ECHO concatenar PUNTOYCOMA
    (22) imprimir -> . ECHO valor COMA VARIABLE valor PUNTOYCOMA
    (34) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA
    (36) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (37) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (38) indexacion -> . ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (39) estructurasControl -> . while
    (40) estructurasControl -> . if
    (41) estructurasControl -> . else
    (42) estructurasControl -> . for_statement
    (63) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (64) asignacion -> . VARIABLE IGUAL ARRAY PUNTOYCOMA
    (65) asignacion -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (96) estructurasDatos -> . array
    (97) estructurasDatos -> . lista
    (98) estructurasDatos -> . diccionario
    (116) funciones -> . funcion
    (117) funciones -> . funcioninbuilt
    (118) funciones -> . funcion_anonima
    (119) funciones -> . arrow_function
    (66) expresiones -> . VARIABLE IGUAL valor operadorAritmetico valor PUNTOYCOMA
    (67) expresiones -> . VARIABLE IGUAL valor operadorAritmetico operacion
    (88) increment -> . VARIABLE INCREMENT
    (89) increment -> . VARIABLE DECREMENT
    (90) increment -> . VARIABLE DECREMENT PUNTOYCOMA
    (91) increment -> . VARIABLE PLUS_ASSIGN valor
    (92) increment -> . VARIABLE MINUS_ASSIGN valor
    (93) increment -> . empty
    (94) increment -> . VARIABLE INCREMENT PUNTOYCOMA
    (77) while -> . WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE
    (43) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (44) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (76) else -> . ELSE LLLAVE instrucciones RLLAVE
    (85) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (99) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (100) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (101) array -> . VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA
    (102) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (103) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (110) lista -> . LBRACKET RBRACKET
    (111) lista -> . LBRACKET elementos RBRACKET
    (112) diccionario -> . LBRACE pares RBRACE
    (120) funcion -> . FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE
    (121) funcion -> . FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE
    (122) funcioninbuilt -> . VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA
    (123) funcioninbuilt -> . VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA
    (136) funcion_anonima -> . VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (141) arrow_function -> . VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA
    (95) empty -> .

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINT_R resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
    PRINT           shift and go to state 17
    PRINT_R         shift and go to state 18
    ECHO            shift and go to state 19
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    FOR             shift and go to state 36
    LBRACKET        shift and go to state 21
    LBRACE          shift and go to state 37
    FUNCTION        shift and go to state 38
    RLLAVE          reduce using rule 95 (empty -> .)

  ! PRINT           [ reduce using rule 95 (empty -> .) ]
  ! PRINT_R         [ reduce using rule 95 (empty -> .) ]
  ! ECHO            [ reduce using rule 95 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 95 (empty -> .) ]
  ! WHILE           [ reduce using rule 95 (empty -> .) ]
  ! IF              [ reduce using rule 95 (empty -> .) ]
  ! ELSE            [ reduce using rule 95 (empty -> .) ]
  ! FOR             [ reduce using rule 95 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 95 (empty -> .) ]
  ! LBRACE          [ reduce using rule 95 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 95 (empty -> .) ]

    instrucciones                  shift and go to state 266
    instruccion                    shift and go to state 6
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    expresiones                    shift and go to state 15
    increment                      shift and go to state 16
    while                          shift and go to state 22
    if                             shift and go to state 23
    else                           shift and go to state 24
    for_statement                  shift and go to state 25
    array                          shift and go to state 26
    lista                          shift and go to state 27
    diccionario                    shift and go to state 28
    funcion                        shift and go to state 29
    funcioninbuilt                 shift and go to state 30
    funcion_anonima                shift and go to state 31
    arrow_function                 shift and go to state 32
    empty                          shift and go to state 41

state 241

    (121) funcion -> FUNCTION ID LPAREN parametros RPAREN . LLLAVE instrucciones RLLAVE

    LLLAVE          shift and go to state 267


state 242

    (138) parametros -> parametros COMA . STRING
    (140) parametros -> parametros COMA . VARIABLE

    STRING          shift and go to state 268
    VARIABLE        shift and go to state 269


state 243

    (22) imprimir -> ECHO valor COMA VARIABLE valor PUNTOYCOMA .

    PRINT           reduce using rule 22 (imprimir -> ECHO valor COMA VARIABLE valor PUNTOYCOMA .)
    PRINT_R         reduce using rule 22 (imprimir -> ECHO valor COMA VARIABLE valor PUNTOYCOMA .)
    ECHO            reduce using rule 22 (imprimir -> ECHO valor COMA VARIABLE valor PUNTOYCOMA .)
    VARIABLE        reduce using rule 22 (imprimir -> ECHO valor COMA VARIABLE valor PUNTOYCOMA .)
    WHILE           reduce using rule 22 (imprimir -> ECHO valor COMA VARIABLE valor PUNTOYCOMA .)
    IF              reduce using rule 22 (imprimir -> ECHO valor COMA VARIABLE valor PUNTOYCOMA .)
    ELSE            reduce using rule 22 (imprimir -> ECHO valor COMA VARIABLE valor PUNTOYCOMA .)
    FOR             reduce using rule 22 (imprimir -> ECHO valor COMA VARIABLE valor PUNTOYCOMA .)
    LBRACKET        reduce using rule 22 (imprimir -> ECHO valor COMA VARIABLE valor PUNTOYCOMA .)
    LBRACE          reduce using rule 22 (imprimir -> ECHO valor COMA VARIABLE valor PUNTOYCOMA .)
    FUNCTION        reduce using rule 22 (imprimir -> ECHO valor COMA VARIABLE valor PUNTOYCOMA .)
    PHP_END         reduce using rule 22 (imprimir -> ECHO valor COMA VARIABLE valor PUNTOYCOMA .)
    RLLAVE          reduce using rule 22 (imprimir -> ECHO valor COMA VARIABLE valor PUNTOYCOMA .)


state 244

    (38) indexacion -> ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .

    PRINT           reduce using rule 38 (indexacion -> ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    PRINT_R         reduce using rule 38 (indexacion -> ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    ECHO            reduce using rule 38 (indexacion -> ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    VARIABLE        reduce using rule 38 (indexacion -> ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    WHILE           reduce using rule 38 (indexacion -> ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    IF              reduce using rule 38 (indexacion -> ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    ELSE            reduce using rule 38 (indexacion -> ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    FOR             reduce using rule 38 (indexacion -> ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    LBRACKET        reduce using rule 38 (indexacion -> ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    LBRACE          reduce using rule 38 (indexacion -> ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    FUNCTION        reduce using rule 38 (indexacion -> ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    PHP_END         reduce using rule 38 (indexacion -> ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    RLLAVE          reduce using rule 38 (indexacion -> ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)


state 245

    (34) solicitud_datos -> VARIABLE IGUAL READLINE LPAREN STRING RPAREN . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 270


state 246

    (35) solicitud_datos -> VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA .

    PRINT           reduce using rule 35 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA .)
    PRINT_R         reduce using rule 35 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA .)
    ECHO            reduce using rule 35 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA .)
    VARIABLE        reduce using rule 35 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA .)
    WHILE           reduce using rule 35 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA .)
    IF              reduce using rule 35 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA .)
    ELSE            reduce using rule 35 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA .)
    FOR             reduce using rule 35 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA .)
    LBRACKET        reduce using rule 35 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA .)
    LBRACE          reduce using rule 35 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA .)
    FUNCTION        reduce using rule 35 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA .)
    PHP_END         reduce using rule 35 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA .)
    RLLAVE          reduce using rule 35 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA .)


state 247

    (36) input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 271


state 248

    (68) operacion -> valor operadorAritmetico . valor PUNTOYCOMA
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (144) expression -> . VARIABLE
    (145) expression -> . NUMBER
    (146) expression -> . VARIABLE TIMES VARIABLE
    (147) expression -> . VARIABLE PLUS VARIABLE
    (148) expression -> . VARIABLE MINUS VARIABLE
    (149) expression -> . VARIABLE DIVIDE VARIABLE
    (150) expression -> . VARIABLE TIMES NUMBER
    (151) expression -> . VARIABLE PLUS NUMBER
    (152) expression -> . VARIABLE MINUS NUMBER
    (153) expression -> . VARIABLE DIVIDE NUMBER
    (154) expression -> . VARIABLE MOD VARIABLE

    NUMBER          shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 49
    BOOLEAN         shift and go to state 50
    VARIABLE        shift and go to state 73
    ID              shift and go to state 51

    valor                          shift and go to state 272
    expression                     shift and go to state 52

state 249

    (66) expresiones -> VARIABLE IGUAL valor operadorAritmetico valor PUNTOYCOMA .

    PRINT           reduce using rule 66 (expresiones -> VARIABLE IGUAL valor operadorAritmetico valor PUNTOYCOMA .)
    PRINT_R         reduce using rule 66 (expresiones -> VARIABLE IGUAL valor operadorAritmetico valor PUNTOYCOMA .)
    ECHO            reduce using rule 66 (expresiones -> VARIABLE IGUAL valor operadorAritmetico valor PUNTOYCOMA .)
    VARIABLE        reduce using rule 66 (expresiones -> VARIABLE IGUAL valor operadorAritmetico valor PUNTOYCOMA .)
    WHILE           reduce using rule 66 (expresiones -> VARIABLE IGUAL valor operadorAritmetico valor PUNTOYCOMA .)
    IF              reduce using rule 66 (expresiones -> VARIABLE IGUAL valor operadorAritmetico valor PUNTOYCOMA .)
    ELSE            reduce using rule 66 (expresiones -> VARIABLE IGUAL valor operadorAritmetico valor PUNTOYCOMA .)
    FOR             reduce using rule 66 (expresiones -> VARIABLE IGUAL valor operadorAritmetico valor PUNTOYCOMA .)
    LBRACKET        reduce using rule 66 (expresiones -> VARIABLE IGUAL valor operadorAritmetico valor PUNTOYCOMA .)
    LBRACE          reduce using rule 66 (expresiones -> VARIABLE IGUAL valor operadorAritmetico valor PUNTOYCOMA .)
    FUNCTION        reduce using rule 66 (expresiones -> VARIABLE IGUAL valor operadorAritmetico valor PUNTOYCOMA .)
    PHP_END         reduce using rule 66 (expresiones -> VARIABLE IGUAL valor operadorAritmetico valor PUNTOYCOMA .)
    RLLAVE          reduce using rule 66 (expresiones -> VARIABLE IGUAL valor operadorAritmetico valor PUNTOYCOMA .)


state 250

    (69) operacion -> operacion operadorAritmetico . operacion
    (68) operacion -> . valor operadorAritmetico valor PUNTOYCOMA
    (69) operacion -> . operacion operadorAritmetico operacion
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (144) expression -> . VARIABLE
    (145) expression -> . NUMBER
    (146) expression -> . VARIABLE TIMES VARIABLE
    (147) expression -> . VARIABLE PLUS VARIABLE
    (148) expression -> . VARIABLE MINUS VARIABLE
    (149) expression -> . VARIABLE DIVIDE VARIABLE
    (150) expression -> . VARIABLE TIMES NUMBER
    (151) expression -> . VARIABLE PLUS NUMBER
    (152) expression -> . VARIABLE MINUS NUMBER
    (153) expression -> . VARIABLE DIVIDE NUMBER
    (154) expression -> . VARIABLE MOD VARIABLE

    NUMBER          shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 49
    BOOLEAN         shift and go to state 50
    VARIABLE        shift and go to state 73
    ID              shift and go to state 51

    operacion                      shift and go to state 273
    valor                          shift and go to state 221
    expression                     shift and go to state 52

state 251

    (65) asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN . PUNTOYCOMA
    (100) array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 274


state 252

    (99) array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .

    PRINT           reduce using rule 99 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    PRINT_R         reduce using rule 99 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    ECHO            reduce using rule 99 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    VARIABLE        reduce using rule 99 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    WHILE           reduce using rule 99 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    IF              reduce using rule 99 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    ELSE            reduce using rule 99 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    FOR             reduce using rule 99 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    LBRACKET        reduce using rule 99 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    LBRACE          reduce using rule 99 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    FUNCTION        reduce using rule 99 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    PHP_END         reduce using rule 99 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    RLLAVE          reduce using rule 99 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)


state 253

    (101) array -> VARIABLE IGUAL ARRAY LPAREN valor RPAREN . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 275


state 254

    (103) array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .

    PRINT           reduce using rule 103 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    PRINT_R         reduce using rule 103 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    ECHO            reduce using rule 103 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    VARIABLE        reduce using rule 103 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    WHILE           reduce using rule 103 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    IF              reduce using rule 103 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    ELSE            reduce using rule 103 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    FOR             reduce using rule 103 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    LBRACKET        reduce using rule 103 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    LBRACE          reduce using rule 103 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    FUNCTION        reduce using rule 103 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    PHP_END         reduce using rule 103 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    RLLAVE          reduce using rule 103 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)


state 255

    (134) operaciones -> VARIABLE IGUAL . operaciones
    (131) operaciones -> . operacion
    (132) operaciones -> . operacion PUNTOYCOMA
    (133) operaciones -> . operacion operadorAritmetico operaciones
    (134) operaciones -> . VARIABLE IGUAL operaciones
    (135) operaciones -> . VARIABLE
    (68) operacion -> . valor operadorAritmetico valor PUNTOYCOMA
    (69) operacion -> . operacion operadorAritmetico operacion
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (144) expression -> . VARIABLE
    (145) expression -> . NUMBER
    (146) expression -> . VARIABLE TIMES VARIABLE
    (147) expression -> . VARIABLE PLUS VARIABLE
    (148) expression -> . VARIABLE MINUS VARIABLE
    (149) expression -> . VARIABLE DIVIDE VARIABLE
    (150) expression -> . VARIABLE TIMES NUMBER
    (151) expression -> . VARIABLE PLUS NUMBER
    (152) expression -> . VARIABLE MINUS NUMBER
    (153) expression -> . VARIABLE DIVIDE NUMBER
    (154) expression -> . VARIABLE MOD VARIABLE

    VARIABLE        shift and go to state 218
    NUMBER          shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 49
    BOOLEAN         shift and go to state 50
    ID              shift and go to state 51

    operaciones                    shift and go to state 276
    operacion                      shift and go to state 220
    valor                          shift and go to state 221
    expression                     shift and go to state 52

state 256

    (122) funcioninbuilt -> VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 277


state 257

    (132) operaciones -> operacion PUNTOYCOMA .

    RPAREN          reduce using rule 132 (operaciones -> operacion PUNTOYCOMA .)


state 258

    (133) operaciones -> operacion operadorAritmetico . operaciones
    (69) operacion -> operacion operadorAritmetico . operacion
    (131) operaciones -> . operacion
    (132) operaciones -> . operacion PUNTOYCOMA
    (133) operaciones -> . operacion operadorAritmetico operaciones
    (134) operaciones -> . VARIABLE IGUAL operaciones
    (135) operaciones -> . VARIABLE
    (68) operacion -> . valor operadorAritmetico valor PUNTOYCOMA
    (69) operacion -> . operacion operadorAritmetico operacion
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (144) expression -> . VARIABLE
    (145) expression -> . NUMBER
    (146) expression -> . VARIABLE TIMES VARIABLE
    (147) expression -> . VARIABLE PLUS VARIABLE
    (148) expression -> . VARIABLE MINUS VARIABLE
    (149) expression -> . VARIABLE DIVIDE VARIABLE
    (150) expression -> . VARIABLE TIMES NUMBER
    (151) expression -> . VARIABLE PLUS NUMBER
    (152) expression -> . VARIABLE MINUS NUMBER
    (153) expression -> . VARIABLE DIVIDE NUMBER
    (154) expression -> . VARIABLE MOD VARIABLE

    VARIABLE        shift and go to state 218
    NUMBER          shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 49
    BOOLEAN         shift and go to state 50
    ID              shift and go to state 51

    operacion                      shift and go to state 278
    operaciones                    shift and go to state 279
    valor                          shift and go to state 221
    expression                     shift and go to state 52

state 259

    (136) funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN . LLLAVE instrucciones RLLAVE PUNTOYCOMA

    LLLAVE          shift and go to state 280


state 260

    (143) parameter_list -> VARIABLE COMA . parameter_list
    (142) parameter_list -> . VARIABLE
    (143) parameter_list -> . VARIABLE COMA parameter_list

    VARIABLE        shift and go to state 223

    parameter_list                 shift and go to state 281

state 261

    (141) arrow_function -> VARIABLE IGUAL FN LPAREN parameter_list RPAREN . ARROW expression PUNTOYCOMA

    ARROW           shift and go to state 282


state 262

    (77) while -> WHILE LPAREN condicion RPAREN LLLAVE instrucciones . RLLAVE
    (5) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) instruccion -> . expresiones
    (15) instruccion -> . increment
    (16) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (19) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (20) imprimir -> . ECHO valor PUNTOYCOMA
    (21) imprimir -> . ECHO concatenar PUNTOYCOMA
    (22) imprimir -> . ECHO valor COMA VARIABLE valor PUNTOYCOMA
    (34) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA
    (36) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (37) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (38) indexacion -> . ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (39) estructurasControl -> . while
    (40) estructurasControl -> . if
    (41) estructurasControl -> . else
    (42) estructurasControl -> . for_statement
    (63) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (64) asignacion -> . VARIABLE IGUAL ARRAY PUNTOYCOMA
    (65) asignacion -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (96) estructurasDatos -> . array
    (97) estructurasDatos -> . lista
    (98) estructurasDatos -> . diccionario
    (116) funciones -> . funcion
    (117) funciones -> . funcioninbuilt
    (118) funciones -> . funcion_anonima
    (119) funciones -> . arrow_function
    (66) expresiones -> . VARIABLE IGUAL valor operadorAritmetico valor PUNTOYCOMA
    (67) expresiones -> . VARIABLE IGUAL valor operadorAritmetico operacion
    (88) increment -> . VARIABLE INCREMENT
    (89) increment -> . VARIABLE DECREMENT
    (90) increment -> . VARIABLE DECREMENT PUNTOYCOMA
    (91) increment -> . VARIABLE PLUS_ASSIGN valor
    (92) increment -> . VARIABLE MINUS_ASSIGN valor
    (93) increment -> . empty
    (94) increment -> . VARIABLE INCREMENT PUNTOYCOMA
    (77) while -> . WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE
    (43) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (44) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (76) else -> . ELSE LLLAVE instrucciones RLLAVE
    (85) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (99) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (100) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (101) array -> . VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA
    (102) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (103) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (110) lista -> . LBRACKET RBRACKET
    (111) lista -> . LBRACKET elementos RBRACKET
    (112) diccionario -> . LBRACE pares RBRACE
    (120) funcion -> . FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE
    (121) funcion -> . FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE
    (122) funcioninbuilt -> . VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA
    (123) funcioninbuilt -> . VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA
    (136) funcion_anonima -> . VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (141) arrow_function -> . VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA
    (95) empty -> .

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINT_R resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
    RLLAVE          shift and go to state 283
    PRINT           shift and go to state 17
    PRINT_R         shift and go to state 18
    ECHO            shift and go to state 19
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    FOR             shift and go to state 36
    LBRACKET        shift and go to state 21
    LBRACE          shift and go to state 37
    FUNCTION        shift and go to state 38

  ! RLLAVE          [ reduce using rule 95 (empty -> .) ]
  ! PRINT           [ reduce using rule 95 (empty -> .) ]
  ! PRINT_R         [ reduce using rule 95 (empty -> .) ]
  ! ECHO            [ reduce using rule 95 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 95 (empty -> .) ]
  ! WHILE           [ reduce using rule 95 (empty -> .) ]
  ! IF              [ reduce using rule 95 (empty -> .) ]
  ! ELSE            [ reduce using rule 95 (empty -> .) ]
  ! FOR             [ reduce using rule 95 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 95 (empty -> .) ]
  ! LBRACE          [ reduce using rule 95 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 95 (empty -> .) ]

    instruccion                    shift and go to state 40
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    expresiones                    shift and go to state 15
    increment                      shift and go to state 16
    while                          shift and go to state 22
    if                             shift and go to state 23
    else                           shift and go to state 24
    for_statement                  shift and go to state 25
    array                          shift and go to state 26
    lista                          shift and go to state 27
    diccionario                    shift and go to state 28
    funcion                        shift and go to state 29
    funcioninbuilt                 shift and go to state 30
    funcion_anonima                shift and go to state 31
    arrow_function                 shift and go to state 32
    empty                          shift and go to state 41

state 263

    (43) if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones . RLLAVE
    (5) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) instruccion -> . expresiones
    (15) instruccion -> . increment
    (16) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (19) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (20) imprimir -> . ECHO valor PUNTOYCOMA
    (21) imprimir -> . ECHO concatenar PUNTOYCOMA
    (22) imprimir -> . ECHO valor COMA VARIABLE valor PUNTOYCOMA
    (34) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA
    (36) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (37) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (38) indexacion -> . ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (39) estructurasControl -> . while
    (40) estructurasControl -> . if
    (41) estructurasControl -> . else
    (42) estructurasControl -> . for_statement
    (63) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (64) asignacion -> . VARIABLE IGUAL ARRAY PUNTOYCOMA
    (65) asignacion -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (96) estructurasDatos -> . array
    (97) estructurasDatos -> . lista
    (98) estructurasDatos -> . diccionario
    (116) funciones -> . funcion
    (117) funciones -> . funcioninbuilt
    (118) funciones -> . funcion_anonima
    (119) funciones -> . arrow_function
    (66) expresiones -> . VARIABLE IGUAL valor operadorAritmetico valor PUNTOYCOMA
    (67) expresiones -> . VARIABLE IGUAL valor operadorAritmetico operacion
    (88) increment -> . VARIABLE INCREMENT
    (89) increment -> . VARIABLE DECREMENT
    (90) increment -> . VARIABLE DECREMENT PUNTOYCOMA
    (91) increment -> . VARIABLE PLUS_ASSIGN valor
    (92) increment -> . VARIABLE MINUS_ASSIGN valor
    (93) increment -> . empty
    (94) increment -> . VARIABLE INCREMENT PUNTOYCOMA
    (77) while -> . WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE
    (43) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (44) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (76) else -> . ELSE LLLAVE instrucciones RLLAVE
    (85) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (99) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (100) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (101) array -> . VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA
    (102) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (103) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (110) lista -> . LBRACKET RBRACKET
    (111) lista -> . LBRACKET elementos RBRACKET
    (112) diccionario -> . LBRACE pares RBRACE
    (120) funcion -> . FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE
    (121) funcion -> . FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE
    (122) funcioninbuilt -> . VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA
    (123) funcioninbuilt -> . VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA
    (136) funcion_anonima -> . VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (141) arrow_function -> . VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA
    (95) empty -> .

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINT_R resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
    RLLAVE          shift and go to state 284
    PRINT           shift and go to state 17
    PRINT_R         shift and go to state 18
    ECHO            shift and go to state 19
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    FOR             shift and go to state 36
    LBRACKET        shift and go to state 21
    LBRACE          shift and go to state 37
    FUNCTION        shift and go to state 38

  ! RLLAVE          [ reduce using rule 95 (empty -> .) ]
  ! PRINT           [ reduce using rule 95 (empty -> .) ]
  ! PRINT_R         [ reduce using rule 95 (empty -> .) ]
  ! ECHO            [ reduce using rule 95 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 95 (empty -> .) ]
  ! WHILE           [ reduce using rule 95 (empty -> .) ]
  ! IF              [ reduce using rule 95 (empty -> .) ]
  ! ELSE            [ reduce using rule 95 (empty -> .) ]
  ! FOR             [ reduce using rule 95 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 95 (empty -> .) ]
  ! LBRACE          [ reduce using rule 95 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 95 (empty -> .) ]

    instruccion                    shift and go to state 40
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    expresiones                    shift and go to state 15
    increment                      shift and go to state 16
    while                          shift and go to state 22
    if                             shift and go to state 23
    else                           shift and go to state 24
    for_statement                  shift and go to state 25
    array                          shift and go to state 26
    lista                          shift and go to state 27
    diccionario                    shift and go to state 28
    funcion                        shift and go to state 29
    funcioninbuilt                 shift and go to state 30
    funcion_anonima                shift and go to state 31
    arrow_function                 shift and go to state 32
    empty                          shift and go to state 41

state 264

    (44) if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones . RLLAVE
    (5) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) instruccion -> . expresiones
    (15) instruccion -> . increment
    (16) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (19) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (20) imprimir -> . ECHO valor PUNTOYCOMA
    (21) imprimir -> . ECHO concatenar PUNTOYCOMA
    (22) imprimir -> . ECHO valor COMA VARIABLE valor PUNTOYCOMA
    (34) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA
    (36) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (37) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (38) indexacion -> . ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (39) estructurasControl -> . while
    (40) estructurasControl -> . if
    (41) estructurasControl -> . else
    (42) estructurasControl -> . for_statement
    (63) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (64) asignacion -> . VARIABLE IGUAL ARRAY PUNTOYCOMA
    (65) asignacion -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (96) estructurasDatos -> . array
    (97) estructurasDatos -> . lista
    (98) estructurasDatos -> . diccionario
    (116) funciones -> . funcion
    (117) funciones -> . funcioninbuilt
    (118) funciones -> . funcion_anonima
    (119) funciones -> . arrow_function
    (66) expresiones -> . VARIABLE IGUAL valor operadorAritmetico valor PUNTOYCOMA
    (67) expresiones -> . VARIABLE IGUAL valor operadorAritmetico operacion
    (88) increment -> . VARIABLE INCREMENT
    (89) increment -> . VARIABLE DECREMENT
    (90) increment -> . VARIABLE DECREMENT PUNTOYCOMA
    (91) increment -> . VARIABLE PLUS_ASSIGN valor
    (92) increment -> . VARIABLE MINUS_ASSIGN valor
    (93) increment -> . empty
    (94) increment -> . VARIABLE INCREMENT PUNTOYCOMA
    (77) while -> . WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE
    (43) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (44) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (76) else -> . ELSE LLLAVE instrucciones RLLAVE
    (85) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (99) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (100) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (101) array -> . VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA
    (102) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (103) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (110) lista -> . LBRACKET RBRACKET
    (111) lista -> . LBRACKET elementos RBRACKET
    (112) diccionario -> . LBRACE pares RBRACE
    (120) funcion -> . FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE
    (121) funcion -> . FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE
    (122) funcioninbuilt -> . VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA
    (123) funcioninbuilt -> . VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA
    (136) funcion_anonima -> . VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (141) arrow_function -> . VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA
    (95) empty -> .

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINT_R resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
    RLLAVE          shift and go to state 285
    PRINT           shift and go to state 17
    PRINT_R         shift and go to state 18
    ECHO            shift and go to state 19
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    FOR             shift and go to state 36
    LBRACKET        shift and go to state 21
    LBRACE          shift and go to state 37
    FUNCTION        shift and go to state 38

  ! RLLAVE          [ reduce using rule 95 (empty -> .) ]
  ! PRINT           [ reduce using rule 95 (empty -> .) ]
  ! PRINT_R         [ reduce using rule 95 (empty -> .) ]
  ! ECHO            [ reduce using rule 95 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 95 (empty -> .) ]
  ! WHILE           [ reduce using rule 95 (empty -> .) ]
  ! IF              [ reduce using rule 95 (empty -> .) ]
  ! ELSE            [ reduce using rule 95 (empty -> .) ]
  ! FOR             [ reduce using rule 95 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 95 (empty -> .) ]
  ! LBRACE          [ reduce using rule 95 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 95 (empty -> .) ]

    instruccion                    shift and go to state 40
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    expresiones                    shift and go to state 15
    increment                      shift and go to state 16
    while                          shift and go to state 22
    if                             shift and go to state 23
    else                           shift and go to state 24
    for_statement                  shift and go to state 25
    array                          shift and go to state 26
    lista                          shift and go to state 27
    diccionario                    shift and go to state 28
    funcion                        shift and go to state 29
    funcioninbuilt                 shift and go to state 30
    funcion_anonima                shift and go to state 31
    arrow_function                 shift and go to state 32
    empty                          shift and go to state 41

state 265

    (85) for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA . increment RPAREN LLLAVE instrucciones RLLAVE
    (88) increment -> . VARIABLE INCREMENT
    (89) increment -> . VARIABLE DECREMENT
    (90) increment -> . VARIABLE DECREMENT PUNTOYCOMA
    (91) increment -> . VARIABLE PLUS_ASSIGN valor
    (92) increment -> . VARIABLE MINUS_ASSIGN valor
    (93) increment -> . empty
    (94) increment -> . VARIABLE INCREMENT PUNTOYCOMA
    (95) empty -> .

    VARIABLE        shift and go to state 287
    RPAREN          reduce using rule 95 (empty -> .)

    increment                      shift and go to state 286
    empty                          shift and go to state 41

state 266

    (120) funcion -> FUNCTION ID LPAREN RPAREN LLLAVE instrucciones . RLLAVE
    (5) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) instruccion -> . expresiones
    (15) instruccion -> . increment
    (16) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (19) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (20) imprimir -> . ECHO valor PUNTOYCOMA
    (21) imprimir -> . ECHO concatenar PUNTOYCOMA
    (22) imprimir -> . ECHO valor COMA VARIABLE valor PUNTOYCOMA
    (34) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA
    (36) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (37) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (38) indexacion -> . ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (39) estructurasControl -> . while
    (40) estructurasControl -> . if
    (41) estructurasControl -> . else
    (42) estructurasControl -> . for_statement
    (63) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (64) asignacion -> . VARIABLE IGUAL ARRAY PUNTOYCOMA
    (65) asignacion -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (96) estructurasDatos -> . array
    (97) estructurasDatos -> . lista
    (98) estructurasDatos -> . diccionario
    (116) funciones -> . funcion
    (117) funciones -> . funcioninbuilt
    (118) funciones -> . funcion_anonima
    (119) funciones -> . arrow_function
    (66) expresiones -> . VARIABLE IGUAL valor operadorAritmetico valor PUNTOYCOMA
    (67) expresiones -> . VARIABLE IGUAL valor operadorAritmetico operacion
    (88) increment -> . VARIABLE INCREMENT
    (89) increment -> . VARIABLE DECREMENT
    (90) increment -> . VARIABLE DECREMENT PUNTOYCOMA
    (91) increment -> . VARIABLE PLUS_ASSIGN valor
    (92) increment -> . VARIABLE MINUS_ASSIGN valor
    (93) increment -> . empty
    (94) increment -> . VARIABLE INCREMENT PUNTOYCOMA
    (77) while -> . WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE
    (43) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (44) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (76) else -> . ELSE LLLAVE instrucciones RLLAVE
    (85) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (99) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (100) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (101) array -> . VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA
    (102) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (103) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (110) lista -> . LBRACKET RBRACKET
    (111) lista -> . LBRACKET elementos RBRACKET
    (112) diccionario -> . LBRACE pares RBRACE
    (120) funcion -> . FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE
    (121) funcion -> . FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE
    (122) funcioninbuilt -> . VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA
    (123) funcioninbuilt -> . VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA
    (136) funcion_anonima -> . VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (141) arrow_function -> . VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA
    (95) empty -> .

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINT_R resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
    RLLAVE          shift and go to state 288
    PRINT           shift and go to state 17
    PRINT_R         shift and go to state 18
    ECHO            shift and go to state 19
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    FOR             shift and go to state 36
    LBRACKET        shift and go to state 21
    LBRACE          shift and go to state 37
    FUNCTION        shift and go to state 38

  ! RLLAVE          [ reduce using rule 95 (empty -> .) ]
  ! PRINT           [ reduce using rule 95 (empty -> .) ]
  ! PRINT_R         [ reduce using rule 95 (empty -> .) ]
  ! ECHO            [ reduce using rule 95 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 95 (empty -> .) ]
  ! WHILE           [ reduce using rule 95 (empty -> .) ]
  ! IF              [ reduce using rule 95 (empty -> .) ]
  ! ELSE            [ reduce using rule 95 (empty -> .) ]
  ! FOR             [ reduce using rule 95 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 95 (empty -> .) ]
  ! LBRACE          [ reduce using rule 95 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 95 (empty -> .) ]

    instruccion                    shift and go to state 40
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    expresiones                    shift and go to state 15
    increment                      shift and go to state 16
    while                          shift and go to state 22
    if                             shift and go to state 23
    else                           shift and go to state 24
    for_statement                  shift and go to state 25
    array                          shift and go to state 26
    lista                          shift and go to state 27
    diccionario                    shift and go to state 28
    funcion                        shift and go to state 29
    funcioninbuilt                 shift and go to state 30
    funcion_anonima                shift and go to state 31
    arrow_function                 shift and go to state 32
    empty                          shift and go to state 41

state 267

    (121) funcion -> FUNCTION ID LPAREN parametros RPAREN LLLAVE . instrucciones RLLAVE
    (4) instrucciones -> . instruccion
    (5) instrucciones -> . instrucciones instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) instruccion -> . expresiones
    (15) instruccion -> . increment
    (16) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (19) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (20) imprimir -> . ECHO valor PUNTOYCOMA
    (21) imprimir -> . ECHO concatenar PUNTOYCOMA
    (22) imprimir -> . ECHO valor COMA VARIABLE valor PUNTOYCOMA
    (34) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA
    (36) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (37) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (38) indexacion -> . ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (39) estructurasControl -> . while
    (40) estructurasControl -> . if
    (41) estructurasControl -> . else
    (42) estructurasControl -> . for_statement
    (63) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (64) asignacion -> . VARIABLE IGUAL ARRAY PUNTOYCOMA
    (65) asignacion -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (96) estructurasDatos -> . array
    (97) estructurasDatos -> . lista
    (98) estructurasDatos -> . diccionario
    (116) funciones -> . funcion
    (117) funciones -> . funcioninbuilt
    (118) funciones -> . funcion_anonima
    (119) funciones -> . arrow_function
    (66) expresiones -> . VARIABLE IGUAL valor operadorAritmetico valor PUNTOYCOMA
    (67) expresiones -> . VARIABLE IGUAL valor operadorAritmetico operacion
    (88) increment -> . VARIABLE INCREMENT
    (89) increment -> . VARIABLE DECREMENT
    (90) increment -> . VARIABLE DECREMENT PUNTOYCOMA
    (91) increment -> . VARIABLE PLUS_ASSIGN valor
    (92) increment -> . VARIABLE MINUS_ASSIGN valor
    (93) increment -> . empty
    (94) increment -> . VARIABLE INCREMENT PUNTOYCOMA
    (77) while -> . WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE
    (43) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (44) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (76) else -> . ELSE LLLAVE instrucciones RLLAVE
    (85) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (99) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (100) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (101) array -> . VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA
    (102) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (103) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (110) lista -> . LBRACKET RBRACKET
    (111) lista -> . LBRACKET elementos RBRACKET
    (112) diccionario -> . LBRACE pares RBRACE
    (120) funcion -> . FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE
    (121) funcion -> . FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE
    (122) funcioninbuilt -> . VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA
    (123) funcioninbuilt -> . VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA
    (136) funcion_anonima -> . VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (141) arrow_function -> . VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA
    (95) empty -> .

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINT_R resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
    PRINT           shift and go to state 17
    PRINT_R         shift and go to state 18
    ECHO            shift and go to state 19
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    FOR             shift and go to state 36
    LBRACKET        shift and go to state 21
    LBRACE          shift and go to state 37
    FUNCTION        shift and go to state 38
    RLLAVE          reduce using rule 95 (empty -> .)

  ! PRINT           [ reduce using rule 95 (empty -> .) ]
  ! PRINT_R         [ reduce using rule 95 (empty -> .) ]
  ! ECHO            [ reduce using rule 95 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 95 (empty -> .) ]
  ! WHILE           [ reduce using rule 95 (empty -> .) ]
  ! IF              [ reduce using rule 95 (empty -> .) ]
  ! ELSE            [ reduce using rule 95 (empty -> .) ]
  ! FOR             [ reduce using rule 95 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 95 (empty -> .) ]
  ! LBRACE          [ reduce using rule 95 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 95 (empty -> .) ]

    instrucciones                  shift and go to state 289
    instruccion                    shift and go to state 6
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    expresiones                    shift and go to state 15
    increment                      shift and go to state 16
    while                          shift and go to state 22
    if                             shift and go to state 23
    else                           shift and go to state 24
    for_statement                  shift and go to state 25
    array                          shift and go to state 26
    lista                          shift and go to state 27
    diccionario                    shift and go to state 28
    funcion                        shift and go to state 29
    funcioninbuilt                 shift and go to state 30
    funcion_anonima                shift and go to state 31
    arrow_function                 shift and go to state 32
    empty                          shift and go to state 41

state 268

    (138) parametros -> parametros COMA STRING .

    RPAREN          reduce using rule 138 (parametros -> parametros COMA STRING .)
    COMA            reduce using rule 138 (parametros -> parametros COMA STRING .)


state 269

    (140) parametros -> parametros COMA VARIABLE .

    RPAREN          reduce using rule 140 (parametros -> parametros COMA VARIABLE .)
    COMA            reduce using rule 140 (parametros -> parametros COMA VARIABLE .)


state 270

    (34) solicitud_datos -> VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA .

    PRINT           reduce using rule 34 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    PRINT_R         reduce using rule 34 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    ECHO            reduce using rule 34 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    VARIABLE        reduce using rule 34 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    WHILE           reduce using rule 34 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    IF              reduce using rule 34 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    ELSE            reduce using rule 34 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    FOR             reduce using rule 34 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    LBRACKET        reduce using rule 34 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    LBRACE          reduce using rule 34 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    FUNCTION        reduce using rule 34 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    PHP_END         reduce using rule 34 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    RLLAVE          reduce using rule 34 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA .)


state 271

    (36) input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .

    PRINT           reduce using rule 36 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    PRINT_R         reduce using rule 36 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    ECHO            reduce using rule 36 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    VARIABLE        reduce using rule 36 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    WHILE           reduce using rule 36 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    IF              reduce using rule 36 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    ELSE            reduce using rule 36 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    FOR             reduce using rule 36 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    LBRACKET        reduce using rule 36 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    LBRACE          reduce using rule 36 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    FUNCTION        reduce using rule 36 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    PHP_END         reduce using rule 36 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    RLLAVE          reduce using rule 36 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)


state 272

    (68) operacion -> valor operadorAritmetico valor . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 290


state 273

    (69) operacion -> operacion operadorAritmetico operacion .
    (69) operacion -> operacion . operadorAritmetico operacion
    (70) operadorAritmetico -> . PLUS
    (71) operadorAritmetico -> . MINUS
    (72) operadorAritmetico -> . TIMES
    (73) operadorAritmetico -> . DIVIDE
    (74) operadorAritmetico -> . MOD
    (75) operadorAritmetico -> . POT

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for POT resolved as shift
    PRINT           reduce using rule 69 (operacion -> operacion operadorAritmetico operacion .)
    PRINT_R         reduce using rule 69 (operacion -> operacion operadorAritmetico operacion .)
    ECHO            reduce using rule 69 (operacion -> operacion operadorAritmetico operacion .)
    VARIABLE        reduce using rule 69 (operacion -> operacion operadorAritmetico operacion .)
    WHILE           reduce using rule 69 (operacion -> operacion operadorAritmetico operacion .)
    IF              reduce using rule 69 (operacion -> operacion operadorAritmetico operacion .)
    ELSE            reduce using rule 69 (operacion -> operacion operadorAritmetico operacion .)
    FOR             reduce using rule 69 (operacion -> operacion operadorAritmetico operacion .)
    LBRACKET        reduce using rule 69 (operacion -> operacion operadorAritmetico operacion .)
    LBRACE          reduce using rule 69 (operacion -> operacion operadorAritmetico operacion .)
    FUNCTION        reduce using rule 69 (operacion -> operacion operadorAritmetico operacion .)
    PHP_END         reduce using rule 69 (operacion -> operacion operadorAritmetico operacion .)
    RLLAVE          reduce using rule 69 (operacion -> operacion operadorAritmetico operacion .)
    PLUS            shift and go to state 151
    MINUS           shift and go to state 152
    TIMES           shift and go to state 153
    DIVIDE          shift and go to state 154
    MOD             shift and go to state 155
    POT             shift and go to state 156

  ! PLUS            [ reduce using rule 69 (operacion -> operacion operadorAritmetico operacion .) ]
  ! MINUS           [ reduce using rule 69 (operacion -> operacion operadorAritmetico operacion .) ]
  ! TIMES           [ reduce using rule 69 (operacion -> operacion operadorAritmetico operacion .) ]
  ! DIVIDE          [ reduce using rule 69 (operacion -> operacion operadorAritmetico operacion .) ]
  ! MOD             [ reduce using rule 69 (operacion -> operacion operadorAritmetico operacion .) ]
  ! POT             [ reduce using rule 69 (operacion -> operacion operadorAritmetico operacion .) ]

    operadorAritmetico             shift and go to state 250

state 274

    (65) asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .
    (100) array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .

  ! reduce/reduce conflict for PRINT resolved using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
  ! reduce/reduce conflict for PRINT_R resolved using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
  ! reduce/reduce conflict for ECHO resolved using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
  ! reduce/reduce conflict for LBRACE resolved using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
  ! reduce/reduce conflict for PHP_END resolved using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    PRINT           reduce using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    PRINT_R         reduce using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    ECHO            reduce using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    VARIABLE        reduce using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    WHILE           reduce using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    IF              reduce using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    ELSE            reduce using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    FOR             reduce using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    LBRACKET        reduce using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    LBRACE          reduce using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    FUNCTION        reduce using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    PHP_END         reduce using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    RLLAVE          reduce using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)

  ! PRINT           [ reduce using rule 100 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .) ]
  ! PRINT_R         [ reduce using rule 100 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .) ]
  ! ECHO            [ reduce using rule 100 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .) ]
  ! VARIABLE        [ reduce using rule 100 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 100 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 100 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 100 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 100 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .) ]
  ! LBRACKET        [ reduce using rule 100 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .) ]
  ! LBRACE          [ reduce using rule 100 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .) ]
  ! FUNCTION        [ reduce using rule 100 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .) ]
  ! PHP_END         [ reduce using rule 100 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .) ]
  ! RLLAVE          [ reduce using rule 100 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .) ]


state 275

    (101) array -> VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA .

    PRINT           reduce using rule 101 (array -> VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA .)
    PRINT_R         reduce using rule 101 (array -> VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA .)
    ECHO            reduce using rule 101 (array -> VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA .)
    VARIABLE        reduce using rule 101 (array -> VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA .)
    WHILE           reduce using rule 101 (array -> VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA .)
    IF              reduce using rule 101 (array -> VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA .)
    ELSE            reduce using rule 101 (array -> VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA .)
    FOR             reduce using rule 101 (array -> VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA .)
    LBRACKET        reduce using rule 101 (array -> VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA .)
    LBRACE          reduce using rule 101 (array -> VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA .)
    FUNCTION        reduce using rule 101 (array -> VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA .)
    PHP_END         reduce using rule 101 (array -> VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA .)
    RLLAVE          reduce using rule 101 (array -> VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA .)


state 276

    (134) operaciones -> VARIABLE IGUAL operaciones .

    RPAREN          reduce using rule 134 (operaciones -> VARIABLE IGUAL operaciones .)


state 277

    (122) funcioninbuilt -> VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA .

    PRINT           reduce using rule 122 (funcioninbuilt -> VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA .)
    PRINT_R         reduce using rule 122 (funcioninbuilt -> VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA .)
    ECHO            reduce using rule 122 (funcioninbuilt -> VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA .)
    VARIABLE        reduce using rule 122 (funcioninbuilt -> VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA .)
    WHILE           reduce using rule 122 (funcioninbuilt -> VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA .)
    IF              reduce using rule 122 (funcioninbuilt -> VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA .)
    ELSE            reduce using rule 122 (funcioninbuilt -> VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA .)
    FOR             reduce using rule 122 (funcioninbuilt -> VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA .)
    LBRACKET        reduce using rule 122 (funcioninbuilt -> VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA .)
    LBRACE          reduce using rule 122 (funcioninbuilt -> VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA .)
    FUNCTION        reduce using rule 122 (funcioninbuilt -> VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA .)
    PHP_END         reduce using rule 122 (funcioninbuilt -> VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA .)
    RLLAVE          reduce using rule 122 (funcioninbuilt -> VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA .)


state 278

    (69) operacion -> operacion operadorAritmetico operacion .
    (131) operaciones -> operacion .
    (132) operaciones -> operacion . PUNTOYCOMA
    (133) operaciones -> operacion . operadorAritmetico operaciones
    (69) operacion -> operacion . operadorAritmetico operacion
    (70) operadorAritmetico -> . PLUS
    (71) operadorAritmetico -> . MINUS
    (72) operadorAritmetico -> . TIMES
    (73) operadorAritmetico -> . DIVIDE
    (74) operadorAritmetico -> . MOD
    (75) operadorAritmetico -> . POT

  ! reduce/reduce conflict for RPAREN resolved using rule 69 (operacion -> operacion operadorAritmetico operacion .)
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for POT resolved as shift
    RPAREN          reduce using rule 69 (operacion -> operacion operadorAritmetico operacion .)
    PUNTOYCOMA      shift and go to state 257
    PLUS            shift and go to state 151
    MINUS           shift and go to state 152
    TIMES           shift and go to state 153
    DIVIDE          shift and go to state 154
    MOD             shift and go to state 155
    POT             shift and go to state 156

  ! PUNTOYCOMA      [ reduce using rule 69 (operacion -> operacion operadorAritmetico operacion .) ]
  ! PLUS            [ reduce using rule 69 (operacion -> operacion operadorAritmetico operacion .) ]
  ! MINUS           [ reduce using rule 69 (operacion -> operacion operadorAritmetico operacion .) ]
  ! TIMES           [ reduce using rule 69 (operacion -> operacion operadorAritmetico operacion .) ]
  ! DIVIDE          [ reduce using rule 69 (operacion -> operacion operadorAritmetico operacion .) ]
  ! MOD             [ reduce using rule 69 (operacion -> operacion operadorAritmetico operacion .) ]
  ! POT             [ reduce using rule 69 (operacion -> operacion operadorAritmetico operacion .) ]
  ! RPAREN          [ reduce using rule 131 (operaciones -> operacion .) ]

    operadorAritmetico             shift and go to state 258

state 279

    (133) operaciones -> operacion operadorAritmetico operaciones .

    RPAREN          reduce using rule 133 (operaciones -> operacion operadorAritmetico operaciones .)


state 280

    (136) funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE . instrucciones RLLAVE PUNTOYCOMA
    (4) instrucciones -> . instruccion
    (5) instrucciones -> . instrucciones instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) instruccion -> . expresiones
    (15) instruccion -> . increment
    (16) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (19) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (20) imprimir -> . ECHO valor PUNTOYCOMA
    (21) imprimir -> . ECHO concatenar PUNTOYCOMA
    (22) imprimir -> . ECHO valor COMA VARIABLE valor PUNTOYCOMA
    (34) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA
    (36) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (37) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (38) indexacion -> . ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (39) estructurasControl -> . while
    (40) estructurasControl -> . if
    (41) estructurasControl -> . else
    (42) estructurasControl -> . for_statement
    (63) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (64) asignacion -> . VARIABLE IGUAL ARRAY PUNTOYCOMA
    (65) asignacion -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (96) estructurasDatos -> . array
    (97) estructurasDatos -> . lista
    (98) estructurasDatos -> . diccionario
    (116) funciones -> . funcion
    (117) funciones -> . funcioninbuilt
    (118) funciones -> . funcion_anonima
    (119) funciones -> . arrow_function
    (66) expresiones -> . VARIABLE IGUAL valor operadorAritmetico valor PUNTOYCOMA
    (67) expresiones -> . VARIABLE IGUAL valor operadorAritmetico operacion
    (88) increment -> . VARIABLE INCREMENT
    (89) increment -> . VARIABLE DECREMENT
    (90) increment -> . VARIABLE DECREMENT PUNTOYCOMA
    (91) increment -> . VARIABLE PLUS_ASSIGN valor
    (92) increment -> . VARIABLE MINUS_ASSIGN valor
    (93) increment -> . empty
    (94) increment -> . VARIABLE INCREMENT PUNTOYCOMA
    (77) while -> . WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE
    (43) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (44) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (76) else -> . ELSE LLLAVE instrucciones RLLAVE
    (85) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (99) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (100) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (101) array -> . VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA
    (102) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (103) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (110) lista -> . LBRACKET RBRACKET
    (111) lista -> . LBRACKET elementos RBRACKET
    (112) diccionario -> . LBRACE pares RBRACE
    (120) funcion -> . FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE
    (121) funcion -> . FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE
    (122) funcioninbuilt -> . VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA
    (123) funcioninbuilt -> . VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA
    (136) funcion_anonima -> . VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (141) arrow_function -> . VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA
    (95) empty -> .

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINT_R resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
    PRINT           shift and go to state 17
    PRINT_R         shift and go to state 18
    ECHO            shift and go to state 19
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    FOR             shift and go to state 36
    LBRACKET        shift and go to state 21
    LBRACE          shift and go to state 37
    FUNCTION        shift and go to state 38
    RLLAVE          reduce using rule 95 (empty -> .)

  ! PRINT           [ reduce using rule 95 (empty -> .) ]
  ! PRINT_R         [ reduce using rule 95 (empty -> .) ]
  ! ECHO            [ reduce using rule 95 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 95 (empty -> .) ]
  ! WHILE           [ reduce using rule 95 (empty -> .) ]
  ! IF              [ reduce using rule 95 (empty -> .) ]
  ! ELSE            [ reduce using rule 95 (empty -> .) ]
  ! FOR             [ reduce using rule 95 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 95 (empty -> .) ]
  ! LBRACE          [ reduce using rule 95 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 95 (empty -> .) ]

    instrucciones                  shift and go to state 291
    instruccion                    shift and go to state 6
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    expresiones                    shift and go to state 15
    increment                      shift and go to state 16
    while                          shift and go to state 22
    if                             shift and go to state 23
    else                           shift and go to state 24
    for_statement                  shift and go to state 25
    array                          shift and go to state 26
    lista                          shift and go to state 27
    diccionario                    shift and go to state 28
    funcion                        shift and go to state 29
    funcioninbuilt                 shift and go to state 30
    funcion_anonima                shift and go to state 31
    arrow_function                 shift and go to state 32
    empty                          shift and go to state 41

state 281

    (143) parameter_list -> VARIABLE COMA parameter_list .

    RPAREN          reduce using rule 143 (parameter_list -> VARIABLE COMA parameter_list .)


state 282

    (141) arrow_function -> VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW . expression PUNTOYCOMA
    (144) expression -> . VARIABLE
    (145) expression -> . NUMBER
    (146) expression -> . VARIABLE TIMES VARIABLE
    (147) expression -> . VARIABLE PLUS VARIABLE
    (148) expression -> . VARIABLE MINUS VARIABLE
    (149) expression -> . VARIABLE DIVIDE VARIABLE
    (150) expression -> . VARIABLE TIMES NUMBER
    (151) expression -> . VARIABLE PLUS NUMBER
    (152) expression -> . VARIABLE MINUS NUMBER
    (153) expression -> . VARIABLE DIVIDE NUMBER
    (154) expression -> . VARIABLE MOD VARIABLE

    VARIABLE        shift and go to state 292
    NUMBER          shift and go to state 294

    expression                     shift and go to state 293

state 283

    (77) while -> WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE .

    PRINT           reduce using rule 77 (while -> WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE .)
    PRINT_R         reduce using rule 77 (while -> WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE .)
    ECHO            reduce using rule 77 (while -> WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE .)
    VARIABLE        reduce using rule 77 (while -> WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE .)
    WHILE           reduce using rule 77 (while -> WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE .)
    IF              reduce using rule 77 (while -> WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE .)
    ELSE            reduce using rule 77 (while -> WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE .)
    FOR             reduce using rule 77 (while -> WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE .)
    LBRACKET        reduce using rule 77 (while -> WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE .)
    LBRACE          reduce using rule 77 (while -> WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE .)
    FUNCTION        reduce using rule 77 (while -> WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE .)
    PHP_END         reduce using rule 77 (while -> WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE .)
    RLLAVE          reduce using rule 77 (while -> WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE .)


state 284

    (43) if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .

    PRINT           reduce using rule 43 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    PRINT_R         reduce using rule 43 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    ECHO            reduce using rule 43 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    VARIABLE        reduce using rule 43 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    WHILE           reduce using rule 43 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    IF              reduce using rule 43 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    ELSE            reduce using rule 43 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    FOR             reduce using rule 43 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    LBRACKET        reduce using rule 43 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    LBRACE          reduce using rule 43 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    FUNCTION        reduce using rule 43 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    PHP_END         reduce using rule 43 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    RLLAVE          reduce using rule 43 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)


state 285

    (44) if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .

    PRINT           reduce using rule 44 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    PRINT_R         reduce using rule 44 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    ECHO            reduce using rule 44 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    VARIABLE        reduce using rule 44 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    WHILE           reduce using rule 44 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    IF              reduce using rule 44 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    ELSE            reduce using rule 44 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    FOR             reduce using rule 44 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    LBRACKET        reduce using rule 44 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    LBRACE          reduce using rule 44 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    FUNCTION        reduce using rule 44 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    PHP_END         reduce using rule 44 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    RLLAVE          reduce using rule 44 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)


state 286

    (85) for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment . RPAREN LLLAVE instrucciones RLLAVE

    RPAREN          shift and go to state 295


state 287

    (88) increment -> VARIABLE . INCREMENT
    (89) increment -> VARIABLE . DECREMENT
    (90) increment -> VARIABLE . DECREMENT PUNTOYCOMA
    (91) increment -> VARIABLE . PLUS_ASSIGN valor
    (92) increment -> VARIABLE . MINUS_ASSIGN valor
    (94) increment -> VARIABLE . INCREMENT PUNTOYCOMA

    INCREMENT       shift and go to state 55
    DECREMENT       shift and go to state 56
    PLUS_ASSIGN     shift and go to state 57
    MINUS_ASSIGN    shift and go to state 58


state 288

    (120) funcion -> FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE .

    PRINT           reduce using rule 120 (funcion -> FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE .)
    PRINT_R         reduce using rule 120 (funcion -> FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE .)
    ECHO            reduce using rule 120 (funcion -> FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE .)
    VARIABLE        reduce using rule 120 (funcion -> FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE .)
    WHILE           reduce using rule 120 (funcion -> FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE .)
    IF              reduce using rule 120 (funcion -> FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE .)
    ELSE            reduce using rule 120 (funcion -> FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE .)
    FOR             reduce using rule 120 (funcion -> FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE .)
    LBRACKET        reduce using rule 120 (funcion -> FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE .)
    LBRACE          reduce using rule 120 (funcion -> FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE .)
    FUNCTION        reduce using rule 120 (funcion -> FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE .)
    PHP_END         reduce using rule 120 (funcion -> FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE .)
    RLLAVE          reduce using rule 120 (funcion -> FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE .)


state 289

    (121) funcion -> FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones . RLLAVE
    (5) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) instruccion -> . expresiones
    (15) instruccion -> . increment
    (16) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (19) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (20) imprimir -> . ECHO valor PUNTOYCOMA
    (21) imprimir -> . ECHO concatenar PUNTOYCOMA
    (22) imprimir -> . ECHO valor COMA VARIABLE valor PUNTOYCOMA
    (34) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA
    (36) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (37) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (38) indexacion -> . ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (39) estructurasControl -> . while
    (40) estructurasControl -> . if
    (41) estructurasControl -> . else
    (42) estructurasControl -> . for_statement
    (63) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (64) asignacion -> . VARIABLE IGUAL ARRAY PUNTOYCOMA
    (65) asignacion -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (96) estructurasDatos -> . array
    (97) estructurasDatos -> . lista
    (98) estructurasDatos -> . diccionario
    (116) funciones -> . funcion
    (117) funciones -> . funcioninbuilt
    (118) funciones -> . funcion_anonima
    (119) funciones -> . arrow_function
    (66) expresiones -> . VARIABLE IGUAL valor operadorAritmetico valor PUNTOYCOMA
    (67) expresiones -> . VARIABLE IGUAL valor operadorAritmetico operacion
    (88) increment -> . VARIABLE INCREMENT
    (89) increment -> . VARIABLE DECREMENT
    (90) increment -> . VARIABLE DECREMENT PUNTOYCOMA
    (91) increment -> . VARIABLE PLUS_ASSIGN valor
    (92) increment -> . VARIABLE MINUS_ASSIGN valor
    (93) increment -> . empty
    (94) increment -> . VARIABLE INCREMENT PUNTOYCOMA
    (77) while -> . WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE
    (43) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (44) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (76) else -> . ELSE LLLAVE instrucciones RLLAVE
    (85) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (99) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (100) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (101) array -> . VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA
    (102) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (103) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (110) lista -> . LBRACKET RBRACKET
    (111) lista -> . LBRACKET elementos RBRACKET
    (112) diccionario -> . LBRACE pares RBRACE
    (120) funcion -> . FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE
    (121) funcion -> . FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE
    (122) funcioninbuilt -> . VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA
    (123) funcioninbuilt -> . VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA
    (136) funcion_anonima -> . VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (141) arrow_function -> . VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA
    (95) empty -> .

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINT_R resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
    RLLAVE          shift and go to state 296
    PRINT           shift and go to state 17
    PRINT_R         shift and go to state 18
    ECHO            shift and go to state 19
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    FOR             shift and go to state 36
    LBRACKET        shift and go to state 21
    LBRACE          shift and go to state 37
    FUNCTION        shift and go to state 38

  ! RLLAVE          [ reduce using rule 95 (empty -> .) ]
  ! PRINT           [ reduce using rule 95 (empty -> .) ]
  ! PRINT_R         [ reduce using rule 95 (empty -> .) ]
  ! ECHO            [ reduce using rule 95 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 95 (empty -> .) ]
  ! WHILE           [ reduce using rule 95 (empty -> .) ]
  ! IF              [ reduce using rule 95 (empty -> .) ]
  ! ELSE            [ reduce using rule 95 (empty -> .) ]
  ! FOR             [ reduce using rule 95 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 95 (empty -> .) ]
  ! LBRACE          [ reduce using rule 95 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 95 (empty -> .) ]

    instruccion                    shift and go to state 40
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    expresiones                    shift and go to state 15
    increment                      shift and go to state 16
    while                          shift and go to state 22
    if                             shift and go to state 23
    else                           shift and go to state 24
    for_statement                  shift and go to state 25
    array                          shift and go to state 26
    lista                          shift and go to state 27
    diccionario                    shift and go to state 28
    funcion                        shift and go to state 29
    funcioninbuilt                 shift and go to state 30
    funcion_anonima                shift and go to state 31
    arrow_function                 shift and go to state 32
    empty                          shift and go to state 41

state 290

    (68) operacion -> valor operadorAritmetico valor PUNTOYCOMA .

    PLUS            reduce using rule 68 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    MINUS           reduce using rule 68 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    TIMES           reduce using rule 68 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    DIVIDE          reduce using rule 68 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    MOD             reduce using rule 68 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    POT             reduce using rule 68 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    PRINT           reduce using rule 68 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    PRINT_R         reduce using rule 68 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    ECHO            reduce using rule 68 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    VARIABLE        reduce using rule 68 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    WHILE           reduce using rule 68 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    IF              reduce using rule 68 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    ELSE            reduce using rule 68 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    FOR             reduce using rule 68 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    LBRACKET        reduce using rule 68 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    LBRACE          reduce using rule 68 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    FUNCTION        reduce using rule 68 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    PHP_END         reduce using rule 68 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    RLLAVE          reduce using rule 68 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 68 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    RPAREN          reduce using rule 68 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)


state 291

    (136) funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones . RLLAVE PUNTOYCOMA
    (5) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) instruccion -> . expresiones
    (15) instruccion -> . increment
    (16) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (19) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (20) imprimir -> . ECHO valor PUNTOYCOMA
    (21) imprimir -> . ECHO concatenar PUNTOYCOMA
    (22) imprimir -> . ECHO valor COMA VARIABLE valor PUNTOYCOMA
    (34) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA
    (36) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (37) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (38) indexacion -> . ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (39) estructurasControl -> . while
    (40) estructurasControl -> . if
    (41) estructurasControl -> . else
    (42) estructurasControl -> . for_statement
    (63) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (64) asignacion -> . VARIABLE IGUAL ARRAY PUNTOYCOMA
    (65) asignacion -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (96) estructurasDatos -> . array
    (97) estructurasDatos -> . lista
    (98) estructurasDatos -> . diccionario
    (116) funciones -> . funcion
    (117) funciones -> . funcioninbuilt
    (118) funciones -> . funcion_anonima
    (119) funciones -> . arrow_function
    (66) expresiones -> . VARIABLE IGUAL valor operadorAritmetico valor PUNTOYCOMA
    (67) expresiones -> . VARIABLE IGUAL valor operadorAritmetico operacion
    (88) increment -> . VARIABLE INCREMENT
    (89) increment -> . VARIABLE DECREMENT
    (90) increment -> . VARIABLE DECREMENT PUNTOYCOMA
    (91) increment -> . VARIABLE PLUS_ASSIGN valor
    (92) increment -> . VARIABLE MINUS_ASSIGN valor
    (93) increment -> . empty
    (94) increment -> . VARIABLE INCREMENT PUNTOYCOMA
    (77) while -> . WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE
    (43) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (44) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (76) else -> . ELSE LLLAVE instrucciones RLLAVE
    (85) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (99) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (100) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (101) array -> . VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA
    (102) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (103) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (110) lista -> . LBRACKET RBRACKET
    (111) lista -> . LBRACKET elementos RBRACKET
    (112) diccionario -> . LBRACE pares RBRACE
    (120) funcion -> . FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE
    (121) funcion -> . FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE
    (122) funcioninbuilt -> . VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA
    (123) funcioninbuilt -> . VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA
    (136) funcion_anonima -> . VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (141) arrow_function -> . VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA
    (95) empty -> .

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINT_R resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
    RLLAVE          shift and go to state 297
    PRINT           shift and go to state 17
    PRINT_R         shift and go to state 18
    ECHO            shift and go to state 19
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    FOR             shift and go to state 36
    LBRACKET        shift and go to state 21
    LBRACE          shift and go to state 37
    FUNCTION        shift and go to state 38

  ! RLLAVE          [ reduce using rule 95 (empty -> .) ]
  ! PRINT           [ reduce using rule 95 (empty -> .) ]
  ! PRINT_R         [ reduce using rule 95 (empty -> .) ]
  ! ECHO            [ reduce using rule 95 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 95 (empty -> .) ]
  ! WHILE           [ reduce using rule 95 (empty -> .) ]
  ! IF              [ reduce using rule 95 (empty -> .) ]
  ! ELSE            [ reduce using rule 95 (empty -> .) ]
  ! FOR             [ reduce using rule 95 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 95 (empty -> .) ]
  ! LBRACE          [ reduce using rule 95 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 95 (empty -> .) ]

    instruccion                    shift and go to state 40
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    expresiones                    shift and go to state 15
    increment                      shift and go to state 16
    while                          shift and go to state 22
    if                             shift and go to state 23
    else                           shift and go to state 24
    for_statement                  shift and go to state 25
    array                          shift and go to state 26
    lista                          shift and go to state 27
    diccionario                    shift and go to state 28
    funcion                        shift and go to state 29
    funcioninbuilt                 shift and go to state 30
    funcion_anonima                shift and go to state 31
    arrow_function                 shift and go to state 32
    empty                          shift and go to state 41

state 292

    (144) expression -> VARIABLE .
    (146) expression -> VARIABLE . TIMES VARIABLE
    (147) expression -> VARIABLE . PLUS VARIABLE
    (148) expression -> VARIABLE . MINUS VARIABLE
    (149) expression -> VARIABLE . DIVIDE VARIABLE
    (150) expression -> VARIABLE . TIMES NUMBER
    (151) expression -> VARIABLE . PLUS NUMBER
    (152) expression -> VARIABLE . MINUS NUMBER
    (153) expression -> VARIABLE . DIVIDE NUMBER
    (154) expression -> VARIABLE . MOD VARIABLE

    PUNTOYCOMA      reduce using rule 144 (expression -> VARIABLE .)
    TIMES           shift and go to state 91
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    DIVIDE          shift and go to state 94
    MOD             shift and go to state 95


state 293

    (141) arrow_function -> VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 298


state 294

    (145) expression -> NUMBER .

    PUNTOYCOMA      reduce using rule 145 (expression -> NUMBER .)


state 295

    (85) for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN . LLLAVE instrucciones RLLAVE

    LLLAVE          shift and go to state 299


state 296

    (121) funcion -> FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE .

    PRINT           reduce using rule 121 (funcion -> FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE .)
    PRINT_R         reduce using rule 121 (funcion -> FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE .)
    ECHO            reduce using rule 121 (funcion -> FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE .)
    VARIABLE        reduce using rule 121 (funcion -> FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE .)
    WHILE           reduce using rule 121 (funcion -> FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE .)
    IF              reduce using rule 121 (funcion -> FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE .)
    ELSE            reduce using rule 121 (funcion -> FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE .)
    FOR             reduce using rule 121 (funcion -> FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE .)
    LBRACKET        reduce using rule 121 (funcion -> FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE .)
    LBRACE          reduce using rule 121 (funcion -> FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE .)
    FUNCTION        reduce using rule 121 (funcion -> FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE .)
    PHP_END         reduce using rule 121 (funcion -> FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE .)
    RLLAVE          reduce using rule 121 (funcion -> FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE .)


state 297

    (136) funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 300


state 298

    (141) arrow_function -> VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA .

    PRINT           reduce using rule 141 (arrow_function -> VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA .)
    PRINT_R         reduce using rule 141 (arrow_function -> VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA .)
    ECHO            reduce using rule 141 (arrow_function -> VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA .)
    VARIABLE        reduce using rule 141 (arrow_function -> VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA .)
    WHILE           reduce using rule 141 (arrow_function -> VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA .)
    IF              reduce using rule 141 (arrow_function -> VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA .)
    ELSE            reduce using rule 141 (arrow_function -> VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA .)
    FOR             reduce using rule 141 (arrow_function -> VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA .)
    LBRACKET        reduce using rule 141 (arrow_function -> VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA .)
    LBRACE          reduce using rule 141 (arrow_function -> VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA .)
    FUNCTION        reduce using rule 141 (arrow_function -> VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA .)
    PHP_END         reduce using rule 141 (arrow_function -> VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA .)
    RLLAVE          reduce using rule 141 (arrow_function -> VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA .)


state 299

    (85) for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE . instrucciones RLLAVE
    (4) instrucciones -> . instruccion
    (5) instrucciones -> . instrucciones instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) instruccion -> . expresiones
    (15) instruccion -> . increment
    (16) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (19) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (20) imprimir -> . ECHO valor PUNTOYCOMA
    (21) imprimir -> . ECHO concatenar PUNTOYCOMA
    (22) imprimir -> . ECHO valor COMA VARIABLE valor PUNTOYCOMA
    (34) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA
    (36) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (37) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (38) indexacion -> . ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (39) estructurasControl -> . while
    (40) estructurasControl -> . if
    (41) estructurasControl -> . else
    (42) estructurasControl -> . for_statement
    (63) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (64) asignacion -> . VARIABLE IGUAL ARRAY PUNTOYCOMA
    (65) asignacion -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (96) estructurasDatos -> . array
    (97) estructurasDatos -> . lista
    (98) estructurasDatos -> . diccionario
    (116) funciones -> . funcion
    (117) funciones -> . funcioninbuilt
    (118) funciones -> . funcion_anonima
    (119) funciones -> . arrow_function
    (66) expresiones -> . VARIABLE IGUAL valor operadorAritmetico valor PUNTOYCOMA
    (67) expresiones -> . VARIABLE IGUAL valor operadorAritmetico operacion
    (88) increment -> . VARIABLE INCREMENT
    (89) increment -> . VARIABLE DECREMENT
    (90) increment -> . VARIABLE DECREMENT PUNTOYCOMA
    (91) increment -> . VARIABLE PLUS_ASSIGN valor
    (92) increment -> . VARIABLE MINUS_ASSIGN valor
    (93) increment -> . empty
    (94) increment -> . VARIABLE INCREMENT PUNTOYCOMA
    (77) while -> . WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE
    (43) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (44) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (76) else -> . ELSE LLLAVE instrucciones RLLAVE
    (85) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (99) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (100) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (101) array -> . VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA
    (102) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (103) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (110) lista -> . LBRACKET RBRACKET
    (111) lista -> . LBRACKET elementos RBRACKET
    (112) diccionario -> . LBRACE pares RBRACE
    (120) funcion -> . FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE
    (121) funcion -> . FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE
    (122) funcioninbuilt -> . VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA
    (123) funcioninbuilt -> . VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA
    (136) funcion_anonima -> . VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (141) arrow_function -> . VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA
    (95) empty -> .

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINT_R resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
    PRINT           shift and go to state 17
    PRINT_R         shift and go to state 18
    ECHO            shift and go to state 19
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    FOR             shift and go to state 36
    LBRACKET        shift and go to state 21
    LBRACE          shift and go to state 37
    FUNCTION        shift and go to state 38
    RLLAVE          reduce using rule 95 (empty -> .)

  ! PRINT           [ reduce using rule 95 (empty -> .) ]
  ! PRINT_R         [ reduce using rule 95 (empty -> .) ]
  ! ECHO            [ reduce using rule 95 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 95 (empty -> .) ]
  ! WHILE           [ reduce using rule 95 (empty -> .) ]
  ! IF              [ reduce using rule 95 (empty -> .) ]
  ! ELSE            [ reduce using rule 95 (empty -> .) ]
  ! FOR             [ reduce using rule 95 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 95 (empty -> .) ]
  ! LBRACE          [ reduce using rule 95 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 95 (empty -> .) ]

    increment                      shift and go to state 16
    instrucciones                  shift and go to state 301
    instruccion                    shift and go to state 6
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    expresiones                    shift and go to state 15
    while                          shift and go to state 22
    if                             shift and go to state 23
    else                           shift and go to state 24
    for_statement                  shift and go to state 25
    array                          shift and go to state 26
    lista                          shift and go to state 27
    diccionario                    shift and go to state 28
    funcion                        shift and go to state 29
    funcioninbuilt                 shift and go to state 30
    funcion_anonima                shift and go to state 31
    arrow_function                 shift and go to state 32
    empty                          shift and go to state 41

state 300

    (136) funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA .

    PRINT           reduce using rule 136 (funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA .)
    PRINT_R         reduce using rule 136 (funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA .)
    ECHO            reduce using rule 136 (funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA .)
    VARIABLE        reduce using rule 136 (funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA .)
    WHILE           reduce using rule 136 (funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA .)
    IF              reduce using rule 136 (funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA .)
    ELSE            reduce using rule 136 (funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA .)
    FOR             reduce using rule 136 (funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA .)
    LBRACKET        reduce using rule 136 (funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA .)
    LBRACE          reduce using rule 136 (funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA .)
    FUNCTION        reduce using rule 136 (funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA .)
    PHP_END         reduce using rule 136 (funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA .)
    RLLAVE          reduce using rule 136 (funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA .)


state 301

    (85) for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones . RLLAVE
    (5) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) instruccion -> . expresiones
    (15) instruccion -> . increment
    (16) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (19) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (20) imprimir -> . ECHO valor PUNTOYCOMA
    (21) imprimir -> . ECHO concatenar PUNTOYCOMA
    (22) imprimir -> . ECHO valor COMA VARIABLE valor PUNTOYCOMA
    (34) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA
    (36) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (37) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (38) indexacion -> . ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (39) estructurasControl -> . while
    (40) estructurasControl -> . if
    (41) estructurasControl -> . else
    (42) estructurasControl -> . for_statement
    (63) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (64) asignacion -> . VARIABLE IGUAL ARRAY PUNTOYCOMA
    (65) asignacion -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (96) estructurasDatos -> . array
    (97) estructurasDatos -> . lista
    (98) estructurasDatos -> . diccionario
    (116) funciones -> . funcion
    (117) funciones -> . funcioninbuilt
    (118) funciones -> . funcion_anonima
    (119) funciones -> . arrow_function
    (66) expresiones -> . VARIABLE IGUAL valor operadorAritmetico valor PUNTOYCOMA
    (67) expresiones -> . VARIABLE IGUAL valor operadorAritmetico operacion
    (88) increment -> . VARIABLE INCREMENT
    (89) increment -> . VARIABLE DECREMENT
    (90) increment -> . VARIABLE DECREMENT PUNTOYCOMA
    (91) increment -> . VARIABLE PLUS_ASSIGN valor
    (92) increment -> . VARIABLE MINUS_ASSIGN valor
    (93) increment -> . empty
    (94) increment -> . VARIABLE INCREMENT PUNTOYCOMA
    (77) while -> . WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE
    (43) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (44) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (76) else -> . ELSE LLLAVE instrucciones RLLAVE
    (85) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (99) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (100) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (101) array -> . VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA
    (102) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (103) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (110) lista -> . LBRACKET RBRACKET
    (111) lista -> . LBRACKET elementos RBRACKET
    (112) diccionario -> . LBRACE pares RBRACE
    (120) funcion -> . FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE
    (121) funcion -> . FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE
    (122) funcioninbuilt -> . VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA
    (123) funcioninbuilt -> . VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA
    (136) funcion_anonima -> . VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (141) arrow_function -> . VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA
    (95) empty -> .

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINT_R resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
    RLLAVE          shift and go to state 302
    PRINT           shift and go to state 17
    PRINT_R         shift and go to state 18
    ECHO            shift and go to state 19
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    FOR             shift and go to state 36
    LBRACKET        shift and go to state 21
    LBRACE          shift and go to state 37
    FUNCTION        shift and go to state 38

  ! RLLAVE          [ reduce using rule 95 (empty -> .) ]
  ! PRINT           [ reduce using rule 95 (empty -> .) ]
  ! PRINT_R         [ reduce using rule 95 (empty -> .) ]
  ! ECHO            [ reduce using rule 95 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 95 (empty -> .) ]
  ! WHILE           [ reduce using rule 95 (empty -> .) ]
  ! IF              [ reduce using rule 95 (empty -> .) ]
  ! ELSE            [ reduce using rule 95 (empty -> .) ]
  ! FOR             [ reduce using rule 95 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 95 (empty -> .) ]
  ! LBRACE          [ reduce using rule 95 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 95 (empty -> .) ]

    increment                      shift and go to state 16
    instruccion                    shift and go to state 40
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    expresiones                    shift and go to state 15
    while                          shift and go to state 22
    if                             shift and go to state 23
    else                           shift and go to state 24
    for_statement                  shift and go to state 25
    array                          shift and go to state 26
    lista                          shift and go to state 27
    diccionario                    shift and go to state 28
    funcion                        shift and go to state 29
    funcioninbuilt                 shift and go to state 30
    funcion_anonima                shift and go to state 31
    arrow_function                 shift and go to state 32
    empty                          shift and go to state 41

state 302

    (85) for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .

    PRINT           reduce using rule 85 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    PRINT_R         reduce using rule 85 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    ECHO            reduce using rule 85 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    VARIABLE        reduce using rule 85 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    WHILE           reduce using rule 85 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    IF              reduce using rule 85 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    ELSE            reduce using rule 85 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    FOR             reduce using rule 85 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    LBRACKET        reduce using rule 85 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    LBRACE          reduce using rule 85 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    FUNCTION        reduce using rule 85 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    PHP_END         reduce using rule 85 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    RLLAVE          reduce using rule 85 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PRINT in state 2 resolved as shift
WARNING: shift/reduce conflict for PRINT_R in state 2 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 2 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 2 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 2 resolved as shift
WARNING: shift/reduce conflict for IF in state 2 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 2 resolved as shift
WARNING: shift/reduce conflict for FOR in state 2 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 2 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 2 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 2 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 4 resolved as shift
WARNING: shift/reduce conflict for PRINT_R in state 4 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 4 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 4 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 4 resolved as shift
WARNING: shift/reduce conflict for IF in state 4 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 4 resolved as shift
WARNING: shift/reduce conflict for FOR in state 4 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 4 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 4 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 4 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 44 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 73 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 73 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 73 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 73 resolved as shift
WARNING: shift/reduce conflict for MOD in state 73 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 76 resolved as shift
WARNING: shift/reduce conflict for PRINT_R in state 76 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 76 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 76 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 76 resolved as shift
WARNING: shift/reduce conflict for IF in state 76 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 76 resolved as shift
WARNING: shift/reduce conflict for FOR in state 76 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 76 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 76 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 76 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 82 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 84 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 116 resolved as shift
WARNING: shift/reduce conflict for NOT_IDENTICAL in state 116 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 116 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 116 resolved as shift
WARNING: shift/reduce conflict for IDENTICAL in state 116 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 116 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 116 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 118 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 118 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 121 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 121 resolved as shift
WARNING: shift/reduce conflict for PRINT_R in state 121 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 121 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 121 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 121 resolved as shift
WARNING: shift/reduce conflict for IF in state 121 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 121 resolved as shift
WARNING: shift/reduce conflict for FOR in state 121 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 121 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 121 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 121 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 215 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 218 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 218 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 218 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 218 resolved as shift
WARNING: shift/reduce conflict for MOD in state 218 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 226 resolved as shift
WARNING: shift/reduce conflict for PRINT_R in state 226 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 226 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 226 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 226 resolved as shift
WARNING: shift/reduce conflict for IF in state 226 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 226 resolved as shift
WARNING: shift/reduce conflict for FOR in state 226 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 226 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 226 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 226 resolved as shift
WARNING: shift/reduce conflict for AND_LOGICAL in state 227 resolved as shift
WARNING: shift/reduce conflict for OR_LOGICAL in state 227 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 231 resolved as shift
WARNING: shift/reduce conflict for PRINT_R in state 231 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 231 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 231 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 231 resolved as shift
WARNING: shift/reduce conflict for IF in state 231 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 231 resolved as shift
WARNING: shift/reduce conflict for FOR in state 231 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 231 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 231 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 231 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 232 resolved as shift
WARNING: shift/reduce conflict for PRINT_R in state 232 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 232 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 232 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 232 resolved as shift
WARNING: shift/reduce conflict for IF in state 232 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 232 resolved as shift
WARNING: shift/reduce conflict for FOR in state 232 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 232 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 232 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 232 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 236 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 236 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 240 resolved as shift
WARNING: shift/reduce conflict for PRINT_R in state 240 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 240 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 240 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 240 resolved as shift
WARNING: shift/reduce conflict for IF in state 240 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 240 resolved as shift
WARNING: shift/reduce conflict for FOR in state 240 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 240 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 240 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 240 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 262 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 262 resolved as shift
WARNING: shift/reduce conflict for PRINT_R in state 262 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 262 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 262 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 262 resolved as shift
WARNING: shift/reduce conflict for IF in state 262 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 262 resolved as shift
WARNING: shift/reduce conflict for FOR in state 262 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 262 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 262 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 262 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 263 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 263 resolved as shift
WARNING: shift/reduce conflict for PRINT_R in state 263 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 263 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 263 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 263 resolved as shift
WARNING: shift/reduce conflict for IF in state 263 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 263 resolved as shift
WARNING: shift/reduce conflict for FOR in state 263 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 263 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 263 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 263 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 264 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 264 resolved as shift
WARNING: shift/reduce conflict for PRINT_R in state 264 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 264 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 264 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 264 resolved as shift
WARNING: shift/reduce conflict for IF in state 264 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 264 resolved as shift
WARNING: shift/reduce conflict for FOR in state 264 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 264 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 264 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 264 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 266 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 266 resolved as shift
WARNING: shift/reduce conflict for PRINT_R in state 266 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 266 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 266 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 266 resolved as shift
WARNING: shift/reduce conflict for IF in state 266 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 266 resolved as shift
WARNING: shift/reduce conflict for FOR in state 266 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 266 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 266 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 266 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 267 resolved as shift
WARNING: shift/reduce conflict for PRINT_R in state 267 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 267 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 267 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 267 resolved as shift
WARNING: shift/reduce conflict for IF in state 267 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 267 resolved as shift
WARNING: shift/reduce conflict for FOR in state 267 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 267 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 267 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 267 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 273 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 273 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 273 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 273 resolved as shift
WARNING: shift/reduce conflict for MOD in state 273 resolved as shift
WARNING: shift/reduce conflict for POT in state 273 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 278 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 278 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 278 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 278 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 278 resolved as shift
WARNING: shift/reduce conflict for MOD in state 278 resolved as shift
WARNING: shift/reduce conflict for POT in state 278 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 280 resolved as shift
WARNING: shift/reduce conflict for PRINT_R in state 280 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 280 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 280 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 280 resolved as shift
WARNING: shift/reduce conflict for IF in state 280 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 280 resolved as shift
WARNING: shift/reduce conflict for FOR in state 280 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 280 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 280 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 280 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 289 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 289 resolved as shift
WARNING: shift/reduce conflict for PRINT_R in state 289 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 289 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 289 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 289 resolved as shift
WARNING: shift/reduce conflict for IF in state 289 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 289 resolved as shift
WARNING: shift/reduce conflict for FOR in state 289 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 289 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 289 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 289 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 291 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 291 resolved as shift
WARNING: shift/reduce conflict for PRINT_R in state 291 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 291 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 291 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 291 resolved as shift
WARNING: shift/reduce conflict for IF in state 291 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 291 resolved as shift
WARNING: shift/reduce conflict for FOR in state 291 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 291 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 291 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 291 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 299 resolved as shift
WARNING: shift/reduce conflict for PRINT_R in state 299 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 299 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 299 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 299 resolved as shift
WARNING: shift/reduce conflict for IF in state 299 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 299 resolved as shift
WARNING: shift/reduce conflict for FOR in state 299 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 299 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 299 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 299 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 301 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 301 resolved as shift
WARNING: shift/reduce conflict for PRINT_R in state 301 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 301 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 301 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 301 resolved as shift
WARNING: shift/reduce conflict for IF in state 301 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 301 resolved as shift
WARNING: shift/reduce conflict for FOR in state 301 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 301 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 301 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 301 resolved as shift
WARNING: reduce/reduce conflict in state 4 resolved using rule (cuerpo -> instrucciones)
WARNING: rejected rule (empty -> <empty>) in state 4
WARNING: reduce/reduce conflict in state 5 resolved using rule (cuerpo -> empty)
WARNING: rejected rule (increment -> empty) in state 5
WARNING: reduce/reduce conflict in state 46 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (expression -> VARIABLE) in state 46
WARNING: reduce/reduce conflict in state 47 resolved using rule (valor -> NUMBER)
WARNING: rejected rule (expression -> NUMBER) in state 47
WARNING: reduce/reduce conflict in state 73 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (expression -> VARIABLE) in state 73
WARNING: reduce/reduce conflict in state 116 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (expression -> VARIABLE) in state 116
WARNING: reduce/reduce conflict in state 118 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (expression -> VARIABLE) in state 118
WARNING: reduce/reduce conflict in state 218 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (expression -> VARIABLE) in state 218
WARNING: reduce/reduce conflict in state 229 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (condicion_simple -> VARIABLE comparador VARIABLE) in state 229
WARNING: reduce/reduce conflict in state 229 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (expression -> VARIABLE) in state 229
WARNING: reduce/reduce conflict in state 233 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (comparacion -> VARIABLE comparadorNum VARIABLE) in state 233
WARNING: reduce/reduce conflict in state 233 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (expression -> VARIABLE) in state 233
WARNING: reduce/reduce conflict in state 236 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (expression -> VARIABLE) in state 236
WARNING: reduce/reduce conflict in state 274 resolved using rule (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA)
WARNING: rejected rule (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA) in state 274
WARNING: reduce/reduce conflict in state 278 resolved using rule (operacion -> operacion operadorAritmetico operacion)
WARNING: rejected rule (operaciones -> operacion) in state 278
WARNING: Rule (condicion_simple -> VARIABLE comparador VARIABLE) is never reduced
WARNING: Rule (comparacion -> VARIABLE comparadorNum VARIABLE) is never reduced
WARNING: Rule (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA) is never reduced
