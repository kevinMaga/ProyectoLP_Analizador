Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    AND
    AND_WORD
    AS
    BREAK
    CALLABLE
    CASE
    CATCH
    CLASS
    CLONE
    CLOSEINTER
    COMENTARIO_LINEA
    COMENTARIO_MULTILINEA
    COMENTARIO_SHELL
    DECLARE
    DEFAULT
    DIE
    DOBLEDIVIDE
    DOBLEPUNTO
    ELSEIF
    EMPTY
    ENDFOR
    ENDFOREACH
    ENDIF
    ENDSWITCH
    ENDWHILE
    EVAL
    EXIT
    EXTENDS
    FINAL
    FINALLY
    FOREACH
    GLOBAL
    GOTO
    GREATER_EQUAL
    IMPLEMENTS
    INCLUDE
    INSTANCEOF
    INSTEADOF
    INTERFACE
    ISSET
    LESS_EQUAL
    LIST
    MATCH
    MENOR_MAYOR
    NEW
    NOT_LOGICAL
    NUMERAL
    OR
    OR_WORD
    PHP_END
    PHP_START
    PRIVATE
    PROTECTED
    PUBLIC
    REQUIRE
    RETURN
    STATIC
    SWITCH
    THROW
    TRAIT
    TRY
    UNSET
    USE
    VAR
    VIRGULILLA
    XOR
    XOR_WORD
    YIELD
    YIELD_FROM

Grammar

Rule 0     S' -> imprimir
Rule 1     imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA
Rule 2     imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA
Rule 3     imprimir -> ECHO valor PUNTOYCOMA
Rule 4     imprimir -> ECHO concatenar PUNTOYCOMA
Rule 5     argumentos -> valor
Rule 6     argumentos -> argumentos COMA valor
Rule 7     solicitud_datos -> READLINE LPAREN STRING RPAREN PUNTOYCOMA
Rule 8     concatenar -> valor
Rule 9     concatenar -> valor PUNTO concatenar
Rule 10    input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
Rule 11    indexacion -> VARIABLE LBRACKET valor RBRACKET
Rule 12    indexacion -> VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
Rule 13    numero -> NUMBER
Rule 14    numero -> MINUS NUMBER
Rule 15    numero -> FLOAT
Rule 16    valor -> NUMBER
Rule 17    valor -> FLOAT
Rule 18    valor -> STRING
Rule 19    valor -> BOOLEAN
Rule 20    valor -> VARIABLE
Rule 21    valor -> ID
Rule 22    operadores -> AND_LOGICAL
Rule 23    operadores -> OR_LOGICAL
Rule 24    operadorAritmetico -> PLUS
Rule 25    operadorAritmetico -> MINUS
Rule 26    operadorAritmetico -> TIMES
Rule 27    operadorAritmetico -> DIVIDE
Rule 28    operadorAritmetico -> MOD
Rule 29    operadorAritmetico -> POT
Rule 30    comparadorNum -> MAYOR
Rule 31    comparadorNum -> MAYORIGUAL
Rule 32    comparadorNum -> MENOR
Rule 33    comparadorNum -> MENORIGUAL
Rule 34    comparador -> EQUAL
Rule 35    comparador -> NOT_IDENTICAL
Rule 36    comparador -> NOT_EQUAL
Rule 37    comparador -> IGUAL
Rule 38    comparador -> IDENTICAL
Rule 39    comparaciones -> comparacion
Rule 40    comparaciones -> comparacion operadores comparaciones
Rule 41    comparacion -> VARIABLE comparadorNum VARIABLE
Rule 42    comparacion -> valor comparador valor
Rule 43    condicion -> condicion_simple
Rule 44    condicion -> condicion compuesta_logica condicion
Rule 45    condicion_simple -> valor comparador valor
Rule 46    compuesta_logica -> AND_LOGICAL
Rule 47    compuesta_logica -> OR_LOGICAL
Rule 48    OperacionASIG -> VARIABLE PLUS_ASSIGN NUMBER
Rule 49    OperacionASIG -> VARIABLE MINUS_ASSIGN NUMBER
Rule 50    OperacionASIG -> VARIABLE TIMES_ASSIGN NUMBER
Rule 51    OperacionASIG -> VARIABLE DIVIDE_ASSIGN NUMBER
Rule 52    OperacionASIG -> VARIABLE MODULO_ASSIGN NUMBER
Rule 53    OperacionASIG -> VARIABLE PLUS_ASSIGN NUMBER PUNTOYCOMA
Rule 54    OperacionASIG -> VARIABLE MINUS_ASSIGN NUMBER PUNTOYCOMA
Rule 55    OperacionASIG -> VARIABLE TIMES_ASSIGN NUMBER PUNTOYCOMA
Rule 56    OperacionASIG -> VARIABLE DIVIDE_ASSIGN NUMBER PUNTOYCOMA
Rule 57    OperacionASIG -> VARIABLE MODULO_ASSIGN NUMBER PUNTOYCOMA
Rule 58    incrementoDecremento -> VARIABLE INCREMENT
Rule 59    incrementoDecremento -> VARIABLE DECREMENT
Rule 60    incrementoDecremento -> VARIABLE INCREMENT PUNTOYCOMA
Rule 61    incrementoDecremento -> VARIABLE DECREMENT PUNTOYCOMA
Rule 62    operacion -> VARIABLE operadorAritmetico VARIABLE
Rule 63    operacion -> operacion operadorAritmetico operacion
Rule 64    operaciones -> operacion
Rule 65    operaciones -> operacion PUNTOYCOMA
Rule 66    operaciones -> operacion operadorAritmetico operaciones
Rule 67    operaciones -> VARIABLE IGUAL operaciones
Rule 68    array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
Rule 69    array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
Rule 70    array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
Rule 71    array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
Rule 72    lista -> LBRACKET RBRACKET
Rule 73    lista -> LBRACKET elementos RBRACKET
Rule 74    elemento -> valor
Rule 75    elemento -> lista
Rule 76    elemento -> clave_valor
Rule 77    elementos -> elemento
Rule 78    elementos -> elementos COMA elemento
Rule 79    clave_valor -> valor ARROW valor
Rule 80    diccionario -> LBRACE pares RBRACE
Rule 81    pares -> par
Rule 82    pares -> pares COMA par
Rule 83    par -> STRING ARROW valor
Rule 84    estructurasControl -> WHILE
Rule 85    estructurasControl -> IF
Rule 86    estructurasControl -> ELSE
Rule 87    estructurasControl -> FOR
Rule 88    if -> IF LPAREN comparaciones RPAREN LLLAVE declaraciones RLLAVE
Rule 89    if -> IF LPAREN VARIABLE RPAREN LLLAVE declaraciones RLLAVE
Rule 90    else -> RLLAVE ELSE LLLAVE declaraciones RLLAVE
Rule 91    else -> ELSE LLLAVE declaraciones RLLAVE
Rule 92    declaraciones -> declaracion
Rule 93    declaraciones -> declaraciones declaracion
Rule 94    declaracion -> IF
Rule 95    declaracion -> asignacion
Rule 96    declaracion -> ELSE
Rule 97    declaracion -> operacion
Rule 98    declaracion -> WHILE
Rule 99    declaracion -> FOR
Rule 100   declaracion -> funcioninbuilt
Rule 101   asignacion -> VARIABLE IGUAL valor PUNTOYCOMA
Rule 102   asignacion -> VARIABLE IGUAL valor
Rule 103   while -> WHILE LBRACE condicion RBRACE bloque
Rule 104   bloque -> LBRACE instrucciones RBRACE
Rule 105   instrucciones -> instruccion
Rule 106   instrucciones -> instrucciones instruccion
Rule 107   instruccion -> asignacion
Rule 108   instruccion -> imprimir
Rule 109   program -> for_statement
Rule 110   program -> program for_statement
Rule 111   program -> empty
Rule 112   for_statement -> FOR LPAREN initialization PUNTOYCOMA condition PUNTOYCOMA increment RPAREN LLLAVE program RLLAVE
Rule 113   initialization -> VARIABLE IGUAL expression
Rule 114   initialization -> empty
Rule 115   condition -> VARIABLE MAYOR expression
Rule 116   condition -> VARIABLE MENOR expression
Rule 117   condition -> VARIABLE EQUAL expression
Rule 118   condition -> empty
Rule 119   increment -> VARIABLE INCREMENT
Rule 120   increment -> VARIABLE DECREMENT
Rule 121   increment -> VARIABLE PLUS_ASSIGN expression
Rule 122   increment -> VARIABLE MINUS_ASSIGN expression
Rule 123   increment -> empty
Rule 124   empty -> <empty>
Rule 125   funcioninbuilt -> funciones LPAREN operaciones RPAREN
Rule 126   funcioninbuilt -> funciones LPAREN RPAREN
Rule 127   funciones -> STRLEN
Rule 128   funciones -> STRPOS
Rule 129   funciones -> ARRAY_PUSH
Rule 130   funciones -> ARRAY_POP
Rule 131   funciones -> IN_ARRAY
Rule 132   funciones -> COUNT
Rule 133   funciones -> SORT
Rule 134   funcion_anonima -> FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE
Rule 135   parametros -> STRING
Rule 136   parametros -> parametros COMA STRING
Rule 137   arrow_function -> VARIABLE EQUAL FN LPAREN parameter_list RPAREN ARROW expression
Rule 138   parameter_list -> VARIABLE
Rule 139   parameter_list -> VARIABLE COMA parameter_list
Rule 140   expression -> VARIABLE
Rule 141   expression -> NUMBER
Rule 142   expression -> VARIABLE TIMES VARIABLE
Rule 143   expression -> VARIABLE PLUS VARIABLE
Rule 144   expression -> VARIABLE MINUS VARIABLE
Rule 145   expression -> VARIABLE DIVIDE VARIABLE

Terminals, with rules where they appear

ABSTRACT             : 
AND                  : 
AND_LOGICAL          : 22 46
AND_WORD             : 
ARRAY                : 68 69
ARRAY_POP            : 130
ARRAY_PUSH           : 129
ARROW                : 79 83 137
AS                   : 
BOOLEAN              : 19
BREAK                : 
CALLABLE             : 
CASE                 : 
CATCH                : 
CLASS                : 
CLONE                : 
CLOSEINTER           : 
COMA                 : 6 78 82 136 139
COMENTARIO_LINEA     : 
COMENTARIO_MULTILINEA : 
COMENTARIO_SHELL     : 
COUNT                : 132
DECLARE              : 
DECREMENT            : 59 61 120
DEFAULT              : 
DIE                  : 
DIVIDE               : 27 145
DIVIDE_ASSIGN        : 51 56
DOBLEDIVIDE          : 
DOBLEPUNTO           : 
ECHO                 : 3 4
ELSE                 : 86 90 91 96
ELSEIF               : 
EMPTY                : 
ENDFOR               : 
ENDFOREACH           : 
ENDIF                : 
ENDSWITCH            : 
ENDWHILE             : 
EQUAL                : 34 117 137
EVAL                 : 
EXIT                 : 
EXTENDS              : 
FGETS                : 10
FINAL                : 
FINALLY              : 
FLOAT                : 15 17
FN                   : 137
FOR                  : 87 99 112
FOREACH              : 
FUNCTION             : 134
GLOBAL               : 
GOTO                 : 
GREATER_EQUAL        : 
ID                   : 21
IDENTICAL            : 38
IF                   : 85 88 89 94
IGUAL                : 10 37 67 68 69 70 71 101 102 113
IMPLEMENTS           : 
INCLUDE              : 
INCREMENT            : 58 60 119
INSTANCEOF           : 
INSTEADOF            : 
INTERFACE            : 
IN_ARRAY             : 131
ISSET                : 
LBRACE               : 80 103 104 134
LBRACKET             : 11 12 70 71 72 73
LESS_EQUAL           : 
LIST                 : 
LLLAVE               : 88 89 90 91 112
LPAREN               : 1 2 7 10 68 69 88 89 112 125 126 134 137
MATCH                : 
MAYOR                : 30 115
MAYORIGUAL           : 31
MENOR                : 32 116
MENORIGUAL           : 33
MENOR_MAYOR          : 
MINUS                : 14 25 144
MINUS_ASSIGN         : 49 54 122
MOD                  : 28
MODULO_ASSIGN        : 52 57
NEW                  : 
NOT_EQUAL            : 36
NOT_IDENTICAL        : 35
NOT_LOGICAL          : 
NUMBER               : 13 14 16 48 49 50 51 52 53 54 55 56 57 141
NUMERAL              : 
OR                   : 
OR_LOGICAL           : 23 47
OR_WORD              : 
PHP_END              : 
PHP_START            : 
PLUS                 : 24 143
PLUS_ASSIGN          : 48 53 121
POT                  : 29
PRINT                : 1 2
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
PUNTO                : 9
PUNTOYCOMA           : 1 2 3 4 7 10 12 53 54 55 56 57 60 61 65 68 69 70 71 101 112 112
RBRACE               : 80 103 104 134
RBRACKET             : 11 12 70 71 72 73
READLINE             : 7
REQUIRE              : 
RETURN               : 
RLLAVE               : 88 89 90 90 91 112
RPAREN               : 1 2 7 10 68 69 88 89 112 125 126 134 137
SORT                 : 133
STATIC               : 
STRING               : 7 18 83 135 136
STRLEN               : 127
STRPOS               : 128
SWITCH               : 
THROW                : 
TIMES                : 26 142
TIMES_ASSIGN         : 50 55
TRAIT                : 
TRY                  : 
UNSET                : 
USE                  : 
VAR                  : 
VARIABLE             : 10 10 11 12 20 41 41 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 62 67 68 69 70 71 89 101 102 113 115 116 117 119 120 121 122 137 138 139 140 142 142 143 143 144 144 145 145
VIRGULILLA           : 
WHILE                : 84 98 103
XOR                  : 
XOR_WORD             : 
YIELD                : 
YIELD_FROM           : 
error                : 

Nonterminals, with rules where they appear

OperacionASIG        : 
argumentos           : 2 6
array                : 
arrow_function       : 
asignacion           : 95 107
bloque               : 103
clave_valor          : 76
comparacion          : 39 40
comparaciones        : 40 88
comparador           : 42 45
comparadorNum        : 41
compuesta_logica     : 44
concatenar           : 4 9
condicion            : 44 44 103
condicion_simple     : 43
condition            : 112
declaracion          : 92 93
declaraciones        : 88 89 90 91 93
diccionario          : 
elemento             : 77 78
elementos            : 69 71 73 78
else                 : 
empty                : 111 114 118 123
estructurasControl   : 
expression           : 113 115 116 117 121 122 137
for_statement        : 109 110
funcion_anonima      : 
funciones            : 125 126
funcioninbuilt       : 100
if                   : 
imprimir             : 108 0
increment            : 112
incrementoDecremento : 
indexacion           : 
initialization       : 112
input                : 
instruccion          : 105 106
instrucciones        : 104 106 134
lista                : 75
numero               : 
operacion            : 63 63 64 65 66 97
operaciones          : 66 67 125
operadorAritmetico   : 62 63 66
operadores           : 40
par                  : 81 82
parameter_list       : 137 139
parametros           : 134 136
pares                : 80 82
program              : 110 112
solicitud_datos      : 
valor                : 1 3 5 6 8 9 11 12 42 42 45 45 74 79 79 83 101 102
while                : 

Parsing method: LALR

state 0

    (0) S' -> . imprimir
    (1) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (2) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (3) imprimir -> . ECHO valor PUNTOYCOMA
    (4) imprimir -> . ECHO concatenar PUNTOYCOMA

    PRINT           shift and go to state 2
    ECHO            shift and go to state 3

    imprimir                       shift and go to state 1

state 1

    (0) S' -> imprimir .



state 2

    (1) imprimir -> PRINT . LPAREN valor RPAREN PUNTOYCOMA
    (2) imprimir -> PRINT . LPAREN argumentos RPAREN PUNTOYCOMA

    LPAREN          shift and go to state 4


state 3

    (3) imprimir -> ECHO . valor PUNTOYCOMA
    (4) imprimir -> ECHO . concatenar PUNTOYCOMA
    (16) valor -> . NUMBER
    (17) valor -> . FLOAT
    (18) valor -> . STRING
    (19) valor -> . BOOLEAN
    (20) valor -> . VARIABLE
    (21) valor -> . ID
    (8) concatenar -> . valor
    (9) concatenar -> . valor PUNTO concatenar

    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    STRING          shift and go to state 9
    BOOLEAN         shift and go to state 10
    VARIABLE        shift and go to state 11
    ID              shift and go to state 12

    valor                          shift and go to state 5
    concatenar                     shift and go to state 6

state 4

    (1) imprimir -> PRINT LPAREN . valor RPAREN PUNTOYCOMA
    (2) imprimir -> PRINT LPAREN . argumentos RPAREN PUNTOYCOMA
    (16) valor -> . NUMBER
    (17) valor -> . FLOAT
    (18) valor -> . STRING
    (19) valor -> . BOOLEAN
    (20) valor -> . VARIABLE
    (21) valor -> . ID
    (5) argumentos -> . valor
    (6) argumentos -> . argumentos COMA valor

    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    STRING          shift and go to state 9
    BOOLEAN         shift and go to state 10
    VARIABLE        shift and go to state 11
    ID              shift and go to state 12

    valor                          shift and go to state 13
    argumentos                     shift and go to state 14

state 5

    (3) imprimir -> ECHO valor . PUNTOYCOMA
    (8) concatenar -> valor .
    (9) concatenar -> valor . PUNTO concatenar

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 15
    PUNTO           shift and go to state 16

  ! PUNTOYCOMA      [ reduce using rule 8 (concatenar -> valor .) ]


state 6

    (4) imprimir -> ECHO concatenar . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 17


state 7

    (16) valor -> NUMBER .

    PUNTOYCOMA      reduce using rule 16 (valor -> NUMBER .)
    PUNTO           reduce using rule 16 (valor -> NUMBER .)
    RPAREN          reduce using rule 16 (valor -> NUMBER .)
    COMA            reduce using rule 16 (valor -> NUMBER .)


state 8

    (17) valor -> FLOAT .

    PUNTOYCOMA      reduce using rule 17 (valor -> FLOAT .)
    PUNTO           reduce using rule 17 (valor -> FLOAT .)
    RPAREN          reduce using rule 17 (valor -> FLOAT .)
    COMA            reduce using rule 17 (valor -> FLOAT .)


state 9

    (18) valor -> STRING .

    PUNTOYCOMA      reduce using rule 18 (valor -> STRING .)
    PUNTO           reduce using rule 18 (valor -> STRING .)
    RPAREN          reduce using rule 18 (valor -> STRING .)
    COMA            reduce using rule 18 (valor -> STRING .)


state 10

    (19) valor -> BOOLEAN .

    PUNTOYCOMA      reduce using rule 19 (valor -> BOOLEAN .)
    PUNTO           reduce using rule 19 (valor -> BOOLEAN .)
    RPAREN          reduce using rule 19 (valor -> BOOLEAN .)
    COMA            reduce using rule 19 (valor -> BOOLEAN .)


state 11

    (20) valor -> VARIABLE .

    PUNTOYCOMA      reduce using rule 20 (valor -> VARIABLE .)
    PUNTO           reduce using rule 20 (valor -> VARIABLE .)
    RPAREN          reduce using rule 20 (valor -> VARIABLE .)
    COMA            reduce using rule 20 (valor -> VARIABLE .)


state 12

    (21) valor -> ID .

    PUNTOYCOMA      reduce using rule 21 (valor -> ID .)
    PUNTO           reduce using rule 21 (valor -> ID .)
    RPAREN          reduce using rule 21 (valor -> ID .)
    COMA            reduce using rule 21 (valor -> ID .)


state 13

    (1) imprimir -> PRINT LPAREN valor . RPAREN PUNTOYCOMA
    (5) argumentos -> valor .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 18
    COMA            reduce using rule 5 (argumentos -> valor .)

  ! RPAREN          [ reduce using rule 5 (argumentos -> valor .) ]


state 14

    (2) imprimir -> PRINT LPAREN argumentos . RPAREN PUNTOYCOMA
    (6) argumentos -> argumentos . COMA valor

    RPAREN          shift and go to state 19
    COMA            shift and go to state 20


state 15

    (3) imprimir -> ECHO valor PUNTOYCOMA .

    $end            reduce using rule 3 (imprimir -> ECHO valor PUNTOYCOMA .)


state 16

    (9) concatenar -> valor PUNTO . concatenar
    (8) concatenar -> . valor
    (9) concatenar -> . valor PUNTO concatenar
    (16) valor -> . NUMBER
    (17) valor -> . FLOAT
    (18) valor -> . STRING
    (19) valor -> . BOOLEAN
    (20) valor -> . VARIABLE
    (21) valor -> . ID

    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    STRING          shift and go to state 9
    BOOLEAN         shift and go to state 10
    VARIABLE        shift and go to state 11
    ID              shift and go to state 12

    valor                          shift and go to state 21
    concatenar                     shift and go to state 22

state 17

    (4) imprimir -> ECHO concatenar PUNTOYCOMA .

    $end            reduce using rule 4 (imprimir -> ECHO concatenar PUNTOYCOMA .)


state 18

    (1) imprimir -> PRINT LPAREN valor RPAREN . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 23


state 19

    (2) imprimir -> PRINT LPAREN argumentos RPAREN . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 24


state 20

    (6) argumentos -> argumentos COMA . valor
    (16) valor -> . NUMBER
    (17) valor -> . FLOAT
    (18) valor -> . STRING
    (19) valor -> . BOOLEAN
    (20) valor -> . VARIABLE
    (21) valor -> . ID

    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    STRING          shift and go to state 9
    BOOLEAN         shift and go to state 10
    VARIABLE        shift and go to state 11
    ID              shift and go to state 12

    valor                          shift and go to state 25

state 21

    (8) concatenar -> valor .
    (9) concatenar -> valor . PUNTO concatenar

    PUNTOYCOMA      reduce using rule 8 (concatenar -> valor .)
    PUNTO           shift and go to state 16


state 22

    (9) concatenar -> valor PUNTO concatenar .

    PUNTOYCOMA      reduce using rule 9 (concatenar -> valor PUNTO concatenar .)


state 23

    (1) imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .

    $end            reduce using rule 1 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)


state 24

    (2) imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .

    $end            reduce using rule 2 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)


state 25

    (6) argumentos -> argumentos COMA valor .

    RPAREN          reduce using rule 6 (argumentos -> argumentos COMA valor .)
    COMA            reduce using rule 6 (argumentos -> argumentos COMA valor .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PUNTOYCOMA in state 5 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 13 resolved as shift
