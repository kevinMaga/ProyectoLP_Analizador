Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    AND
    AND_WORD
    AS
    BREAK
    CALLABLE
    CASE
    CATCH
    CLASS
    CLONE
    CLOSEINTER
    COMENTARIO_LINEA
    COMENTARIO_MULTILINEA
    COMENTARIO_SHELL
    DECLARE
    DEFAULT
    DELIM_FIN
    DELIM_INICIO
    DIE
    DOBLEDIVIDE
    DOBLEPUNTO
    ELSEIF
    EMPTY
    ENDFOR
    ENDFOREACH
    ENDIF
    ENDSWITCH
    ENDWHILE
    EVAL
    EXIT
    EXTENDS
    FINAL
    FINALLY
    FN
    FOREACH
    GLOBAL
    GOTO
    GREATER_EQUAL
    ID
    IMPLEMENTS
    INCLUDE
    INSTANCEOF
    INSTEADOF
    INTERFACE
    ISSET
    LESS_EQUAL
    LIST
    MATCH
    MENOR_MAYOR
    NEW
    NOT_LOGICAL
    NUMERAL
    OR
    OR_WORD
    PRIVATE
    PROTECTED
    PUBLIC
    REQUIRE
    RETURN
    STATIC
    SWITCH
    THROW
    TRAIT
    TRY
    UNSET
    USE
    VAR
    VIRGULILLA
    XOR
    XOR_WORD
    YIELD
    YIELD_FROM

Grammar

Rule 0     S' -> imprimir
Rule 1     imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA
Rule 2     imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA
Rule 3     imprimir -> ECHO valor PUNTOYCOMA
Rule 4     imprimir -> ECHO concatenar PUNTOYCOMA
Rule 5     argumentos -> valor
Rule 6     argumentos -> argumentos COMA valor
Rule 7     solicitud_datos -> READLINE LPAREN STRING RPAREN PUNTOYCOMA
Rule 8     concatenar -> valor
Rule 9     concatenar -> valor PUNTO concatenar
Rule 10    input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
Rule 11    indexacion -> VARIABLE LBRACKET valor RBRACKET
Rule 12    indexacion -> VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
Rule 13    numero -> NUMBER
Rule 14    numero -> MINUS NUMBER
Rule 15    numero -> FLOAT
Rule 16    valor -> NUMBER
Rule 17    valor -> FLOAT
Rule 18    valor -> STRING
Rule 19    valor -> BOOLEAN
Rule 20    valor -> VARIABLE
Rule 21    operadores -> AND_LOGICAL
Rule 22    operadores -> OR_LOGICAL
Rule 23    operadorAritmetico -> PLUS
Rule 24    operadorAritmetico -> MINUS
Rule 25    operadorAritmetico -> TIMES
Rule 26    operadorAritmetico -> DIVIDE
Rule 27    operadorAritmetico -> MOD
Rule 28    operadorAritmetico -> POT
Rule 29    comparadorNum -> MAYOR
Rule 30    comparadorNum -> MAYORIGUAL
Rule 31    comparadorNum -> MENOR
Rule 32    comparadorNum -> MENORIGUAL
Rule 33    comparador -> EQUAL
Rule 34    comparador -> NOT_IDENTICAL
Rule 35    comparador -> NOT_EQUAL
Rule 36    comparador -> IGUAL
Rule 37    comparador -> IDENTICAL
Rule 38    comparaciones -> comparacion
Rule 39    comparaciones -> comparacion operadores comparaciones
Rule 40    comparacion -> VARIABLE comparadorNum VARIABLE
Rule 41    comparacion -> valor comparador valor
Rule 42    condicion -> condicion_simple
Rule 43    condicion -> condicion compuesta_logica condicion
Rule 44    condicion_simple -> valor comparador valor
Rule 45    compuesta_logica -> AND_LOGICAL
Rule 46    compuesta_logica -> OR_LOGICAL
Rule 47    OperacionASIG -> VARIABLE PLUS_ASSIGN NUMBER
Rule 48    OperacionASIG -> VARIABLE MINUS_ASSIGN NUMBER
Rule 49    OperacionASIG -> VARIABLE TIMES_ASSIGN NUMBER
Rule 50    OperacionASIG -> VARIABLE DIVIDE_ASSIGN NUMBER
Rule 51    OperacionASIG -> VARIABLE MODULO_ASSIGN NUMBER
Rule 52    OperacionASIG -> VARIABLE PLUS_ASSIGN NUMBER PUNTOYCOMA
Rule 53    OperacionASIG -> VARIABLE MINUS_ASSIGN NUMBER PUNTOYCOMA
Rule 54    OperacionASIG -> VARIABLE TIMES_ASSIGN NUMBER PUNTOYCOMA
Rule 55    OperacionASIG -> VARIABLE DIVIDE_ASSIGN NUMBER PUNTOYCOMA
Rule 56    OperacionASIG -> VARIABLE MODULO_ASSIGN NUMBER PUNTOYCOMA
Rule 57    incrementoDecremento -> VARIABLE INCREMENT
Rule 58    incrementoDecremento -> VARIABLE DECREMENT
Rule 59    incrementoDecremento -> VARIABLE INCREMENT PUNTOYCOMA
Rule 60    incrementoDecremento -> VARIABLE DECREMENT PUNTOYCOMA
Rule 61    operacion -> VARIABLE operadorAritmetico VARIABLE
Rule 62    operacion -> operacion operadorAritmetico operacion
Rule 63    operaciones -> operacion
Rule 64    operaciones -> operacion PUNTOYCOMA
Rule 65    operaciones -> operacion operadorAritmetico operaciones
Rule 66    operaciones -> VARIABLE IGUAL operaciones
Rule 67    estructurasDeDatos -> array
Rule 68    estructurasDeDatos -> lista
Rule 69    estructurasDeDatos -> diccionario
Rule 70    array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
Rule 71    array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
Rule 72    array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
Rule 73    array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
Rule 74    lista -> LBRACKET RBRACKET
Rule 75    lista -> LBRACKET elementos RBRACKET
Rule 76    elemento -> valor
Rule 77    elemento -> lista
Rule 78    elemento -> clave_valor
Rule 79    elementos -> elemento
Rule 80    elementos -> elementos COMA elemento
Rule 81    clave_valor -> valor ARROW valor
Rule 82    diccionario -> LBRACE pares RBRACE
Rule 83    pares -> par
Rule 84    pares -> pares COMA par
Rule 85    par -> STRING ARROW valor
Rule 86    estructurasControl -> while
Rule 87    estructurasControl -> if
Rule 88    estructurasControl -> else
Rule 89    estructurasControl -> for
Rule 90    if -> IF LPAREN comparaciones RPAREN LLLAVE declaraciones RLLAVE
Rule 91    if -> IF LPAREN VARIABLE RPAREN LLLAVE declaraciones RLLAVE
Rule 92    else -> RLLAVE ELSE LLLAVE declaraciones RLLAVE
Rule 93    else -> ELSE LLLAVE declaraciones RLLAVE
Rule 94    declaraciones -> declaracion
Rule 95    declaraciones -> declaraciones declaracion
Rule 96    declaracion -> IF
Rule 97    declaracion -> asignacion
Rule 98    declaracion -> ELSE
Rule 99    declaracion -> operacion
Rule 100   declaracion -> WHILE
Rule 101   declaracion -> FOR
Rule 102   declaracion -> funcioninbuilt
Rule 103   asignacion -> VARIABLE IGUAL valor PUNTOYCOMA
Rule 104   asignacion -> VARIABLE IGUAL valor
Rule 105   while -> WHILE LBRACE condicion RBRACE bloque
Rule 106   bloque -> LBRACE instrucciones RBRACE
Rule 107   instrucciones -> instruccion
Rule 108   instrucciones -> instrucciones instruccion
Rule 109   instruccion -> asignacion
Rule 110   instruccion -> imprimir
Rule 111   funciones -> funcioninbuilt
Rule 112   funciones -> funcion_anonima
Rule 113   funcioninbuilt -> funciones LPAREN operaciones RPAREN
Rule 114   funcioninbuilt -> funciones LPAREN RPAREN
Rule 115   funciones -> STRLEN
Rule 116   funciones -> STRPOS
Rule 117   funciones -> ARRAY_PUSH
Rule 118   funciones -> ARRAY_POP
Rule 119   funciones -> IN_ARRAY
Rule 120   funciones -> COUNT
Rule 121   funciones -> SORT
Rule 122   funcion_anonima -> FUNCTION LPAREN parametros RPAREN LBRACE instrucciones RBRACE
Rule 123   parametros -> STRING
Rule 124   parametros -> parametros COMA STRING

Terminals, with rules where they appear

ABSTRACT             : 
AND                  : 
AND_LOGICAL          : 21 45
AND_WORD             : 
ARRAY                : 70 71
ARRAY_POP            : 118
ARRAY_PUSH           : 117
ARROW                : 81 85
AS                   : 
BOOLEAN              : 19
BREAK                : 
CALLABLE             : 
CASE                 : 
CATCH                : 
CLASS                : 
CLONE                : 
CLOSEINTER           : 
COMA                 : 6 80 84 124
COMENTARIO_LINEA     : 
COMENTARIO_MULTILINEA : 
COMENTARIO_SHELL     : 
COUNT                : 120
DECLARE              : 
DECREMENT            : 58 60
DEFAULT              : 
DELIM_FIN            : 
DELIM_INICIO         : 
DIE                  : 
DIVIDE               : 26
DIVIDE_ASSIGN        : 50 55
DOBLEDIVIDE          : 
DOBLEPUNTO           : 
ECHO                 : 3 4
ELSE                 : 92 93 98
ELSEIF               : 
EMPTY                : 
ENDFOR               : 
ENDFOREACH           : 
ENDIF                : 
ENDSWITCH            : 
ENDWHILE             : 
EQUAL                : 33
EVAL                 : 
EXIT                 : 
EXTENDS              : 
FGETS                : 10
FINAL                : 
FINALLY              : 
FLOAT                : 15 17
FN                   : 
FOR                  : 101
FOREACH              : 
FUNCTION             : 122
GLOBAL               : 
GOTO                 : 
GREATER_EQUAL        : 
ID                   : 
IDENTICAL            : 37
IF                   : 90 91 96
IGUAL                : 10 36 66 70 71 72 73 103 104
IMPLEMENTS           : 
INCLUDE              : 
INCREMENT            : 57 59
INSTANCEOF           : 
INSTEADOF            : 
INTERFACE            : 
IN_ARRAY             : 119
ISSET                : 
LBRACE               : 82 105 106 122
LBRACKET             : 11 12 72 73 74 75
LESS_EQUAL           : 
LIST                 : 
LLLAVE               : 90 91 92 93
LPAREN               : 1 2 7 10 70 71 90 91 113 114 122
MATCH                : 
MAYOR                : 29
MAYORIGUAL           : 30
MENOR                : 31
MENORIGUAL           : 32
MENOR_MAYOR          : 
MINUS                : 14 24
MINUS_ASSIGN         : 48 53
MOD                  : 27
MODULO_ASSIGN        : 51 56
NEW                  : 
NOT_EQUAL            : 35
NOT_IDENTICAL        : 34
NOT_LOGICAL          : 
NUMBER               : 13 14 16 47 48 49 50 51 52 53 54 55 56
NUMERAL              : 
OR                   : 
OR_LOGICAL           : 22 46
OR_WORD              : 
PLUS                 : 23
PLUS_ASSIGN          : 47 52
POT                  : 28
PRINT                : 1 2
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
PUNTO                : 9
PUNTOYCOMA           : 1 2 3 4 7 10 12 52 53 54 55 56 59 60 64 70 71 72 73 103
RBRACE               : 82 105 106 122
RBRACKET             : 11 12 72 73 74 75
READLINE             : 7
REQUIRE              : 
RETURN               : 
RLLAVE               : 90 91 92 92 93
RPAREN               : 1 2 7 10 70 71 90 91 113 114 122
SORT                 : 121
STATIC               : 
STRING               : 7 18 85 123 124
STRLEN               : 115
STRPOS               : 116
SWITCH               : 
THROW                : 
TIMES                : 25
TIMES_ASSIGN         : 49 54
TRAIT                : 
TRY                  : 
UNSET                : 
USE                  : 
VAR                  : 
VARIABLE             : 10 10 11 12 20 40 40 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 61 66 70 71 72 73 91 103 104
VIRGULILLA           : 
WHILE                : 100 105
XOR                  : 
XOR_WORD             : 
YIELD                : 
YIELD_FROM           : 
error                : 

Nonterminals, with rules where they appear

OperacionASIG        : 
argumentos           : 2 6
array                : 67
asignacion           : 97 109
bloque               : 105
clave_valor          : 78
comparacion          : 38 39
comparaciones        : 39 90
comparador           : 41 44
comparadorNum        : 40
compuesta_logica     : 43
concatenar           : 4 9
condicion            : 43 43 105
condicion_simple     : 42
declaracion          : 94 95
declaraciones        : 90 91 92 93 95
diccionario          : 69
elemento             : 79 80
elementos            : 71 73 75 80
else                 : 88
estructurasControl   : 
estructurasDeDatos   : 
for                  : 89
funcion_anonima      : 112
funciones            : 113 114
funcioninbuilt       : 102 111
if                   : 87
imprimir             : 110 0
incrementoDecremento : 
indexacion           : 
input                : 
instruccion          : 107 108
instrucciones        : 106 108 122
lista                : 68 77
numero               : 
operacion            : 62 62 63 64 65 99
operaciones          : 65 66 113
operadorAritmetico   : 61 62 65
operadores           : 39
par                  : 83 84
parametros           : 122 124
pares                : 82 84
solicitud_datos      : 
valor                : 1 3 5 6 8 9 11 12 41 41 44 44 76 81 81 85 103 104
while                : 86

