Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    AND
    AND_WORD
    AS
    BREAK
    CALLABLE
    CASE
    CATCH
    CLASS
    CLONE
    CLOSEINTER
    COMENTARIO_LINEA
    COMENTARIO_MULTILINEA
    COMENTARIO_SHELL
    DECLARE
    DEFAULT
    DIE
    DIVIDE_ASSIGN
    DOBLEDIVIDE
    DOBLEPUNTO
    ELSEIF
    EMPTY
    ENDFOR
    ENDFOREACH
    ENDIF
    ENDSWITCH
    ENDWHILE
    EVAL
    EXIT
    EXTENDS
    FINAL
    FINALLY
    FOREACH
    GLOBAL
    GOTO
    GREATER_EQUAL
    IMPLEMENTS
    INCLUDE
    INSTANCEOF
    INSTEADOF
    INTERFACE
    ISSET
    LESS_EQUAL
    LIST
    MATCH
    MENOR_MAYOR
    MODULO_ASSIGN
    NEW
    NOT_LOGICAL
    NUMERAL
    OR
    OR_WORD
    PRIVATE
    PROTECTED
    PUBLIC
    REQUIRE
    RETURN
    STATIC
    SWITCH
    THROW
    TIMES_ASSIGN
    TRAIT
    TRY
    UNSET
    USE
    VAR
    VIRGULILLA
    XOR
    XOR_WORD
    YIELD
    YIELD_FROM

Grammar

Rule 0     S' -> padre
Rule 1     padre -> PHP_START cuerpo PHP_END
Rule 2     cuerpo -> instrucciones
Rule 3     cuerpo -> empty
Rule 4     instrucciones -> instruccion
Rule 5     instrucciones -> instrucciones instruccion
Rule 6     instruccion -> imprimir
Rule 7     instruccion -> solicitud_datos
Rule 8     instruccion -> input
Rule 9     instruccion -> indexacion
Rule 10    instruccion -> estructurasControl
Rule 11    instruccion -> asignacion
Rule 12    instruccion -> estructurasDatos
Rule 13    instruccion -> funciones
Rule 14    instruccion -> operacion
Rule 15    instruccion -> increment
Rule 16    imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA
Rule 17    imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA
Rule 18    imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA
Rule 19    imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
Rule 20    imprimir -> ECHO valor PUNTOYCOMA
Rule 21    imprimir -> ECHO concatenar PUNTOYCOMA
Rule 22    imprimir -> ECHO valor COMA VARIABLE valor PUNTOYCOMA
Rule 23    valor -> NUMBER
Rule 24    valor -> FLOAT
Rule 25    valor -> STRING
Rule 26    valor -> BOOLEAN
Rule 27    valor -> VARIABLE
Rule 28    valor -> ID
Rule 29    valor -> expression
Rule 30    argumentos -> valor
Rule 31    argumentos -> argumentos COMA valor
Rule 32    concatenar -> valor
Rule 33    concatenar -> valor PUNTO concatenar
Rule 34    solicitud_datos -> VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA
Rule 35    solicitud_datos -> VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA
Rule 36    input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
Rule 37    indexacion -> VARIABLE LBRACKET valor RBRACKET
Rule 38    indexacion -> ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
Rule 39    estructurasControl -> while
Rule 40    estructurasControl -> if
Rule 41    estructurasControl -> else
Rule 42    estructurasControl -> for_statement
Rule 43    if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
Rule 44    if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
Rule 45    comparaciones -> comparacion
Rule 46    comparaciones -> comparacion operadores comparaciones
Rule 47    comparacion -> VARIABLE comparadorNum VARIABLE
Rule 48    comparacion -> valor comparador valor
Rule 49    comparacion -> VARIABLE comparadorNum valor
Rule 50    comparadorNum -> MAYOR
Rule 51    comparadorNum -> MAYORIGUAL
Rule 52    comparadorNum -> MENOR
Rule 53    comparadorNum -> MENORIGUAL
Rule 54    comparador -> EQUAL
Rule 55    comparador -> NOT_IDENTICAL
Rule 56    comparador -> NOT_EQUAL
Rule 57    comparador -> IGUAL
Rule 58    comparador -> IDENTICAL
Rule 59    comparador -> MAYOR
Rule 60    comparador -> MENOR
Rule 61    operadores -> AND_LOGICAL
Rule 62    operadores -> OR_LOGICAL
Rule 63    asignacion -> VARIABLE IGUAL valor PUNTOYCOMA
Rule 64    asignacion -> VARIABLE IGUAL ARRAY PUNTOYCOMA
Rule 65    asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
Rule 66    operacion -> valor operadorAritmetico valor PUNTOYCOMA
Rule 67    operacion -> operacion operadorAritmetico operacion
Rule 68    operadorAritmetico -> PLUS
Rule 69    operadorAritmetico -> MINUS
Rule 70    operadorAritmetico -> TIMES
Rule 71    operadorAritmetico -> DIVIDE
Rule 72    operadorAritmetico -> MOD
Rule 73    operadorAritmetico -> POT
Rule 74    else -> ELSE LLLAVE instrucciones RLLAVE
Rule 75    while -> WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE
Rule 76    condicion -> condicion_simple
Rule 77    condicion -> condicion compuesta_logica condicion
Rule 78    condicion_simple -> valor comparador valor
Rule 79    condicion_simple -> VARIABLE comparador valor
Rule 80    condicion_simple -> VARIABLE comparador VARIABLE
Rule 81    compuesta_logica -> AND_LOGICAL
Rule 82    compuesta_logica -> OR_LOGICAL
Rule 83    for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
Rule 84    initialization -> VARIABLE IGUAL valor
Rule 85    initialization -> empty
Rule 86    increment -> VARIABLE INCREMENT
Rule 87    increment -> VARIABLE DECREMENT
Rule 88    increment -> VARIABLE DECREMENT PUNTOYCOMA
Rule 89    increment -> VARIABLE PLUS_ASSIGN valor
Rule 90    increment -> VARIABLE MINUS_ASSIGN valor
Rule 91    increment -> empty
Rule 92    increment -> VARIABLE INCREMENT PUNTOYCOMA
Rule 93    empty -> <empty>
Rule 94    estructurasDatos -> array
Rule 95    estructurasDatos -> lista
Rule 96    estructurasDatos -> diccionario
Rule 97    array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
Rule 98    array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
Rule 99    array -> VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA
Rule 100   array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
Rule 101   array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
Rule 102   elementos -> elemento
Rule 103   elementos -> elementos COMA elemento
Rule 104   elemento -> valor
Rule 105   elemento -> lista
Rule 106   elemento -> clave_valor
Rule 107   clave_valor -> valor ARROW valor
Rule 108   lista -> LBRACKET RBRACKET
Rule 109   lista -> LBRACKET elementos RBRACKET
Rule 110   diccionario -> LBRACE pares RBRACE
Rule 111   pares -> par
Rule 112   pares -> pares COMA par
Rule 113   par -> STRING ARROW valor
Rule 114   funciones -> funcion
Rule 115   funciones -> funcioninbuilt
Rule 116   funciones -> funcion_anonima
Rule 117   funciones -> arrow_function
Rule 118   funcion -> FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE
Rule 119   funcion -> FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE
Rule 120   funcioninbuilt -> VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA
Rule 121   funcioninbuilt -> VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA
Rule 122   funcionesdefin -> STRLEN
Rule 123   funcionesdefin -> STRPOS
Rule 124   funcionesdefin -> ARRAY_PUSH
Rule 125   funcionesdefin -> ARRAY_POP
Rule 126   funcionesdefin -> IN_ARRAY
Rule 127   funcionesdefin -> COUNT
Rule 128   funcionesdefin -> SORT
Rule 129   operaciones -> operacion
Rule 130   operaciones -> operacion PUNTOYCOMA
Rule 131   operaciones -> operacion operadorAritmetico operaciones
Rule 132   operaciones -> VARIABLE IGUAL operaciones
Rule 133   operaciones -> VARIABLE
Rule 134   funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
Rule 135   parametros -> STRING
Rule 136   parametros -> parametros COMA STRING
Rule 137   parametros -> VARIABLE
Rule 138   parametros -> parametros COMA VARIABLE
Rule 139   arrow_function -> VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA
Rule 140   parameter_list -> VARIABLE
Rule 141   parameter_list -> VARIABLE COMA parameter_list
Rule 142   expression -> VARIABLE
Rule 143   expression -> NUMBER
Rule 144   expression -> VARIABLE TIMES VARIABLE
Rule 145   expression -> VARIABLE PLUS VARIABLE
Rule 146   expression -> VARIABLE MINUS VARIABLE
Rule 147   expression -> VARIABLE DIVIDE VARIABLE
Rule 148   expression -> VARIABLE TIMES NUMBER
Rule 149   expression -> VARIABLE PLUS NUMBER
Rule 150   expression -> VARIABLE MINUS NUMBER
Rule 151   expression -> VARIABLE DIVIDE NUMBER
Rule 152   expression -> VARIABLE MOD VARIABLE

Terminals, with rules where they appear

ABSTRACT             : 
AND                  : 
AND_LOGICAL          : 61 81
AND_WORD             : 
ARRAY                : 64 65 97 98 99
ARRAY_POP            : 125
ARRAY_PUSH           : 124
ARROW                : 107 113 139
AS                   : 
BOOLEAN              : 26
BREAK                : 
CALLABLE             : 
CASE                 : 
CATCH                : 
CLASS                : 
CLONE                : 
CLOSEINTER           : 
COMA                 : 22 31 103 112 136 138 141
COMENTARIO_LINEA     : 
COMENTARIO_MULTILINEA : 
COMENTARIO_SHELL     : 
COUNT                : 127
DECLARE              : 
DECREMENT            : 87 88
DEFAULT              : 
DIE                  : 
DIVIDE               : 71 147 151
DIVIDE_ASSIGN        : 
DOBLEDIVIDE          : 
DOBLEPUNTO           : 
ECHO                 : 20 21 22 38
ELSE                 : 74
ELSEIF               : 
EMPTY                : 
ENDFOR               : 
ENDFOREACH           : 
ENDIF                : 
ENDSWITCH            : 
ENDWHILE             : 
EQUAL                : 54
EVAL                 : 
EXIT                 : 
EXTENDS              : 
FGETS                : 36
FINAL                : 
FINALLY              : 
FLOAT                : 24
FN                   : 139
FOR                  : 83
FOREACH              : 
FUNCTION             : 118 119 134
GLOBAL               : 
GOTO                 : 
GREATER_EQUAL        : 
ID                   : 28 118 119
IDENTICAL            : 58
IF                   : 43 44
IGUAL                : 34 35 36 57 63 64 65 84 97 98 99 100 101 120 132 134 139
IMPLEMENTS           : 
INCLUDE              : 
INCREMENT            : 86 92
INSTANCEOF           : 
INSTEADOF            : 
INTERFACE            : 
IN_ARRAY             : 126
ISSET                : 
LBRACE               : 110
LBRACKET             : 37 38 100 101 108 109
LESS_EQUAL           : 
LIST                 : 
LLLAVE               : 43 44 74 75 83 118 119 134
LPAREN               : 16 17 18 19 34 35 36 43 44 65 75 83 97 98 99 118 119 120 121 134 139
MATCH                : 
MAYOR                : 50 59
MAYORIGUAL           : 51
MENOR                : 52 60
MENORIGUAL           : 53
MENOR_MAYOR          : 
MINUS                : 69 146 150
MINUS_ASSIGN         : 90
MOD                  : 72 152
MODULO_ASSIGN        : 
NEW                  : 
NOT_EQUAL            : 56
NOT_IDENTICAL        : 55
NOT_LOGICAL          : 
NUMBER               : 23 143 148 149 150 151
NUMERAL              : 
OR                   : 
OR_LOGICAL           : 62 82
OR_WORD              : 
PHP_END              : 1
PHP_START            : 1
PLUS                 : 68 145 149
PLUS_ASSIGN          : 89
POT                  : 73
PRINT                : 16 17
PRINT_R              : 18 19
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
PUNTO                : 33
PUNTOYCOMA           : 16 17 18 19 20 21 22 34 35 36 38 63 64 65 66 83 83 88 92 97 98 99 100 101 120 121 130 134 139
RBRACE               : 110
RBRACKET             : 37 38 100 101 108 109
READLINE             : 34 35
REQUIRE              : 
RETURN               : 
RLLAVE               : 43 44 74 75 83 118 119 134
RPAREN               : 16 17 18 19 34 35 36 43 44 65 75 83 97 98 99 118 119 120 121 134 139
SORT                 : 128
STATIC               : 
STRING               : 25 34 113 135 136
STRLEN               : 122
STRPOS               : 123
SWITCH               : 
THROW                : 
TIMES                : 70 144 148
TIMES_ASSIGN         : 
TRAIT                : 
TRY                  : 
UNSET                : 
USE                  : 
VAR                  : 
VARIABLE             : 22 27 34 35 36 36 37 38 44 47 47 49 63 64 65 79 80 80 84 86 87 88 89 90 92 97 98 99 100 101 120 121 132 133 134 137 138 139 140 141 142 144 144 145 145 146 146 147 147 148 149 150 151 152 152
VIRGULILLA           : 
WHILE                : 75
XOR                  : 
XOR_WORD             : 
YIELD                : 
YIELD_FROM           : 
error                : 

Nonterminals, with rules where they appear

argumentos           : 17 19 31
array                : 94
arrow_function       : 117
asignacion           : 11
clave_valor          : 106
comparacion          : 45 46
comparaciones        : 43 46
comparador           : 48 78 79 80
comparadorNum        : 47 49
compuesta_logica     : 77
concatenar           : 21 33
condicion            : 75 77 77 83
condicion_simple     : 76
cuerpo               : 1
diccionario          : 96
elemento             : 102 103
elementos            : 65 98 101 103 109
else                 : 41
empty                : 3 85 91
estructurasControl   : 10
estructurasDatos     : 12
expression           : 29 139
for_statement        : 42
funcion              : 114
funcion_anonima      : 116
funciones            : 13
funcionesdefin       : 120 121
funcioninbuilt       : 115
if                   : 40
imprimir             : 6
increment            : 15 83
indexacion           : 9
initialization       : 83
input                : 8
instruccion          : 4 5
instrucciones        : 2 5 43 44 74 75 83 118 119 134
lista                : 95 105
operacion            : 14 67 67 129 130 131
operaciones          : 120 131 132
operadorAritmetico   : 66 67 131
operadores           : 46
padre                : 0
par                  : 111 112
parameter_list       : 139 141
parametros           : 119 134 136 138
pares                : 110 112
solicitud_datos      : 7
valor                : 16 18 20 22 22 30 31 32 33 37 38 48 48 49 63 66 66 78 78 79 84 89 90 99 104 107 107 113
while                : 39

Parsing method: LALR

state 0

    (0) S' -> . padre
    (1) padre -> . PHP_START cuerpo PHP_END

    PHP_START       shift and go to state 2

    padre                          shift and go to state 1

state 1

    (0) S' -> padre .



state 2

    (1) padre -> PHP_START . cuerpo PHP_END
    (2) cuerpo -> . instrucciones
    (3) cuerpo -> . empty
    (4) instrucciones -> . instruccion
    (5) instrucciones -> . instrucciones instruccion
    (93) empty -> .
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) instruccion -> . operacion
    (15) instruccion -> . increment
    (16) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (19) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (20) imprimir -> . ECHO valor PUNTOYCOMA
    (21) imprimir -> . ECHO concatenar PUNTOYCOMA
    (22) imprimir -> . ECHO valor COMA VARIABLE valor PUNTOYCOMA
    (34) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA
    (36) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (37) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (38) indexacion -> . ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (39) estructurasControl -> . while
    (40) estructurasControl -> . if
    (41) estructurasControl -> . else
    (42) estructurasControl -> . for_statement
    (63) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (64) asignacion -> . VARIABLE IGUAL ARRAY PUNTOYCOMA
    (65) asignacion -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (94) estructurasDatos -> . array
    (95) estructurasDatos -> . lista
    (96) estructurasDatos -> . diccionario
    (114) funciones -> . funcion
    (115) funciones -> . funcioninbuilt
    (116) funciones -> . funcion_anonima
    (117) funciones -> . arrow_function
    (66) operacion -> . valor operadorAritmetico valor PUNTOYCOMA
    (67) operacion -> . operacion operadorAritmetico operacion
    (86) increment -> . VARIABLE INCREMENT
    (87) increment -> . VARIABLE DECREMENT
    (88) increment -> . VARIABLE DECREMENT PUNTOYCOMA
    (89) increment -> . VARIABLE PLUS_ASSIGN valor
    (90) increment -> . VARIABLE MINUS_ASSIGN valor
    (91) increment -> . empty
    (92) increment -> . VARIABLE INCREMENT PUNTOYCOMA
    (75) while -> . WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE
    (43) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (44) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (74) else -> . ELSE LLLAVE instrucciones RLLAVE
    (83) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (97) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (98) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (99) array -> . VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA
    (100) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (101) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (108) lista -> . LBRACKET RBRACKET
    (109) lista -> . LBRACKET elementos RBRACKET
    (110) diccionario -> . LBRACE pares RBRACE
    (118) funcion -> . FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE
    (119) funcion -> . FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE
    (120) funcioninbuilt -> . VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA
    (121) funcioninbuilt -> . VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA
    (134) funcion_anonima -> . VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (139) arrow_function -> . VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINT_R resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    PHP_END         reduce using rule 93 (empty -> .)
    PRINT           shift and go to state 17
    PRINT_R         shift and go to state 19
    ECHO            shift and go to state 20
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    FOR             shift and go to state 38
    LBRACKET        shift and go to state 23
    LBRACE          shift and go to state 39
    FUNCTION        shift and go to state 40
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    ID              shift and go to state 41

  ! PRINT           [ reduce using rule 93 (empty -> .) ]
  ! PRINT_R         [ reduce using rule 93 (empty -> .) ]
  ! ECHO            [ reduce using rule 93 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 93 (empty -> .) ]
  ! WHILE           [ reduce using rule 93 (empty -> .) ]
  ! IF              [ reduce using rule 93 (empty -> .) ]
  ! ELSE            [ reduce using rule 93 (empty -> .) ]
  ! FOR             [ reduce using rule 93 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 93 (empty -> .) ]
  ! LBRACE          [ reduce using rule 93 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 93 (empty -> .) ]
  ! NUMBER          [ reduce using rule 93 (empty -> .) ]
  ! FLOAT           [ reduce using rule 93 (empty -> .) ]
  ! STRING          [ reduce using rule 93 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 93 (empty -> .) ]
  ! ID              [ reduce using rule 93 (empty -> .) ]

    cuerpo                         shift and go to state 3
    instrucciones                  shift and go to state 4
    empty                          shift and go to state 5
    instruccion                    shift and go to state 6
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    operacion                      shift and go to state 15
    increment                      shift and go to state 16
    valor                          shift and go to state 18
    while                          shift and go to state 24
    if                             shift and go to state 25
    else                           shift and go to state 26
    for_statement                  shift and go to state 27
    array                          shift and go to state 28
    lista                          shift and go to state 29
    diccionario                    shift and go to state 30
    funcion                        shift and go to state 31
    funcioninbuilt                 shift and go to state 32
    funcion_anonima                shift and go to state 33
    arrow_function                 shift and go to state 34
    expression                     shift and go to state 42

state 3

    (1) padre -> PHP_START cuerpo . PHP_END

    PHP_END         shift and go to state 46


state 4

    (2) cuerpo -> instrucciones .
    (5) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) instruccion -> . operacion
    (15) instruccion -> . increment
    (16) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (19) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (20) imprimir -> . ECHO valor PUNTOYCOMA
    (21) imprimir -> . ECHO concatenar PUNTOYCOMA
    (22) imprimir -> . ECHO valor COMA VARIABLE valor PUNTOYCOMA
    (34) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA
    (36) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (37) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (38) indexacion -> . ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (39) estructurasControl -> . while
    (40) estructurasControl -> . if
    (41) estructurasControl -> . else
    (42) estructurasControl -> . for_statement
    (63) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (64) asignacion -> . VARIABLE IGUAL ARRAY PUNTOYCOMA
    (65) asignacion -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (94) estructurasDatos -> . array
    (95) estructurasDatos -> . lista
    (96) estructurasDatos -> . diccionario
    (114) funciones -> . funcion
    (115) funciones -> . funcioninbuilt
    (116) funciones -> . funcion_anonima
    (117) funciones -> . arrow_function
    (66) operacion -> . valor operadorAritmetico valor PUNTOYCOMA
    (67) operacion -> . operacion operadorAritmetico operacion
    (86) increment -> . VARIABLE INCREMENT
    (87) increment -> . VARIABLE DECREMENT
    (88) increment -> . VARIABLE DECREMENT PUNTOYCOMA
    (89) increment -> . VARIABLE PLUS_ASSIGN valor
    (90) increment -> . VARIABLE MINUS_ASSIGN valor
    (91) increment -> . empty
    (92) increment -> . VARIABLE INCREMENT PUNTOYCOMA
    (75) while -> . WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE
    (43) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (44) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (74) else -> . ELSE LLLAVE instrucciones RLLAVE
    (83) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (97) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (98) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (99) array -> . VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA
    (100) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (101) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (108) lista -> . LBRACKET RBRACKET
    (109) lista -> . LBRACKET elementos RBRACKET
    (110) diccionario -> . LBRACE pares RBRACE
    (118) funcion -> . FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE
    (119) funcion -> . FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE
    (120) funcioninbuilt -> . VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA
    (121) funcioninbuilt -> . VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA
    (134) funcion_anonima -> . VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (139) arrow_function -> . VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (93) empty -> .
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINT_R resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! reduce/reduce conflict for PHP_END resolved using rule 2 (cuerpo -> instrucciones .)
    PHP_END         reduce using rule 2 (cuerpo -> instrucciones .)
    PRINT           shift and go to state 17
    PRINT_R         shift and go to state 19
    ECHO            shift and go to state 20
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    FOR             shift and go to state 38
    LBRACKET        shift and go to state 23
    LBRACE          shift and go to state 39
    FUNCTION        shift and go to state 40
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    ID              shift and go to state 41

  ! PRINT           [ reduce using rule 93 (empty -> .) ]
  ! PRINT_R         [ reduce using rule 93 (empty -> .) ]
  ! ECHO            [ reduce using rule 93 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 93 (empty -> .) ]
  ! WHILE           [ reduce using rule 93 (empty -> .) ]
  ! IF              [ reduce using rule 93 (empty -> .) ]
  ! ELSE            [ reduce using rule 93 (empty -> .) ]
  ! FOR             [ reduce using rule 93 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 93 (empty -> .) ]
  ! LBRACE          [ reduce using rule 93 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 93 (empty -> .) ]
  ! NUMBER          [ reduce using rule 93 (empty -> .) ]
  ! FLOAT           [ reduce using rule 93 (empty -> .) ]
  ! STRING          [ reduce using rule 93 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 93 (empty -> .) ]
  ! ID              [ reduce using rule 93 (empty -> .) ]
  ! PHP_END         [ reduce using rule 93 (empty -> .) ]

    instruccion                    shift and go to state 47
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    operacion                      shift and go to state 15
    increment                      shift and go to state 16
    valor                          shift and go to state 18
    while                          shift and go to state 24
    if                             shift and go to state 25
    else                           shift and go to state 26
    for_statement                  shift and go to state 27
    array                          shift and go to state 28
    lista                          shift and go to state 29
    diccionario                    shift and go to state 30
    funcion                        shift and go to state 31
    funcioninbuilt                 shift and go to state 32
    funcion_anonima                shift and go to state 33
    arrow_function                 shift and go to state 34
    empty                          shift and go to state 48
    expression                     shift and go to state 42

state 5

    (3) cuerpo -> empty .
    (91) increment -> empty .

  ! reduce/reduce conflict for PHP_END resolved using rule 3 (cuerpo -> empty .)
    PHP_END         reduce using rule 3 (cuerpo -> empty .)
    PRINT           reduce using rule 91 (increment -> empty .)
    PRINT_R         reduce using rule 91 (increment -> empty .)
    ECHO            reduce using rule 91 (increment -> empty .)
    VARIABLE        reduce using rule 91 (increment -> empty .)
    WHILE           reduce using rule 91 (increment -> empty .)
    IF              reduce using rule 91 (increment -> empty .)
    ELSE            reduce using rule 91 (increment -> empty .)
    FOR             reduce using rule 91 (increment -> empty .)
    LBRACKET        reduce using rule 91 (increment -> empty .)
    LBRACE          reduce using rule 91 (increment -> empty .)
    FUNCTION        reduce using rule 91 (increment -> empty .)
    NUMBER          reduce using rule 91 (increment -> empty .)
    FLOAT           reduce using rule 91 (increment -> empty .)
    STRING          reduce using rule 91 (increment -> empty .)
    BOOLEAN         reduce using rule 91 (increment -> empty .)
    ID              reduce using rule 91 (increment -> empty .)

  ! PHP_END         [ reduce using rule 91 (increment -> empty .) ]


state 6

    (4) instrucciones -> instruccion .

    PRINT           reduce using rule 4 (instrucciones -> instruccion .)
    PRINT_R         reduce using rule 4 (instrucciones -> instruccion .)
    ECHO            reduce using rule 4 (instrucciones -> instruccion .)
    VARIABLE        reduce using rule 4 (instrucciones -> instruccion .)
    WHILE           reduce using rule 4 (instrucciones -> instruccion .)
    IF              reduce using rule 4 (instrucciones -> instruccion .)
    ELSE            reduce using rule 4 (instrucciones -> instruccion .)
    FOR             reduce using rule 4 (instrucciones -> instruccion .)
    LBRACKET        reduce using rule 4 (instrucciones -> instruccion .)
    LBRACE          reduce using rule 4 (instrucciones -> instruccion .)
    FUNCTION        reduce using rule 4 (instrucciones -> instruccion .)
    NUMBER          reduce using rule 4 (instrucciones -> instruccion .)
    FLOAT           reduce using rule 4 (instrucciones -> instruccion .)
    STRING          reduce using rule 4 (instrucciones -> instruccion .)
    BOOLEAN         reduce using rule 4 (instrucciones -> instruccion .)
    ID              reduce using rule 4 (instrucciones -> instruccion .)
    PHP_END         reduce using rule 4 (instrucciones -> instruccion .)
    RLLAVE          reduce using rule 4 (instrucciones -> instruccion .)


state 7

    (6) instruccion -> imprimir .

    PRINT           reduce using rule 6 (instruccion -> imprimir .)
    PRINT_R         reduce using rule 6 (instruccion -> imprimir .)
    ECHO            reduce using rule 6 (instruccion -> imprimir .)
    VARIABLE        reduce using rule 6 (instruccion -> imprimir .)
    WHILE           reduce using rule 6 (instruccion -> imprimir .)
    IF              reduce using rule 6 (instruccion -> imprimir .)
    ELSE            reduce using rule 6 (instruccion -> imprimir .)
    FOR             reduce using rule 6 (instruccion -> imprimir .)
    LBRACKET        reduce using rule 6 (instruccion -> imprimir .)
    LBRACE          reduce using rule 6 (instruccion -> imprimir .)
    FUNCTION        reduce using rule 6 (instruccion -> imprimir .)
    NUMBER          reduce using rule 6 (instruccion -> imprimir .)
    FLOAT           reduce using rule 6 (instruccion -> imprimir .)
    STRING          reduce using rule 6 (instruccion -> imprimir .)
    BOOLEAN         reduce using rule 6 (instruccion -> imprimir .)
    ID              reduce using rule 6 (instruccion -> imprimir .)
    PHP_END         reduce using rule 6 (instruccion -> imprimir .)
    RLLAVE          reduce using rule 6 (instruccion -> imprimir .)


state 8

    (7) instruccion -> solicitud_datos .

    PRINT           reduce using rule 7 (instruccion -> solicitud_datos .)
    PRINT_R         reduce using rule 7 (instruccion -> solicitud_datos .)
    ECHO            reduce using rule 7 (instruccion -> solicitud_datos .)
    VARIABLE        reduce using rule 7 (instruccion -> solicitud_datos .)
    WHILE           reduce using rule 7 (instruccion -> solicitud_datos .)
    IF              reduce using rule 7 (instruccion -> solicitud_datos .)
    ELSE            reduce using rule 7 (instruccion -> solicitud_datos .)
    FOR             reduce using rule 7 (instruccion -> solicitud_datos .)
    LBRACKET        reduce using rule 7 (instruccion -> solicitud_datos .)
    LBRACE          reduce using rule 7 (instruccion -> solicitud_datos .)
    FUNCTION        reduce using rule 7 (instruccion -> solicitud_datos .)
    NUMBER          reduce using rule 7 (instruccion -> solicitud_datos .)
    FLOAT           reduce using rule 7 (instruccion -> solicitud_datos .)
    STRING          reduce using rule 7 (instruccion -> solicitud_datos .)
    BOOLEAN         reduce using rule 7 (instruccion -> solicitud_datos .)
    ID              reduce using rule 7 (instruccion -> solicitud_datos .)
    PHP_END         reduce using rule 7 (instruccion -> solicitud_datos .)
    RLLAVE          reduce using rule 7 (instruccion -> solicitud_datos .)


state 9

    (8) instruccion -> input .

    PRINT           reduce using rule 8 (instruccion -> input .)
    PRINT_R         reduce using rule 8 (instruccion -> input .)
    ECHO            reduce using rule 8 (instruccion -> input .)
    VARIABLE        reduce using rule 8 (instruccion -> input .)
    WHILE           reduce using rule 8 (instruccion -> input .)
    IF              reduce using rule 8 (instruccion -> input .)
    ELSE            reduce using rule 8 (instruccion -> input .)
    FOR             reduce using rule 8 (instruccion -> input .)
    LBRACKET        reduce using rule 8 (instruccion -> input .)
    LBRACE          reduce using rule 8 (instruccion -> input .)
    FUNCTION        reduce using rule 8 (instruccion -> input .)
    NUMBER          reduce using rule 8 (instruccion -> input .)
    FLOAT           reduce using rule 8 (instruccion -> input .)
    STRING          reduce using rule 8 (instruccion -> input .)
    BOOLEAN         reduce using rule 8 (instruccion -> input .)
    ID              reduce using rule 8 (instruccion -> input .)
    PHP_END         reduce using rule 8 (instruccion -> input .)
    RLLAVE          reduce using rule 8 (instruccion -> input .)


state 10

    (9) instruccion -> indexacion .

    PRINT           reduce using rule 9 (instruccion -> indexacion .)
    PRINT_R         reduce using rule 9 (instruccion -> indexacion .)
    ECHO            reduce using rule 9 (instruccion -> indexacion .)
    VARIABLE        reduce using rule 9 (instruccion -> indexacion .)
    WHILE           reduce using rule 9 (instruccion -> indexacion .)
    IF              reduce using rule 9 (instruccion -> indexacion .)
    ELSE            reduce using rule 9 (instruccion -> indexacion .)
    FOR             reduce using rule 9 (instruccion -> indexacion .)
    LBRACKET        reduce using rule 9 (instruccion -> indexacion .)
    LBRACE          reduce using rule 9 (instruccion -> indexacion .)
    FUNCTION        reduce using rule 9 (instruccion -> indexacion .)
    NUMBER          reduce using rule 9 (instruccion -> indexacion .)
    FLOAT           reduce using rule 9 (instruccion -> indexacion .)
    STRING          reduce using rule 9 (instruccion -> indexacion .)
    BOOLEAN         reduce using rule 9 (instruccion -> indexacion .)
    ID              reduce using rule 9 (instruccion -> indexacion .)
    PHP_END         reduce using rule 9 (instruccion -> indexacion .)
    RLLAVE          reduce using rule 9 (instruccion -> indexacion .)


state 11

    (10) instruccion -> estructurasControl .

    PRINT           reduce using rule 10 (instruccion -> estructurasControl .)
    PRINT_R         reduce using rule 10 (instruccion -> estructurasControl .)
    ECHO            reduce using rule 10 (instruccion -> estructurasControl .)
    VARIABLE        reduce using rule 10 (instruccion -> estructurasControl .)
    WHILE           reduce using rule 10 (instruccion -> estructurasControl .)
    IF              reduce using rule 10 (instruccion -> estructurasControl .)
    ELSE            reduce using rule 10 (instruccion -> estructurasControl .)
    FOR             reduce using rule 10 (instruccion -> estructurasControl .)
    LBRACKET        reduce using rule 10 (instruccion -> estructurasControl .)
    LBRACE          reduce using rule 10 (instruccion -> estructurasControl .)
    FUNCTION        reduce using rule 10 (instruccion -> estructurasControl .)
    NUMBER          reduce using rule 10 (instruccion -> estructurasControl .)
    FLOAT           reduce using rule 10 (instruccion -> estructurasControl .)
    STRING          reduce using rule 10 (instruccion -> estructurasControl .)
    BOOLEAN         reduce using rule 10 (instruccion -> estructurasControl .)
    ID              reduce using rule 10 (instruccion -> estructurasControl .)
    PHP_END         reduce using rule 10 (instruccion -> estructurasControl .)
    RLLAVE          reduce using rule 10 (instruccion -> estructurasControl .)


state 12

    (11) instruccion -> asignacion .

    PRINT           reduce using rule 11 (instruccion -> asignacion .)
    PRINT_R         reduce using rule 11 (instruccion -> asignacion .)
    ECHO            reduce using rule 11 (instruccion -> asignacion .)
    VARIABLE        reduce using rule 11 (instruccion -> asignacion .)
    WHILE           reduce using rule 11 (instruccion -> asignacion .)
    IF              reduce using rule 11 (instruccion -> asignacion .)
    ELSE            reduce using rule 11 (instruccion -> asignacion .)
    FOR             reduce using rule 11 (instruccion -> asignacion .)
    LBRACKET        reduce using rule 11 (instruccion -> asignacion .)
    LBRACE          reduce using rule 11 (instruccion -> asignacion .)
    FUNCTION        reduce using rule 11 (instruccion -> asignacion .)
    NUMBER          reduce using rule 11 (instruccion -> asignacion .)
    FLOAT           reduce using rule 11 (instruccion -> asignacion .)
    STRING          reduce using rule 11 (instruccion -> asignacion .)
    BOOLEAN         reduce using rule 11 (instruccion -> asignacion .)
    ID              reduce using rule 11 (instruccion -> asignacion .)
    PHP_END         reduce using rule 11 (instruccion -> asignacion .)
    RLLAVE          reduce using rule 11 (instruccion -> asignacion .)


state 13

    (12) instruccion -> estructurasDatos .

    PRINT           reduce using rule 12 (instruccion -> estructurasDatos .)
    PRINT_R         reduce using rule 12 (instruccion -> estructurasDatos .)
    ECHO            reduce using rule 12 (instruccion -> estructurasDatos .)
    VARIABLE        reduce using rule 12 (instruccion -> estructurasDatos .)
    WHILE           reduce using rule 12 (instruccion -> estructurasDatos .)
    IF              reduce using rule 12 (instruccion -> estructurasDatos .)
    ELSE            reduce using rule 12 (instruccion -> estructurasDatos .)
    FOR             reduce using rule 12 (instruccion -> estructurasDatos .)
    LBRACKET        reduce using rule 12 (instruccion -> estructurasDatos .)
    LBRACE          reduce using rule 12 (instruccion -> estructurasDatos .)
    FUNCTION        reduce using rule 12 (instruccion -> estructurasDatos .)
    NUMBER          reduce using rule 12 (instruccion -> estructurasDatos .)
    FLOAT           reduce using rule 12 (instruccion -> estructurasDatos .)
    STRING          reduce using rule 12 (instruccion -> estructurasDatos .)
    BOOLEAN         reduce using rule 12 (instruccion -> estructurasDatos .)
    ID              reduce using rule 12 (instruccion -> estructurasDatos .)
    PHP_END         reduce using rule 12 (instruccion -> estructurasDatos .)
    RLLAVE          reduce using rule 12 (instruccion -> estructurasDatos .)


state 14

    (13) instruccion -> funciones .

    PRINT           reduce using rule 13 (instruccion -> funciones .)
    PRINT_R         reduce using rule 13 (instruccion -> funciones .)
    ECHO            reduce using rule 13 (instruccion -> funciones .)
    VARIABLE        reduce using rule 13 (instruccion -> funciones .)
    WHILE           reduce using rule 13 (instruccion -> funciones .)
    IF              reduce using rule 13 (instruccion -> funciones .)
    ELSE            reduce using rule 13 (instruccion -> funciones .)
    FOR             reduce using rule 13 (instruccion -> funciones .)
    LBRACKET        reduce using rule 13 (instruccion -> funciones .)
    LBRACE          reduce using rule 13 (instruccion -> funciones .)
    FUNCTION        reduce using rule 13 (instruccion -> funciones .)
    NUMBER          reduce using rule 13 (instruccion -> funciones .)
    FLOAT           reduce using rule 13 (instruccion -> funciones .)
    STRING          reduce using rule 13 (instruccion -> funciones .)
    BOOLEAN         reduce using rule 13 (instruccion -> funciones .)
    ID              reduce using rule 13 (instruccion -> funciones .)
    PHP_END         reduce using rule 13 (instruccion -> funciones .)
    RLLAVE          reduce using rule 13 (instruccion -> funciones .)


state 15

    (14) instruccion -> operacion .
    (67) operacion -> operacion . operadorAritmetico operacion
    (68) operadorAritmetico -> . PLUS
    (69) operadorAritmetico -> . MINUS
    (70) operadorAritmetico -> . TIMES
    (71) operadorAritmetico -> . DIVIDE
    (72) operadorAritmetico -> . MOD
    (73) operadorAritmetico -> . POT

    PRINT           reduce using rule 14 (instruccion -> operacion .)
    PRINT_R         reduce using rule 14 (instruccion -> operacion .)
    ECHO            reduce using rule 14 (instruccion -> operacion .)
    VARIABLE        reduce using rule 14 (instruccion -> operacion .)
    WHILE           reduce using rule 14 (instruccion -> operacion .)
    IF              reduce using rule 14 (instruccion -> operacion .)
    ELSE            reduce using rule 14 (instruccion -> operacion .)
    FOR             reduce using rule 14 (instruccion -> operacion .)
    LBRACKET        reduce using rule 14 (instruccion -> operacion .)
    LBRACE          reduce using rule 14 (instruccion -> operacion .)
    FUNCTION        reduce using rule 14 (instruccion -> operacion .)
    NUMBER          reduce using rule 14 (instruccion -> operacion .)
    FLOAT           reduce using rule 14 (instruccion -> operacion .)
    STRING          reduce using rule 14 (instruccion -> operacion .)
    BOOLEAN         reduce using rule 14 (instruccion -> operacion .)
    ID              reduce using rule 14 (instruccion -> operacion .)
    PHP_END         reduce using rule 14 (instruccion -> operacion .)
    RLLAVE          reduce using rule 14 (instruccion -> operacion .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MOD             shift and go to state 54
    POT             shift and go to state 55

    operadorAritmetico             shift and go to state 49

state 16

    (15) instruccion -> increment .

    PRINT           reduce using rule 15 (instruccion -> increment .)
    PRINT_R         reduce using rule 15 (instruccion -> increment .)
    ECHO            reduce using rule 15 (instruccion -> increment .)
    VARIABLE        reduce using rule 15 (instruccion -> increment .)
    WHILE           reduce using rule 15 (instruccion -> increment .)
    IF              reduce using rule 15 (instruccion -> increment .)
    ELSE            reduce using rule 15 (instruccion -> increment .)
    FOR             reduce using rule 15 (instruccion -> increment .)
    LBRACKET        reduce using rule 15 (instruccion -> increment .)
    LBRACE          reduce using rule 15 (instruccion -> increment .)
    FUNCTION        reduce using rule 15 (instruccion -> increment .)
    NUMBER          reduce using rule 15 (instruccion -> increment .)
    FLOAT           reduce using rule 15 (instruccion -> increment .)
    STRING          reduce using rule 15 (instruccion -> increment .)
    BOOLEAN         reduce using rule 15 (instruccion -> increment .)
    ID              reduce using rule 15 (instruccion -> increment .)
    PHP_END         reduce using rule 15 (instruccion -> increment .)
    RLLAVE          reduce using rule 15 (instruccion -> increment .)


state 17

    (16) imprimir -> PRINT . LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> PRINT . LPAREN argumentos RPAREN PUNTOYCOMA

    LPAREN          shift and go to state 56


state 18

    (66) operacion -> valor . operadorAritmetico valor PUNTOYCOMA
    (68) operadorAritmetico -> . PLUS
    (69) operadorAritmetico -> . MINUS
    (70) operadorAritmetico -> . TIMES
    (71) operadorAritmetico -> . DIVIDE
    (72) operadorAritmetico -> . MOD
    (73) operadorAritmetico -> . POT

    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MOD             shift and go to state 54
    POT             shift and go to state 55

    operadorAritmetico             shift and go to state 57

state 19

    (18) imprimir -> PRINT_R . LPAREN valor RPAREN PUNTOYCOMA
    (19) imprimir -> PRINT_R . LPAREN argumentos RPAREN PUNTOYCOMA

    LPAREN          shift and go to state 58


state 20

    (20) imprimir -> ECHO . valor PUNTOYCOMA
    (21) imprimir -> ECHO . concatenar PUNTOYCOMA
    (22) imprimir -> ECHO . valor COMA VARIABLE valor PUNTOYCOMA
    (38) indexacion -> ECHO . VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (32) concatenar -> . valor
    (33) concatenar -> . valor PUNTO concatenar
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

    VARIABLE        shift and go to state 61
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    ID              shift and go to state 41

    valor                          shift and go to state 59
    concatenar                     shift and go to state 60
    expression                     shift and go to state 42

state 21

    (34) solicitud_datos -> VARIABLE . IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> VARIABLE . IGUAL READLINE LPAREN RPAREN PUNTOYCOMA
    (36) input -> VARIABLE . IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (37) indexacion -> VARIABLE . LBRACKET valor RBRACKET
    (63) asignacion -> VARIABLE . IGUAL valor PUNTOYCOMA
    (64) asignacion -> VARIABLE . IGUAL ARRAY PUNTOYCOMA
    (65) asignacion -> VARIABLE . IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (86) increment -> VARIABLE . INCREMENT
    (87) increment -> VARIABLE . DECREMENT
    (88) increment -> VARIABLE . DECREMENT PUNTOYCOMA
    (89) increment -> VARIABLE . PLUS_ASSIGN valor
    (90) increment -> VARIABLE . MINUS_ASSIGN valor
    (92) increment -> VARIABLE . INCREMENT PUNTOYCOMA
    (97) array -> VARIABLE . IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (98) array -> VARIABLE . IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (99) array -> VARIABLE . IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA
    (100) array -> VARIABLE . IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (101) array -> VARIABLE . IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (120) funcioninbuilt -> VARIABLE . IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA
    (121) funcioninbuilt -> VARIABLE . funcionesdefin LPAREN RPAREN PUNTOYCOMA
    (134) funcion_anonima -> VARIABLE . IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (139) arrow_function -> VARIABLE . IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA
    (27) valor -> VARIABLE .
    (142) expression -> VARIABLE .
    (144) expression -> VARIABLE . TIMES VARIABLE
    (145) expression -> VARIABLE . PLUS VARIABLE
    (146) expression -> VARIABLE . MINUS VARIABLE
    (147) expression -> VARIABLE . DIVIDE VARIABLE
    (148) expression -> VARIABLE . TIMES NUMBER
    (149) expression -> VARIABLE . PLUS NUMBER
    (150) expression -> VARIABLE . MINUS NUMBER
    (151) expression -> VARIABLE . DIVIDE NUMBER
    (152) expression -> VARIABLE . MOD VARIABLE
    (122) funcionesdefin -> . STRLEN
    (123) funcionesdefin -> . STRPOS
    (124) funcionesdefin -> . ARRAY_PUSH
    (125) funcionesdefin -> . ARRAY_POP
    (126) funcionesdefin -> . IN_ARRAY
    (127) funcionesdefin -> . COUNT
    (128) funcionesdefin -> . SORT

  ! reduce/reduce conflict for PLUS resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MINUS resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for TIMES resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for POT resolved using rule 27 (valor -> VARIABLE .)
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    IGUAL           shift and go to state 62
    LBRACKET        shift and go to state 63
    INCREMENT       shift and go to state 64
    DECREMENT       shift and go to state 65
    PLUS_ASSIGN     shift and go to state 66
    MINUS_ASSIGN    shift and go to state 67
    POT             reduce using rule 27 (valor -> VARIABLE .)
    TIMES           shift and go to state 69
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    DIVIDE          shift and go to state 72
    MOD             shift and go to state 73
    STRLEN          shift and go to state 74
    STRPOS          shift and go to state 75
    ARRAY_PUSH      shift and go to state 76
    ARRAY_POP       shift and go to state 77
    IN_ARRAY        shift and go to state 78
    COUNT           shift and go to state 79
    SORT            shift and go to state 80

  ! PLUS            [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! MINUS           [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! TIMES           [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! DIVIDE          [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! MOD             [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! PLUS            [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! MINUS           [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! TIMES           [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! DIVIDE          [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! MOD             [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! POT             [ reduce using rule 142 (expression -> VARIABLE .) ]

    funcionesdefin                 shift and go to state 68

state 22

    (25) valor -> STRING .

    PLUS            reduce using rule 25 (valor -> STRING .)
    MINUS           reduce using rule 25 (valor -> STRING .)
    TIMES           reduce using rule 25 (valor -> STRING .)
    DIVIDE          reduce using rule 25 (valor -> STRING .)
    MOD             reduce using rule 25 (valor -> STRING .)
    POT             reduce using rule 25 (valor -> STRING .)
    PUNTOYCOMA      reduce using rule 25 (valor -> STRING .)
    COMA            reduce using rule 25 (valor -> STRING .)
    PUNTO           reduce using rule 25 (valor -> STRING .)
    ARROW           reduce using rule 25 (valor -> STRING .)
    RBRACKET        reduce using rule 25 (valor -> STRING .)
    RPAREN          reduce using rule 25 (valor -> STRING .)
    PRINT           reduce using rule 25 (valor -> STRING .)
    PRINT_R         reduce using rule 25 (valor -> STRING .)
    ECHO            reduce using rule 25 (valor -> STRING .)
    VARIABLE        reduce using rule 25 (valor -> STRING .)
    WHILE           reduce using rule 25 (valor -> STRING .)
    IF              reduce using rule 25 (valor -> STRING .)
    ELSE            reduce using rule 25 (valor -> STRING .)
    FOR             reduce using rule 25 (valor -> STRING .)
    LBRACKET        reduce using rule 25 (valor -> STRING .)
    LBRACE          reduce using rule 25 (valor -> STRING .)
    FUNCTION        reduce using rule 25 (valor -> STRING .)
    NUMBER          reduce using rule 25 (valor -> STRING .)
    FLOAT           reduce using rule 25 (valor -> STRING .)
    STRING          reduce using rule 25 (valor -> STRING .)
    BOOLEAN         reduce using rule 25 (valor -> STRING .)
    ID              reduce using rule 25 (valor -> STRING .)
    PHP_END         reduce using rule 25 (valor -> STRING .)
    RLLAVE          reduce using rule 25 (valor -> STRING .)
    EQUAL           reduce using rule 25 (valor -> STRING .)
    NOT_IDENTICAL   reduce using rule 25 (valor -> STRING .)
    NOT_EQUAL       reduce using rule 25 (valor -> STRING .)
    IGUAL           reduce using rule 25 (valor -> STRING .)
    IDENTICAL       reduce using rule 25 (valor -> STRING .)
    MAYOR           reduce using rule 25 (valor -> STRING .)
    MENOR           reduce using rule 25 (valor -> STRING .)
    RBRACE          reduce using rule 25 (valor -> STRING .)
    AND_LOGICAL     reduce using rule 25 (valor -> STRING .)
    OR_LOGICAL      reduce using rule 25 (valor -> STRING .)


state 23

    (108) lista -> LBRACKET . RBRACKET
    (109) lista -> LBRACKET . elementos RBRACKET
    (102) elementos -> . elemento
    (103) elementos -> . elementos COMA elemento
    (104) elemento -> . valor
    (105) elemento -> . lista
    (106) elemento -> . clave_valor
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (108) lista -> . LBRACKET RBRACKET
    (109) lista -> . LBRACKET elementos RBRACKET
    (107) clave_valor -> . valor ARROW valor
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

    RBRACKET        shift and go to state 81
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    VARIABLE        shift and go to state 87
    ID              shift and go to state 41
    LBRACKET        shift and go to state 23

    elementos                      shift and go to state 82
    elemento                       shift and go to state 83
    valor                          shift and go to state 84
    lista                          shift and go to state 85
    clave_valor                    shift and go to state 86
    expression                     shift and go to state 42

state 24

    (39) estructurasControl -> while .

    PRINT           reduce using rule 39 (estructurasControl -> while .)
    PRINT_R         reduce using rule 39 (estructurasControl -> while .)
    ECHO            reduce using rule 39 (estructurasControl -> while .)
    VARIABLE        reduce using rule 39 (estructurasControl -> while .)
    WHILE           reduce using rule 39 (estructurasControl -> while .)
    IF              reduce using rule 39 (estructurasControl -> while .)
    ELSE            reduce using rule 39 (estructurasControl -> while .)
    FOR             reduce using rule 39 (estructurasControl -> while .)
    LBRACKET        reduce using rule 39 (estructurasControl -> while .)
    LBRACE          reduce using rule 39 (estructurasControl -> while .)
    FUNCTION        reduce using rule 39 (estructurasControl -> while .)
    NUMBER          reduce using rule 39 (estructurasControl -> while .)
    FLOAT           reduce using rule 39 (estructurasControl -> while .)
    STRING          reduce using rule 39 (estructurasControl -> while .)
    BOOLEAN         reduce using rule 39 (estructurasControl -> while .)
    ID              reduce using rule 39 (estructurasControl -> while .)
    PHP_END         reduce using rule 39 (estructurasControl -> while .)
    RLLAVE          reduce using rule 39 (estructurasControl -> while .)


state 25

    (40) estructurasControl -> if .

    PRINT           reduce using rule 40 (estructurasControl -> if .)
    PRINT_R         reduce using rule 40 (estructurasControl -> if .)
    ECHO            reduce using rule 40 (estructurasControl -> if .)
    VARIABLE        reduce using rule 40 (estructurasControl -> if .)
    WHILE           reduce using rule 40 (estructurasControl -> if .)
    IF              reduce using rule 40 (estructurasControl -> if .)
    ELSE            reduce using rule 40 (estructurasControl -> if .)
    FOR             reduce using rule 40 (estructurasControl -> if .)
    LBRACKET        reduce using rule 40 (estructurasControl -> if .)
    LBRACE          reduce using rule 40 (estructurasControl -> if .)
    FUNCTION        reduce using rule 40 (estructurasControl -> if .)
    NUMBER          reduce using rule 40 (estructurasControl -> if .)
    FLOAT           reduce using rule 40 (estructurasControl -> if .)
    STRING          reduce using rule 40 (estructurasControl -> if .)
    BOOLEAN         reduce using rule 40 (estructurasControl -> if .)
    ID              reduce using rule 40 (estructurasControl -> if .)
    PHP_END         reduce using rule 40 (estructurasControl -> if .)
    RLLAVE          reduce using rule 40 (estructurasControl -> if .)


state 26

    (41) estructurasControl -> else .

    PRINT           reduce using rule 41 (estructurasControl -> else .)
    PRINT_R         reduce using rule 41 (estructurasControl -> else .)
    ECHO            reduce using rule 41 (estructurasControl -> else .)
    VARIABLE        reduce using rule 41 (estructurasControl -> else .)
    WHILE           reduce using rule 41 (estructurasControl -> else .)
    IF              reduce using rule 41 (estructurasControl -> else .)
    ELSE            reduce using rule 41 (estructurasControl -> else .)
    FOR             reduce using rule 41 (estructurasControl -> else .)
    LBRACKET        reduce using rule 41 (estructurasControl -> else .)
    LBRACE          reduce using rule 41 (estructurasControl -> else .)
    FUNCTION        reduce using rule 41 (estructurasControl -> else .)
    NUMBER          reduce using rule 41 (estructurasControl -> else .)
    FLOAT           reduce using rule 41 (estructurasControl -> else .)
    STRING          reduce using rule 41 (estructurasControl -> else .)
    BOOLEAN         reduce using rule 41 (estructurasControl -> else .)
    ID              reduce using rule 41 (estructurasControl -> else .)
    PHP_END         reduce using rule 41 (estructurasControl -> else .)
    RLLAVE          reduce using rule 41 (estructurasControl -> else .)


state 27

    (42) estructurasControl -> for_statement .

    PRINT           reduce using rule 42 (estructurasControl -> for_statement .)
    PRINT_R         reduce using rule 42 (estructurasControl -> for_statement .)
    ECHO            reduce using rule 42 (estructurasControl -> for_statement .)
    VARIABLE        reduce using rule 42 (estructurasControl -> for_statement .)
    WHILE           reduce using rule 42 (estructurasControl -> for_statement .)
    IF              reduce using rule 42 (estructurasControl -> for_statement .)
    ELSE            reduce using rule 42 (estructurasControl -> for_statement .)
    FOR             reduce using rule 42 (estructurasControl -> for_statement .)
    LBRACKET        reduce using rule 42 (estructurasControl -> for_statement .)
    LBRACE          reduce using rule 42 (estructurasControl -> for_statement .)
    FUNCTION        reduce using rule 42 (estructurasControl -> for_statement .)
    NUMBER          reduce using rule 42 (estructurasControl -> for_statement .)
    FLOAT           reduce using rule 42 (estructurasControl -> for_statement .)
    STRING          reduce using rule 42 (estructurasControl -> for_statement .)
    BOOLEAN         reduce using rule 42 (estructurasControl -> for_statement .)
    ID              reduce using rule 42 (estructurasControl -> for_statement .)
    PHP_END         reduce using rule 42 (estructurasControl -> for_statement .)
    RLLAVE          reduce using rule 42 (estructurasControl -> for_statement .)


state 28

    (94) estructurasDatos -> array .

    PRINT           reduce using rule 94 (estructurasDatos -> array .)
    PRINT_R         reduce using rule 94 (estructurasDatos -> array .)
    ECHO            reduce using rule 94 (estructurasDatos -> array .)
    VARIABLE        reduce using rule 94 (estructurasDatos -> array .)
    WHILE           reduce using rule 94 (estructurasDatos -> array .)
    IF              reduce using rule 94 (estructurasDatos -> array .)
    ELSE            reduce using rule 94 (estructurasDatos -> array .)
    FOR             reduce using rule 94 (estructurasDatos -> array .)
    LBRACKET        reduce using rule 94 (estructurasDatos -> array .)
    LBRACE          reduce using rule 94 (estructurasDatos -> array .)
    FUNCTION        reduce using rule 94 (estructurasDatos -> array .)
    NUMBER          reduce using rule 94 (estructurasDatos -> array .)
    FLOAT           reduce using rule 94 (estructurasDatos -> array .)
    STRING          reduce using rule 94 (estructurasDatos -> array .)
    BOOLEAN         reduce using rule 94 (estructurasDatos -> array .)
    ID              reduce using rule 94 (estructurasDatos -> array .)
    PHP_END         reduce using rule 94 (estructurasDatos -> array .)
    RLLAVE          reduce using rule 94 (estructurasDatos -> array .)


state 29

    (95) estructurasDatos -> lista .

    PRINT           reduce using rule 95 (estructurasDatos -> lista .)
    PRINT_R         reduce using rule 95 (estructurasDatos -> lista .)
    ECHO            reduce using rule 95 (estructurasDatos -> lista .)
    VARIABLE        reduce using rule 95 (estructurasDatos -> lista .)
    WHILE           reduce using rule 95 (estructurasDatos -> lista .)
    IF              reduce using rule 95 (estructurasDatos -> lista .)
    ELSE            reduce using rule 95 (estructurasDatos -> lista .)
    FOR             reduce using rule 95 (estructurasDatos -> lista .)
    LBRACKET        reduce using rule 95 (estructurasDatos -> lista .)
    LBRACE          reduce using rule 95 (estructurasDatos -> lista .)
    FUNCTION        reduce using rule 95 (estructurasDatos -> lista .)
    NUMBER          reduce using rule 95 (estructurasDatos -> lista .)
    FLOAT           reduce using rule 95 (estructurasDatos -> lista .)
    STRING          reduce using rule 95 (estructurasDatos -> lista .)
    BOOLEAN         reduce using rule 95 (estructurasDatos -> lista .)
    ID              reduce using rule 95 (estructurasDatos -> lista .)
    PHP_END         reduce using rule 95 (estructurasDatos -> lista .)
    RLLAVE          reduce using rule 95 (estructurasDatos -> lista .)


state 30

    (96) estructurasDatos -> diccionario .

    PRINT           reduce using rule 96 (estructurasDatos -> diccionario .)
    PRINT_R         reduce using rule 96 (estructurasDatos -> diccionario .)
    ECHO            reduce using rule 96 (estructurasDatos -> diccionario .)
    VARIABLE        reduce using rule 96 (estructurasDatos -> diccionario .)
    WHILE           reduce using rule 96 (estructurasDatos -> diccionario .)
    IF              reduce using rule 96 (estructurasDatos -> diccionario .)
    ELSE            reduce using rule 96 (estructurasDatos -> diccionario .)
    FOR             reduce using rule 96 (estructurasDatos -> diccionario .)
    LBRACKET        reduce using rule 96 (estructurasDatos -> diccionario .)
    LBRACE          reduce using rule 96 (estructurasDatos -> diccionario .)
    FUNCTION        reduce using rule 96 (estructurasDatos -> diccionario .)
    NUMBER          reduce using rule 96 (estructurasDatos -> diccionario .)
    FLOAT           reduce using rule 96 (estructurasDatos -> diccionario .)
    STRING          reduce using rule 96 (estructurasDatos -> diccionario .)
    BOOLEAN         reduce using rule 96 (estructurasDatos -> diccionario .)
    ID              reduce using rule 96 (estructurasDatos -> diccionario .)
    PHP_END         reduce using rule 96 (estructurasDatos -> diccionario .)
    RLLAVE          reduce using rule 96 (estructurasDatos -> diccionario .)


state 31

    (114) funciones -> funcion .

    PRINT           reduce using rule 114 (funciones -> funcion .)
    PRINT_R         reduce using rule 114 (funciones -> funcion .)
    ECHO            reduce using rule 114 (funciones -> funcion .)
    VARIABLE        reduce using rule 114 (funciones -> funcion .)
    WHILE           reduce using rule 114 (funciones -> funcion .)
    IF              reduce using rule 114 (funciones -> funcion .)
    ELSE            reduce using rule 114 (funciones -> funcion .)
    FOR             reduce using rule 114 (funciones -> funcion .)
    LBRACKET        reduce using rule 114 (funciones -> funcion .)
    LBRACE          reduce using rule 114 (funciones -> funcion .)
    FUNCTION        reduce using rule 114 (funciones -> funcion .)
    NUMBER          reduce using rule 114 (funciones -> funcion .)
    FLOAT           reduce using rule 114 (funciones -> funcion .)
    STRING          reduce using rule 114 (funciones -> funcion .)
    BOOLEAN         reduce using rule 114 (funciones -> funcion .)
    ID              reduce using rule 114 (funciones -> funcion .)
    PHP_END         reduce using rule 114 (funciones -> funcion .)
    RLLAVE          reduce using rule 114 (funciones -> funcion .)


state 32

    (115) funciones -> funcioninbuilt .

    PRINT           reduce using rule 115 (funciones -> funcioninbuilt .)
    PRINT_R         reduce using rule 115 (funciones -> funcioninbuilt .)
    ECHO            reduce using rule 115 (funciones -> funcioninbuilt .)
    VARIABLE        reduce using rule 115 (funciones -> funcioninbuilt .)
    WHILE           reduce using rule 115 (funciones -> funcioninbuilt .)
    IF              reduce using rule 115 (funciones -> funcioninbuilt .)
    ELSE            reduce using rule 115 (funciones -> funcioninbuilt .)
    FOR             reduce using rule 115 (funciones -> funcioninbuilt .)
    LBRACKET        reduce using rule 115 (funciones -> funcioninbuilt .)
    LBRACE          reduce using rule 115 (funciones -> funcioninbuilt .)
    FUNCTION        reduce using rule 115 (funciones -> funcioninbuilt .)
    NUMBER          reduce using rule 115 (funciones -> funcioninbuilt .)
    FLOAT           reduce using rule 115 (funciones -> funcioninbuilt .)
    STRING          reduce using rule 115 (funciones -> funcioninbuilt .)
    BOOLEAN         reduce using rule 115 (funciones -> funcioninbuilt .)
    ID              reduce using rule 115 (funciones -> funcioninbuilt .)
    PHP_END         reduce using rule 115 (funciones -> funcioninbuilt .)
    RLLAVE          reduce using rule 115 (funciones -> funcioninbuilt .)


state 33

    (116) funciones -> funcion_anonima .

    PRINT           reduce using rule 116 (funciones -> funcion_anonima .)
    PRINT_R         reduce using rule 116 (funciones -> funcion_anonima .)
    ECHO            reduce using rule 116 (funciones -> funcion_anonima .)
    VARIABLE        reduce using rule 116 (funciones -> funcion_anonima .)
    WHILE           reduce using rule 116 (funciones -> funcion_anonima .)
    IF              reduce using rule 116 (funciones -> funcion_anonima .)
    ELSE            reduce using rule 116 (funciones -> funcion_anonima .)
    FOR             reduce using rule 116 (funciones -> funcion_anonima .)
    LBRACKET        reduce using rule 116 (funciones -> funcion_anonima .)
    LBRACE          reduce using rule 116 (funciones -> funcion_anonima .)
    FUNCTION        reduce using rule 116 (funciones -> funcion_anonima .)
    NUMBER          reduce using rule 116 (funciones -> funcion_anonima .)
    FLOAT           reduce using rule 116 (funciones -> funcion_anonima .)
    STRING          reduce using rule 116 (funciones -> funcion_anonima .)
    BOOLEAN         reduce using rule 116 (funciones -> funcion_anonima .)
    ID              reduce using rule 116 (funciones -> funcion_anonima .)
    PHP_END         reduce using rule 116 (funciones -> funcion_anonima .)
    RLLAVE          reduce using rule 116 (funciones -> funcion_anonima .)


state 34

    (117) funciones -> arrow_function .

    PRINT           reduce using rule 117 (funciones -> arrow_function .)
    PRINT_R         reduce using rule 117 (funciones -> arrow_function .)
    ECHO            reduce using rule 117 (funciones -> arrow_function .)
    VARIABLE        reduce using rule 117 (funciones -> arrow_function .)
    WHILE           reduce using rule 117 (funciones -> arrow_function .)
    IF              reduce using rule 117 (funciones -> arrow_function .)
    ELSE            reduce using rule 117 (funciones -> arrow_function .)
    FOR             reduce using rule 117 (funciones -> arrow_function .)
    LBRACKET        reduce using rule 117 (funciones -> arrow_function .)
    LBRACE          reduce using rule 117 (funciones -> arrow_function .)
    FUNCTION        reduce using rule 117 (funciones -> arrow_function .)
    NUMBER          reduce using rule 117 (funciones -> arrow_function .)
    FLOAT           reduce using rule 117 (funciones -> arrow_function .)
    STRING          reduce using rule 117 (funciones -> arrow_function .)
    BOOLEAN         reduce using rule 117 (funciones -> arrow_function .)
    ID              reduce using rule 117 (funciones -> arrow_function .)
    PHP_END         reduce using rule 117 (funciones -> arrow_function .)
    RLLAVE          reduce using rule 117 (funciones -> arrow_function .)


state 35

    (75) while -> WHILE . LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE

    LPAREN          shift and go to state 88


state 36

    (43) if -> IF . LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (44) if -> IF . LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE

    LPAREN          shift and go to state 89


state 37

    (74) else -> ELSE . LLLAVE instrucciones RLLAVE

    LLLAVE          shift and go to state 90


state 38

    (83) for_statement -> FOR . LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE

    LPAREN          shift and go to state 91


state 39

    (110) diccionario -> LBRACE . pares RBRACE
    (111) pares -> . par
    (112) pares -> . pares COMA par
    (113) par -> . STRING ARROW valor

    STRING          shift and go to state 94

    pares                          shift and go to state 92
    par                            shift and go to state 93

state 40

    (118) funcion -> FUNCTION . ID LPAREN RPAREN LLLAVE instrucciones RLLAVE
    (119) funcion -> FUNCTION . ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE

    ID              shift and go to state 95


state 41

    (28) valor -> ID .

    PLUS            reduce using rule 28 (valor -> ID .)
    MINUS           reduce using rule 28 (valor -> ID .)
    TIMES           reduce using rule 28 (valor -> ID .)
    DIVIDE          reduce using rule 28 (valor -> ID .)
    MOD             reduce using rule 28 (valor -> ID .)
    POT             reduce using rule 28 (valor -> ID .)
    PUNTOYCOMA      reduce using rule 28 (valor -> ID .)
    COMA            reduce using rule 28 (valor -> ID .)
    PUNTO           reduce using rule 28 (valor -> ID .)
    ARROW           reduce using rule 28 (valor -> ID .)
    RBRACKET        reduce using rule 28 (valor -> ID .)
    RPAREN          reduce using rule 28 (valor -> ID .)
    PRINT           reduce using rule 28 (valor -> ID .)
    PRINT_R         reduce using rule 28 (valor -> ID .)
    ECHO            reduce using rule 28 (valor -> ID .)
    VARIABLE        reduce using rule 28 (valor -> ID .)
    WHILE           reduce using rule 28 (valor -> ID .)
    IF              reduce using rule 28 (valor -> ID .)
    ELSE            reduce using rule 28 (valor -> ID .)
    FOR             reduce using rule 28 (valor -> ID .)
    LBRACKET        reduce using rule 28 (valor -> ID .)
    LBRACE          reduce using rule 28 (valor -> ID .)
    FUNCTION        reduce using rule 28 (valor -> ID .)
    NUMBER          reduce using rule 28 (valor -> ID .)
    FLOAT           reduce using rule 28 (valor -> ID .)
    STRING          reduce using rule 28 (valor -> ID .)
    BOOLEAN         reduce using rule 28 (valor -> ID .)
    ID              reduce using rule 28 (valor -> ID .)
    PHP_END         reduce using rule 28 (valor -> ID .)
    RLLAVE          reduce using rule 28 (valor -> ID .)
    EQUAL           reduce using rule 28 (valor -> ID .)
    NOT_IDENTICAL   reduce using rule 28 (valor -> ID .)
    NOT_EQUAL       reduce using rule 28 (valor -> ID .)
    IGUAL           reduce using rule 28 (valor -> ID .)
    IDENTICAL       reduce using rule 28 (valor -> ID .)
    MAYOR           reduce using rule 28 (valor -> ID .)
    MENOR           reduce using rule 28 (valor -> ID .)
    RBRACE          reduce using rule 28 (valor -> ID .)
    AND_LOGICAL     reduce using rule 28 (valor -> ID .)
    OR_LOGICAL      reduce using rule 28 (valor -> ID .)


state 42

    (29) valor -> expression .

    PLUS            reduce using rule 29 (valor -> expression .)
    MINUS           reduce using rule 29 (valor -> expression .)
    TIMES           reduce using rule 29 (valor -> expression .)
    DIVIDE          reduce using rule 29 (valor -> expression .)
    MOD             reduce using rule 29 (valor -> expression .)
    POT             reduce using rule 29 (valor -> expression .)
    PUNTOYCOMA      reduce using rule 29 (valor -> expression .)
    COMA            reduce using rule 29 (valor -> expression .)
    PUNTO           reduce using rule 29 (valor -> expression .)
    ARROW           reduce using rule 29 (valor -> expression .)
    RBRACKET        reduce using rule 29 (valor -> expression .)
    RPAREN          reduce using rule 29 (valor -> expression .)
    PRINT           reduce using rule 29 (valor -> expression .)
    PRINT_R         reduce using rule 29 (valor -> expression .)
    ECHO            reduce using rule 29 (valor -> expression .)
    VARIABLE        reduce using rule 29 (valor -> expression .)
    WHILE           reduce using rule 29 (valor -> expression .)
    IF              reduce using rule 29 (valor -> expression .)
    ELSE            reduce using rule 29 (valor -> expression .)
    FOR             reduce using rule 29 (valor -> expression .)
    LBRACKET        reduce using rule 29 (valor -> expression .)
    LBRACE          reduce using rule 29 (valor -> expression .)
    FUNCTION        reduce using rule 29 (valor -> expression .)
    NUMBER          reduce using rule 29 (valor -> expression .)
    FLOAT           reduce using rule 29 (valor -> expression .)
    STRING          reduce using rule 29 (valor -> expression .)
    BOOLEAN         reduce using rule 29 (valor -> expression .)
    ID              reduce using rule 29 (valor -> expression .)
    PHP_END         reduce using rule 29 (valor -> expression .)
    RLLAVE          reduce using rule 29 (valor -> expression .)
    EQUAL           reduce using rule 29 (valor -> expression .)
    NOT_IDENTICAL   reduce using rule 29 (valor -> expression .)
    NOT_EQUAL       reduce using rule 29 (valor -> expression .)
    IGUAL           reduce using rule 29 (valor -> expression .)
    IDENTICAL       reduce using rule 29 (valor -> expression .)
    MAYOR           reduce using rule 29 (valor -> expression .)
    MENOR           reduce using rule 29 (valor -> expression .)
    RBRACE          reduce using rule 29 (valor -> expression .)
    AND_LOGICAL     reduce using rule 29 (valor -> expression .)
    OR_LOGICAL      reduce using rule 29 (valor -> expression .)


state 43

    (23) valor -> NUMBER .
    (143) expression -> NUMBER .

  ! reduce/reduce conflict for PLUS resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for MINUS resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for TIMES resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for MOD resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for POT resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for COMA resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for PUNTO resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for ARROW resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for RPAREN resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for PRINT resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for PRINT_R resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for ECHO resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for WHILE resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for IF resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for ELSE resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for FOR resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for LBRACE resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for NUMBER resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for FLOAT resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for STRING resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for ID resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for PHP_END resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for EQUAL resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for NOT_IDENTICAL resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for IGUAL resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for MAYOR resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for MENOR resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for RBRACE resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for AND_LOGICAL resolved using rule 23 (valor -> NUMBER .)
  ! reduce/reduce conflict for OR_LOGICAL resolved using rule 23 (valor -> NUMBER .)
    PLUS            reduce using rule 23 (valor -> NUMBER .)
    MINUS           reduce using rule 23 (valor -> NUMBER .)
    TIMES           reduce using rule 23 (valor -> NUMBER .)
    DIVIDE          reduce using rule 23 (valor -> NUMBER .)
    MOD             reduce using rule 23 (valor -> NUMBER .)
    POT             reduce using rule 23 (valor -> NUMBER .)
    PUNTOYCOMA      reduce using rule 23 (valor -> NUMBER .)
    COMA            reduce using rule 23 (valor -> NUMBER .)
    PUNTO           reduce using rule 23 (valor -> NUMBER .)
    ARROW           reduce using rule 23 (valor -> NUMBER .)
    RBRACKET        reduce using rule 23 (valor -> NUMBER .)
    RPAREN          reduce using rule 23 (valor -> NUMBER .)
    PRINT           reduce using rule 23 (valor -> NUMBER .)
    PRINT_R         reduce using rule 23 (valor -> NUMBER .)
    ECHO            reduce using rule 23 (valor -> NUMBER .)
    VARIABLE        reduce using rule 23 (valor -> NUMBER .)
    WHILE           reduce using rule 23 (valor -> NUMBER .)
    IF              reduce using rule 23 (valor -> NUMBER .)
    ELSE            reduce using rule 23 (valor -> NUMBER .)
    FOR             reduce using rule 23 (valor -> NUMBER .)
    LBRACKET        reduce using rule 23 (valor -> NUMBER .)
    LBRACE          reduce using rule 23 (valor -> NUMBER .)
    FUNCTION        reduce using rule 23 (valor -> NUMBER .)
    NUMBER          reduce using rule 23 (valor -> NUMBER .)
    FLOAT           reduce using rule 23 (valor -> NUMBER .)
    STRING          reduce using rule 23 (valor -> NUMBER .)
    BOOLEAN         reduce using rule 23 (valor -> NUMBER .)
    ID              reduce using rule 23 (valor -> NUMBER .)
    PHP_END         reduce using rule 23 (valor -> NUMBER .)
    RLLAVE          reduce using rule 23 (valor -> NUMBER .)
    EQUAL           reduce using rule 23 (valor -> NUMBER .)
    NOT_IDENTICAL   reduce using rule 23 (valor -> NUMBER .)
    NOT_EQUAL       reduce using rule 23 (valor -> NUMBER .)
    IGUAL           reduce using rule 23 (valor -> NUMBER .)
    IDENTICAL       reduce using rule 23 (valor -> NUMBER .)
    MAYOR           reduce using rule 23 (valor -> NUMBER .)
    MENOR           reduce using rule 23 (valor -> NUMBER .)
    RBRACE          reduce using rule 23 (valor -> NUMBER .)
    AND_LOGICAL     reduce using rule 23 (valor -> NUMBER .)
    OR_LOGICAL      reduce using rule 23 (valor -> NUMBER .)

  ! PLUS            [ reduce using rule 143 (expression -> NUMBER .) ]
  ! MINUS           [ reduce using rule 143 (expression -> NUMBER .) ]
  ! TIMES           [ reduce using rule 143 (expression -> NUMBER .) ]
  ! DIVIDE          [ reduce using rule 143 (expression -> NUMBER .) ]
  ! MOD             [ reduce using rule 143 (expression -> NUMBER .) ]
  ! POT             [ reduce using rule 143 (expression -> NUMBER .) ]
  ! PUNTOYCOMA      [ reduce using rule 143 (expression -> NUMBER .) ]
  ! COMA            [ reduce using rule 143 (expression -> NUMBER .) ]
  ! PUNTO           [ reduce using rule 143 (expression -> NUMBER .) ]
  ! ARROW           [ reduce using rule 143 (expression -> NUMBER .) ]
  ! RBRACKET        [ reduce using rule 143 (expression -> NUMBER .) ]
  ! RPAREN          [ reduce using rule 143 (expression -> NUMBER .) ]
  ! PRINT           [ reduce using rule 143 (expression -> NUMBER .) ]
  ! PRINT_R         [ reduce using rule 143 (expression -> NUMBER .) ]
  ! ECHO            [ reduce using rule 143 (expression -> NUMBER .) ]
  ! VARIABLE        [ reduce using rule 143 (expression -> NUMBER .) ]
  ! WHILE           [ reduce using rule 143 (expression -> NUMBER .) ]
  ! IF              [ reduce using rule 143 (expression -> NUMBER .) ]
  ! ELSE            [ reduce using rule 143 (expression -> NUMBER .) ]
  ! FOR             [ reduce using rule 143 (expression -> NUMBER .) ]
  ! LBRACKET        [ reduce using rule 143 (expression -> NUMBER .) ]
  ! LBRACE          [ reduce using rule 143 (expression -> NUMBER .) ]
  ! FUNCTION        [ reduce using rule 143 (expression -> NUMBER .) ]
  ! NUMBER          [ reduce using rule 143 (expression -> NUMBER .) ]
  ! FLOAT           [ reduce using rule 143 (expression -> NUMBER .) ]
  ! STRING          [ reduce using rule 143 (expression -> NUMBER .) ]
  ! BOOLEAN         [ reduce using rule 143 (expression -> NUMBER .) ]
  ! ID              [ reduce using rule 143 (expression -> NUMBER .) ]
  ! PHP_END         [ reduce using rule 143 (expression -> NUMBER .) ]
  ! RLLAVE          [ reduce using rule 143 (expression -> NUMBER .) ]
  ! EQUAL           [ reduce using rule 143 (expression -> NUMBER .) ]
  ! NOT_IDENTICAL   [ reduce using rule 143 (expression -> NUMBER .) ]
  ! NOT_EQUAL       [ reduce using rule 143 (expression -> NUMBER .) ]
  ! IGUAL           [ reduce using rule 143 (expression -> NUMBER .) ]
  ! IDENTICAL       [ reduce using rule 143 (expression -> NUMBER .) ]
  ! MAYOR           [ reduce using rule 143 (expression -> NUMBER .) ]
  ! MENOR           [ reduce using rule 143 (expression -> NUMBER .) ]
  ! RBRACE          [ reduce using rule 143 (expression -> NUMBER .) ]
  ! AND_LOGICAL     [ reduce using rule 143 (expression -> NUMBER .) ]
  ! OR_LOGICAL      [ reduce using rule 143 (expression -> NUMBER .) ]


state 44

    (24) valor -> FLOAT .

    PLUS            reduce using rule 24 (valor -> FLOAT .)
    MINUS           reduce using rule 24 (valor -> FLOAT .)
    TIMES           reduce using rule 24 (valor -> FLOAT .)
    DIVIDE          reduce using rule 24 (valor -> FLOAT .)
    MOD             reduce using rule 24 (valor -> FLOAT .)
    POT             reduce using rule 24 (valor -> FLOAT .)
    PUNTOYCOMA      reduce using rule 24 (valor -> FLOAT .)
    COMA            reduce using rule 24 (valor -> FLOAT .)
    PUNTO           reduce using rule 24 (valor -> FLOAT .)
    ARROW           reduce using rule 24 (valor -> FLOAT .)
    RBRACKET        reduce using rule 24 (valor -> FLOAT .)
    RPAREN          reduce using rule 24 (valor -> FLOAT .)
    PRINT           reduce using rule 24 (valor -> FLOAT .)
    PRINT_R         reduce using rule 24 (valor -> FLOAT .)
    ECHO            reduce using rule 24 (valor -> FLOAT .)
    VARIABLE        reduce using rule 24 (valor -> FLOAT .)
    WHILE           reduce using rule 24 (valor -> FLOAT .)
    IF              reduce using rule 24 (valor -> FLOAT .)
    ELSE            reduce using rule 24 (valor -> FLOAT .)
    FOR             reduce using rule 24 (valor -> FLOAT .)
    LBRACKET        reduce using rule 24 (valor -> FLOAT .)
    LBRACE          reduce using rule 24 (valor -> FLOAT .)
    FUNCTION        reduce using rule 24 (valor -> FLOAT .)
    NUMBER          reduce using rule 24 (valor -> FLOAT .)
    FLOAT           reduce using rule 24 (valor -> FLOAT .)
    STRING          reduce using rule 24 (valor -> FLOAT .)
    BOOLEAN         reduce using rule 24 (valor -> FLOAT .)
    ID              reduce using rule 24 (valor -> FLOAT .)
    PHP_END         reduce using rule 24 (valor -> FLOAT .)
    RLLAVE          reduce using rule 24 (valor -> FLOAT .)
    EQUAL           reduce using rule 24 (valor -> FLOAT .)
    NOT_IDENTICAL   reduce using rule 24 (valor -> FLOAT .)
    NOT_EQUAL       reduce using rule 24 (valor -> FLOAT .)
    IGUAL           reduce using rule 24 (valor -> FLOAT .)
    IDENTICAL       reduce using rule 24 (valor -> FLOAT .)
    MAYOR           reduce using rule 24 (valor -> FLOAT .)
    MENOR           reduce using rule 24 (valor -> FLOAT .)
    RBRACE          reduce using rule 24 (valor -> FLOAT .)
    AND_LOGICAL     reduce using rule 24 (valor -> FLOAT .)
    OR_LOGICAL      reduce using rule 24 (valor -> FLOAT .)


state 45

    (26) valor -> BOOLEAN .

    PLUS            reduce using rule 26 (valor -> BOOLEAN .)
    MINUS           reduce using rule 26 (valor -> BOOLEAN .)
    TIMES           reduce using rule 26 (valor -> BOOLEAN .)
    DIVIDE          reduce using rule 26 (valor -> BOOLEAN .)
    MOD             reduce using rule 26 (valor -> BOOLEAN .)
    POT             reduce using rule 26 (valor -> BOOLEAN .)
    PUNTOYCOMA      reduce using rule 26 (valor -> BOOLEAN .)
    COMA            reduce using rule 26 (valor -> BOOLEAN .)
    PUNTO           reduce using rule 26 (valor -> BOOLEAN .)
    ARROW           reduce using rule 26 (valor -> BOOLEAN .)
    RBRACKET        reduce using rule 26 (valor -> BOOLEAN .)
    RPAREN          reduce using rule 26 (valor -> BOOLEAN .)
    PRINT           reduce using rule 26 (valor -> BOOLEAN .)
    PRINT_R         reduce using rule 26 (valor -> BOOLEAN .)
    ECHO            reduce using rule 26 (valor -> BOOLEAN .)
    VARIABLE        reduce using rule 26 (valor -> BOOLEAN .)
    WHILE           reduce using rule 26 (valor -> BOOLEAN .)
    IF              reduce using rule 26 (valor -> BOOLEAN .)
    ELSE            reduce using rule 26 (valor -> BOOLEAN .)
    FOR             reduce using rule 26 (valor -> BOOLEAN .)
    LBRACKET        reduce using rule 26 (valor -> BOOLEAN .)
    LBRACE          reduce using rule 26 (valor -> BOOLEAN .)
    FUNCTION        reduce using rule 26 (valor -> BOOLEAN .)
    NUMBER          reduce using rule 26 (valor -> BOOLEAN .)
    FLOAT           reduce using rule 26 (valor -> BOOLEAN .)
    STRING          reduce using rule 26 (valor -> BOOLEAN .)
    BOOLEAN         reduce using rule 26 (valor -> BOOLEAN .)
    ID              reduce using rule 26 (valor -> BOOLEAN .)
    PHP_END         reduce using rule 26 (valor -> BOOLEAN .)
    RLLAVE          reduce using rule 26 (valor -> BOOLEAN .)
    EQUAL           reduce using rule 26 (valor -> BOOLEAN .)
    NOT_IDENTICAL   reduce using rule 26 (valor -> BOOLEAN .)
    NOT_EQUAL       reduce using rule 26 (valor -> BOOLEAN .)
    IGUAL           reduce using rule 26 (valor -> BOOLEAN .)
    IDENTICAL       reduce using rule 26 (valor -> BOOLEAN .)
    MAYOR           reduce using rule 26 (valor -> BOOLEAN .)
    MENOR           reduce using rule 26 (valor -> BOOLEAN .)
    RBRACE          reduce using rule 26 (valor -> BOOLEAN .)
    AND_LOGICAL     reduce using rule 26 (valor -> BOOLEAN .)
    OR_LOGICAL      reduce using rule 26 (valor -> BOOLEAN .)


state 46

    (1) padre -> PHP_START cuerpo PHP_END .

    $end            reduce using rule 1 (padre -> PHP_START cuerpo PHP_END .)


state 47

    (5) instrucciones -> instrucciones instruccion .

    PRINT           reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    PRINT_R         reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    ECHO            reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    VARIABLE        reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    ELSE            reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    FOR             reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    LBRACKET        reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    LBRACE          reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    FUNCTION        reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    NUMBER          reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    FLOAT           reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    STRING          reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    BOOLEAN         reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    PHP_END         reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    RLLAVE          reduce using rule 5 (instrucciones -> instrucciones instruccion .)


state 48

    (91) increment -> empty .

    PRINT           reduce using rule 91 (increment -> empty .)
    PRINT_R         reduce using rule 91 (increment -> empty .)
    ECHO            reduce using rule 91 (increment -> empty .)
    VARIABLE        reduce using rule 91 (increment -> empty .)
    WHILE           reduce using rule 91 (increment -> empty .)
    IF              reduce using rule 91 (increment -> empty .)
    ELSE            reduce using rule 91 (increment -> empty .)
    FOR             reduce using rule 91 (increment -> empty .)
    LBRACKET        reduce using rule 91 (increment -> empty .)
    LBRACE          reduce using rule 91 (increment -> empty .)
    FUNCTION        reduce using rule 91 (increment -> empty .)
    NUMBER          reduce using rule 91 (increment -> empty .)
    FLOAT           reduce using rule 91 (increment -> empty .)
    STRING          reduce using rule 91 (increment -> empty .)
    BOOLEAN         reduce using rule 91 (increment -> empty .)
    ID              reduce using rule 91 (increment -> empty .)
    PHP_END         reduce using rule 91 (increment -> empty .)
    RLLAVE          reduce using rule 91 (increment -> empty .)
    RPAREN          reduce using rule 91 (increment -> empty .)


state 49

    (67) operacion -> operacion operadorAritmetico . operacion
    (66) operacion -> . valor operadorAritmetico valor PUNTOYCOMA
    (67) operacion -> . operacion operadorAritmetico operacion
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    VARIABLE        shift and go to state 87
    ID              shift and go to state 41

    operacion                      shift and go to state 96
    valor                          shift and go to state 18
    expression                     shift and go to state 42

state 50

    (68) operadorAritmetico -> PLUS .

    NUMBER          reduce using rule 68 (operadorAritmetico -> PLUS .)
    FLOAT           reduce using rule 68 (operadorAritmetico -> PLUS .)
    STRING          reduce using rule 68 (operadorAritmetico -> PLUS .)
    BOOLEAN         reduce using rule 68 (operadorAritmetico -> PLUS .)
    VARIABLE        reduce using rule 68 (operadorAritmetico -> PLUS .)
    ID              reduce using rule 68 (operadorAritmetico -> PLUS .)


state 51

    (69) operadorAritmetico -> MINUS .

    NUMBER          reduce using rule 69 (operadorAritmetico -> MINUS .)
    FLOAT           reduce using rule 69 (operadorAritmetico -> MINUS .)
    STRING          reduce using rule 69 (operadorAritmetico -> MINUS .)
    BOOLEAN         reduce using rule 69 (operadorAritmetico -> MINUS .)
    VARIABLE        reduce using rule 69 (operadorAritmetico -> MINUS .)
    ID              reduce using rule 69 (operadorAritmetico -> MINUS .)


state 52

    (70) operadorAritmetico -> TIMES .

    NUMBER          reduce using rule 70 (operadorAritmetico -> TIMES .)
    FLOAT           reduce using rule 70 (operadorAritmetico -> TIMES .)
    STRING          reduce using rule 70 (operadorAritmetico -> TIMES .)
    BOOLEAN         reduce using rule 70 (operadorAritmetico -> TIMES .)
    VARIABLE        reduce using rule 70 (operadorAritmetico -> TIMES .)
    ID              reduce using rule 70 (operadorAritmetico -> TIMES .)


state 53

    (71) operadorAritmetico -> DIVIDE .

    NUMBER          reduce using rule 71 (operadorAritmetico -> DIVIDE .)
    FLOAT           reduce using rule 71 (operadorAritmetico -> DIVIDE .)
    STRING          reduce using rule 71 (operadorAritmetico -> DIVIDE .)
    BOOLEAN         reduce using rule 71 (operadorAritmetico -> DIVIDE .)
    VARIABLE        reduce using rule 71 (operadorAritmetico -> DIVIDE .)
    ID              reduce using rule 71 (operadorAritmetico -> DIVIDE .)


state 54

    (72) operadorAritmetico -> MOD .

    NUMBER          reduce using rule 72 (operadorAritmetico -> MOD .)
    FLOAT           reduce using rule 72 (operadorAritmetico -> MOD .)
    STRING          reduce using rule 72 (operadorAritmetico -> MOD .)
    BOOLEAN         reduce using rule 72 (operadorAritmetico -> MOD .)
    VARIABLE        reduce using rule 72 (operadorAritmetico -> MOD .)
    ID              reduce using rule 72 (operadorAritmetico -> MOD .)


state 55

    (73) operadorAritmetico -> POT .

    NUMBER          reduce using rule 73 (operadorAritmetico -> POT .)
    FLOAT           reduce using rule 73 (operadorAritmetico -> POT .)
    STRING          reduce using rule 73 (operadorAritmetico -> POT .)
    BOOLEAN         reduce using rule 73 (operadorAritmetico -> POT .)
    VARIABLE        reduce using rule 73 (operadorAritmetico -> POT .)
    ID              reduce using rule 73 (operadorAritmetico -> POT .)


state 56

    (16) imprimir -> PRINT LPAREN . valor RPAREN PUNTOYCOMA
    (17) imprimir -> PRINT LPAREN . argumentos RPAREN PUNTOYCOMA
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (30) argumentos -> . valor
    (31) argumentos -> . argumentos COMA valor
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    VARIABLE        shift and go to state 87
    ID              shift and go to state 41

    valor                          shift and go to state 97
    argumentos                     shift and go to state 98
    expression                     shift and go to state 42

state 57

    (66) operacion -> valor operadorAritmetico . valor PUNTOYCOMA
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    VARIABLE        shift and go to state 87
    ID              shift and go to state 41

    valor                          shift and go to state 99
    expression                     shift and go to state 42

state 58

    (18) imprimir -> PRINT_R LPAREN . valor RPAREN PUNTOYCOMA
    (19) imprimir -> PRINT_R LPAREN . argumentos RPAREN PUNTOYCOMA
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (30) argumentos -> . valor
    (31) argumentos -> . argumentos COMA valor
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    VARIABLE        shift and go to state 87
    ID              shift and go to state 41

    valor                          shift and go to state 100
    argumentos                     shift and go to state 101
    expression                     shift and go to state 42

state 59

    (20) imprimir -> ECHO valor . PUNTOYCOMA
    (22) imprimir -> ECHO valor . COMA VARIABLE valor PUNTOYCOMA
    (32) concatenar -> valor .
    (33) concatenar -> valor . PUNTO concatenar

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 102
    COMA            shift and go to state 103
    PUNTO           shift and go to state 104

  ! PUNTOYCOMA      [ reduce using rule 32 (concatenar -> valor .) ]


state 60

    (21) imprimir -> ECHO concatenar . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 105


state 61

    (38) indexacion -> ECHO VARIABLE . LBRACKET valor RBRACKET PUNTOYCOMA
    (27) valor -> VARIABLE .
    (142) expression -> VARIABLE .
    (144) expression -> VARIABLE . TIMES VARIABLE
    (145) expression -> VARIABLE . PLUS VARIABLE
    (146) expression -> VARIABLE . MINUS VARIABLE
    (147) expression -> VARIABLE . DIVIDE VARIABLE
    (148) expression -> VARIABLE . TIMES NUMBER
    (149) expression -> VARIABLE . PLUS NUMBER
    (150) expression -> VARIABLE . MINUS NUMBER
    (151) expression -> VARIABLE . DIVIDE NUMBER
    (152) expression -> VARIABLE . MOD VARIABLE

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for COMA resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTO resolved using rule 27 (valor -> VARIABLE .)
    LBRACKET        shift and go to state 106
    PUNTOYCOMA      reduce using rule 27 (valor -> VARIABLE .)
    COMA            reduce using rule 27 (valor -> VARIABLE .)
    PUNTO           reduce using rule 27 (valor -> VARIABLE .)
    TIMES           shift and go to state 69
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    DIVIDE          shift and go to state 72
    MOD             shift and go to state 73

  ! PUNTOYCOMA      [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! COMA            [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! PUNTO           [ reduce using rule 142 (expression -> VARIABLE .) ]


state 62

    (34) solicitud_datos -> VARIABLE IGUAL . READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> VARIABLE IGUAL . READLINE LPAREN RPAREN PUNTOYCOMA
    (36) input -> VARIABLE IGUAL . FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (63) asignacion -> VARIABLE IGUAL . valor PUNTOYCOMA
    (64) asignacion -> VARIABLE IGUAL . ARRAY PUNTOYCOMA
    (65) asignacion -> VARIABLE IGUAL . ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (97) array -> VARIABLE IGUAL . ARRAY LPAREN RPAREN PUNTOYCOMA
    (98) array -> VARIABLE IGUAL . ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (99) array -> VARIABLE IGUAL . ARRAY LPAREN valor RPAREN PUNTOYCOMA
    (100) array -> VARIABLE IGUAL . LBRACKET RBRACKET PUNTOYCOMA
    (101) array -> VARIABLE IGUAL . LBRACKET elementos RBRACKET PUNTOYCOMA
    (120) funcioninbuilt -> VARIABLE IGUAL . funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA
    (134) funcion_anonima -> VARIABLE IGUAL . FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (139) arrow_function -> VARIABLE IGUAL . FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (122) funcionesdefin -> . STRLEN
    (123) funcionesdefin -> . STRPOS
    (124) funcionesdefin -> . ARRAY_PUSH
    (125) funcionesdefin -> . ARRAY_POP
    (126) funcionesdefin -> . IN_ARRAY
    (127) funcionesdefin -> . COUNT
    (128) funcionesdefin -> . SORT
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

    READLINE        shift and go to state 107
    FGETS           shift and go to state 108
    ARRAY           shift and go to state 110
    LBRACKET        shift and go to state 111
    FUNCTION        shift and go to state 113
    FN              shift and go to state 114
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    VARIABLE        shift and go to state 87
    ID              shift and go to state 41
    STRLEN          shift and go to state 74
    STRPOS          shift and go to state 75
    ARRAY_PUSH      shift and go to state 76
    ARRAY_POP       shift and go to state 77
    IN_ARRAY        shift and go to state 78
    COUNT           shift and go to state 79
    SORT            shift and go to state 80

    valor                          shift and go to state 109
    funcionesdefin                 shift and go to state 112
    expression                     shift and go to state 42

state 63

    (37) indexacion -> VARIABLE LBRACKET . valor RBRACKET
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    VARIABLE        shift and go to state 87
    ID              shift and go to state 41

    valor                          shift and go to state 115
    expression                     shift and go to state 42

state 64

    (86) increment -> VARIABLE INCREMENT .
    (92) increment -> VARIABLE INCREMENT . PUNTOYCOMA

    PRINT           reduce using rule 86 (increment -> VARIABLE INCREMENT .)
    PRINT_R         reduce using rule 86 (increment -> VARIABLE INCREMENT .)
    ECHO            reduce using rule 86 (increment -> VARIABLE INCREMENT .)
    VARIABLE        reduce using rule 86 (increment -> VARIABLE INCREMENT .)
    WHILE           reduce using rule 86 (increment -> VARIABLE INCREMENT .)
    IF              reduce using rule 86 (increment -> VARIABLE INCREMENT .)
    ELSE            reduce using rule 86 (increment -> VARIABLE INCREMENT .)
    FOR             reduce using rule 86 (increment -> VARIABLE INCREMENT .)
    LBRACKET        reduce using rule 86 (increment -> VARIABLE INCREMENT .)
    LBRACE          reduce using rule 86 (increment -> VARIABLE INCREMENT .)
    FUNCTION        reduce using rule 86 (increment -> VARIABLE INCREMENT .)
    NUMBER          reduce using rule 86 (increment -> VARIABLE INCREMENT .)
    FLOAT           reduce using rule 86 (increment -> VARIABLE INCREMENT .)
    STRING          reduce using rule 86 (increment -> VARIABLE INCREMENT .)
    BOOLEAN         reduce using rule 86 (increment -> VARIABLE INCREMENT .)
    ID              reduce using rule 86 (increment -> VARIABLE INCREMENT .)
    PHP_END         reduce using rule 86 (increment -> VARIABLE INCREMENT .)
    RLLAVE          reduce using rule 86 (increment -> VARIABLE INCREMENT .)
    RPAREN          reduce using rule 86 (increment -> VARIABLE INCREMENT .)
    PUNTOYCOMA      shift and go to state 116


state 65

    (87) increment -> VARIABLE DECREMENT .
    (88) increment -> VARIABLE DECREMENT . PUNTOYCOMA

    PRINT           reduce using rule 87 (increment -> VARIABLE DECREMENT .)
    PRINT_R         reduce using rule 87 (increment -> VARIABLE DECREMENT .)
    ECHO            reduce using rule 87 (increment -> VARIABLE DECREMENT .)
    VARIABLE        reduce using rule 87 (increment -> VARIABLE DECREMENT .)
    WHILE           reduce using rule 87 (increment -> VARIABLE DECREMENT .)
    IF              reduce using rule 87 (increment -> VARIABLE DECREMENT .)
    ELSE            reduce using rule 87 (increment -> VARIABLE DECREMENT .)
    FOR             reduce using rule 87 (increment -> VARIABLE DECREMENT .)
    LBRACKET        reduce using rule 87 (increment -> VARIABLE DECREMENT .)
    LBRACE          reduce using rule 87 (increment -> VARIABLE DECREMENT .)
    FUNCTION        reduce using rule 87 (increment -> VARIABLE DECREMENT .)
    NUMBER          reduce using rule 87 (increment -> VARIABLE DECREMENT .)
    FLOAT           reduce using rule 87 (increment -> VARIABLE DECREMENT .)
    STRING          reduce using rule 87 (increment -> VARIABLE DECREMENT .)
    BOOLEAN         reduce using rule 87 (increment -> VARIABLE DECREMENT .)
    ID              reduce using rule 87 (increment -> VARIABLE DECREMENT .)
    PHP_END         reduce using rule 87 (increment -> VARIABLE DECREMENT .)
    RLLAVE          reduce using rule 87 (increment -> VARIABLE DECREMENT .)
    RPAREN          reduce using rule 87 (increment -> VARIABLE DECREMENT .)
    PUNTOYCOMA      shift and go to state 117


state 66

    (89) increment -> VARIABLE PLUS_ASSIGN . valor
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    VARIABLE        shift and go to state 87
    ID              shift and go to state 41

    valor                          shift and go to state 118
    expression                     shift and go to state 42

state 67

    (90) increment -> VARIABLE MINUS_ASSIGN . valor
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    VARIABLE        shift and go to state 87
    ID              shift and go to state 41

    valor                          shift and go to state 119
    expression                     shift and go to state 42

state 68

    (121) funcioninbuilt -> VARIABLE funcionesdefin . LPAREN RPAREN PUNTOYCOMA

    LPAREN          shift and go to state 120


state 69

    (144) expression -> VARIABLE TIMES . VARIABLE
    (148) expression -> VARIABLE TIMES . NUMBER

    VARIABLE        shift and go to state 121
    NUMBER          shift and go to state 122


state 70

    (145) expression -> VARIABLE PLUS . VARIABLE
    (149) expression -> VARIABLE PLUS . NUMBER

    VARIABLE        shift and go to state 123
    NUMBER          shift and go to state 124


state 71

    (146) expression -> VARIABLE MINUS . VARIABLE
    (150) expression -> VARIABLE MINUS . NUMBER

    VARIABLE        shift and go to state 125
    NUMBER          shift and go to state 126


state 72

    (147) expression -> VARIABLE DIVIDE . VARIABLE
    (151) expression -> VARIABLE DIVIDE . NUMBER

    VARIABLE        shift and go to state 127
    NUMBER          shift and go to state 128


state 73

    (152) expression -> VARIABLE MOD . VARIABLE

    VARIABLE        shift and go to state 129


state 74

    (122) funcionesdefin -> STRLEN .

    LPAREN          reduce using rule 122 (funcionesdefin -> STRLEN .)


state 75

    (123) funcionesdefin -> STRPOS .

    LPAREN          reduce using rule 123 (funcionesdefin -> STRPOS .)


state 76

    (124) funcionesdefin -> ARRAY_PUSH .

    LPAREN          reduce using rule 124 (funcionesdefin -> ARRAY_PUSH .)


state 77

    (125) funcionesdefin -> ARRAY_POP .

    LPAREN          reduce using rule 125 (funcionesdefin -> ARRAY_POP .)


state 78

    (126) funcionesdefin -> IN_ARRAY .

    LPAREN          reduce using rule 126 (funcionesdefin -> IN_ARRAY .)


state 79

    (127) funcionesdefin -> COUNT .

    LPAREN          reduce using rule 127 (funcionesdefin -> COUNT .)


state 80

    (128) funcionesdefin -> SORT .

    LPAREN          reduce using rule 128 (funcionesdefin -> SORT .)


state 81

    (108) lista -> LBRACKET RBRACKET .

    PRINT           reduce using rule 108 (lista -> LBRACKET RBRACKET .)
    PRINT_R         reduce using rule 108 (lista -> LBRACKET RBRACKET .)
    ECHO            reduce using rule 108 (lista -> LBRACKET RBRACKET .)
    VARIABLE        reduce using rule 108 (lista -> LBRACKET RBRACKET .)
    WHILE           reduce using rule 108 (lista -> LBRACKET RBRACKET .)
    IF              reduce using rule 108 (lista -> LBRACKET RBRACKET .)
    ELSE            reduce using rule 108 (lista -> LBRACKET RBRACKET .)
    FOR             reduce using rule 108 (lista -> LBRACKET RBRACKET .)
    LBRACKET        reduce using rule 108 (lista -> LBRACKET RBRACKET .)
    LBRACE          reduce using rule 108 (lista -> LBRACKET RBRACKET .)
    FUNCTION        reduce using rule 108 (lista -> LBRACKET RBRACKET .)
    NUMBER          reduce using rule 108 (lista -> LBRACKET RBRACKET .)
    FLOAT           reduce using rule 108 (lista -> LBRACKET RBRACKET .)
    STRING          reduce using rule 108 (lista -> LBRACKET RBRACKET .)
    BOOLEAN         reduce using rule 108 (lista -> LBRACKET RBRACKET .)
    ID              reduce using rule 108 (lista -> LBRACKET RBRACKET .)
    PHP_END         reduce using rule 108 (lista -> LBRACKET RBRACKET .)
    RBRACKET        reduce using rule 108 (lista -> LBRACKET RBRACKET .)
    COMA            reduce using rule 108 (lista -> LBRACKET RBRACKET .)
    RLLAVE          reduce using rule 108 (lista -> LBRACKET RBRACKET .)
    RPAREN          reduce using rule 108 (lista -> LBRACKET RBRACKET .)


state 82

    (109) lista -> LBRACKET elementos . RBRACKET
    (103) elementos -> elementos . COMA elemento

    RBRACKET        shift and go to state 130
    COMA            shift and go to state 131


state 83

    (102) elementos -> elemento .

    RBRACKET        reduce using rule 102 (elementos -> elemento .)
    COMA            reduce using rule 102 (elementos -> elemento .)
    RPAREN          reduce using rule 102 (elementos -> elemento .)


state 84

    (104) elemento -> valor .
    (107) clave_valor -> valor . ARROW valor

    RBRACKET        reduce using rule 104 (elemento -> valor .)
    COMA            reduce using rule 104 (elemento -> valor .)
    RPAREN          reduce using rule 104 (elemento -> valor .)
    ARROW           shift and go to state 132


state 85

    (105) elemento -> lista .

    RBRACKET        reduce using rule 105 (elemento -> lista .)
    COMA            reduce using rule 105 (elemento -> lista .)
    RPAREN          reduce using rule 105 (elemento -> lista .)


state 86

    (106) elemento -> clave_valor .

    RBRACKET        reduce using rule 106 (elemento -> clave_valor .)
    COMA            reduce using rule 106 (elemento -> clave_valor .)
    RPAREN          reduce using rule 106 (elemento -> clave_valor .)


state 87

    (27) valor -> VARIABLE .
    (142) expression -> VARIABLE .
    (144) expression -> VARIABLE . TIMES VARIABLE
    (145) expression -> VARIABLE . PLUS VARIABLE
    (146) expression -> VARIABLE . MINUS VARIABLE
    (147) expression -> VARIABLE . DIVIDE VARIABLE
    (148) expression -> VARIABLE . TIMES NUMBER
    (149) expression -> VARIABLE . PLUS NUMBER
    (150) expression -> VARIABLE . MINUS NUMBER
    (151) expression -> VARIABLE . DIVIDE NUMBER
    (152) expression -> VARIABLE . MOD VARIABLE

  ! reduce/reduce conflict for ARROW resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for COMA resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PLUS resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MINUS resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for TIMES resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for POT resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PRINT_R resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ECHO resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for FOR resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for LBRACE resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NUMBER resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for FLOAT resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ID resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PHP_END resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTO resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RBRACE resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for AND_LOGICAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for OR_LOGICAL resolved using rule 27 (valor -> VARIABLE .)
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    ARROW           reduce using rule 27 (valor -> VARIABLE .)
    RBRACKET        reduce using rule 27 (valor -> VARIABLE .)
    COMA            reduce using rule 27 (valor -> VARIABLE .)
    POT             reduce using rule 27 (valor -> VARIABLE .)
    RPAREN          reduce using rule 27 (valor -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 27 (valor -> VARIABLE .)
    PRINT           reduce using rule 27 (valor -> VARIABLE .)
    PRINT_R         reduce using rule 27 (valor -> VARIABLE .)
    ECHO            reduce using rule 27 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 27 (valor -> VARIABLE .)
    WHILE           reduce using rule 27 (valor -> VARIABLE .)
    IF              reduce using rule 27 (valor -> VARIABLE .)
    ELSE            reduce using rule 27 (valor -> VARIABLE .)
    FOR             reduce using rule 27 (valor -> VARIABLE .)
    LBRACKET        reduce using rule 27 (valor -> VARIABLE .)
    LBRACE          reduce using rule 27 (valor -> VARIABLE .)
    FUNCTION        reduce using rule 27 (valor -> VARIABLE .)
    NUMBER          reduce using rule 27 (valor -> VARIABLE .)
    FLOAT           reduce using rule 27 (valor -> VARIABLE .)
    STRING          reduce using rule 27 (valor -> VARIABLE .)
    BOOLEAN         reduce using rule 27 (valor -> VARIABLE .)
    ID              reduce using rule 27 (valor -> VARIABLE .)
    PHP_END         reduce using rule 27 (valor -> VARIABLE .)
    RLLAVE          reduce using rule 27 (valor -> VARIABLE .)
    PUNTO           reduce using rule 27 (valor -> VARIABLE .)
    RBRACE          reduce using rule 27 (valor -> VARIABLE .)
    AND_LOGICAL     reduce using rule 27 (valor -> VARIABLE .)
    OR_LOGICAL      reduce using rule 27 (valor -> VARIABLE .)
    TIMES           shift and go to state 69
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    DIVIDE          shift and go to state 72
    MOD             shift and go to state 73

  ! PLUS            [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! MINUS           [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! TIMES           [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! DIVIDE          [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! MOD             [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! ARROW           [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! RBRACKET        [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! COMA            [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! PLUS            [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! MINUS           [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! TIMES           [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! DIVIDE          [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! MOD             [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! POT             [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! RPAREN          [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! PRINT_R         [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! ECHO            [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! IF              [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! FOR             [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! LBRACKET        [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! LBRACE          [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! FUNCTION        [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! NUMBER          [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! FLOAT           [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! STRING          [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! BOOLEAN         [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! ID              [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! PHP_END         [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! RLLAVE          [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! PUNTO           [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! RBRACE          [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! AND_LOGICAL     [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! OR_LOGICAL      [ reduce using rule 142 (expression -> VARIABLE .) ]


state 88

    (75) while -> WHILE LPAREN . condicion RPAREN LLLAVE instrucciones RLLAVE
    (76) condicion -> . condicion_simple
    (77) condicion -> . condicion compuesta_logica condicion
    (78) condicion_simple -> . valor comparador valor
    (79) condicion_simple -> . VARIABLE comparador valor
    (80) condicion_simple -> . VARIABLE comparador VARIABLE
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

    VARIABLE        shift and go to state 136
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    ID              shift and go to state 41

    condicion                      shift and go to state 133
    condicion_simple               shift and go to state 134
    valor                          shift and go to state 135
    expression                     shift and go to state 42

state 89

    (43) if -> IF LPAREN . comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (44) if -> IF LPAREN . VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (45) comparaciones -> . comparacion
    (46) comparaciones -> . comparacion operadores comparaciones
    (47) comparacion -> . VARIABLE comparadorNum VARIABLE
    (48) comparacion -> . valor comparador valor
    (49) comparacion -> . VARIABLE comparadorNum valor
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

    VARIABLE        shift and go to state 138
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    ID              shift and go to state 41

    comparaciones                  shift and go to state 137
    comparacion                    shift and go to state 139
    valor                          shift and go to state 140
    expression                     shift and go to state 42

state 90

    (74) else -> ELSE LLLAVE . instrucciones RLLAVE
    (4) instrucciones -> . instruccion
    (5) instrucciones -> . instrucciones instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) instruccion -> . operacion
    (15) instruccion -> . increment
    (16) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (19) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (20) imprimir -> . ECHO valor PUNTOYCOMA
    (21) imprimir -> . ECHO concatenar PUNTOYCOMA
    (22) imprimir -> . ECHO valor COMA VARIABLE valor PUNTOYCOMA
    (34) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA
    (36) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (37) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (38) indexacion -> . ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (39) estructurasControl -> . while
    (40) estructurasControl -> . if
    (41) estructurasControl -> . else
    (42) estructurasControl -> . for_statement
    (63) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (64) asignacion -> . VARIABLE IGUAL ARRAY PUNTOYCOMA
    (65) asignacion -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (94) estructurasDatos -> . array
    (95) estructurasDatos -> . lista
    (96) estructurasDatos -> . diccionario
    (114) funciones -> . funcion
    (115) funciones -> . funcioninbuilt
    (116) funciones -> . funcion_anonima
    (117) funciones -> . arrow_function
    (66) operacion -> . valor operadorAritmetico valor PUNTOYCOMA
    (67) operacion -> . operacion operadorAritmetico operacion
    (86) increment -> . VARIABLE INCREMENT
    (87) increment -> . VARIABLE DECREMENT
    (88) increment -> . VARIABLE DECREMENT PUNTOYCOMA
    (89) increment -> . VARIABLE PLUS_ASSIGN valor
    (90) increment -> . VARIABLE MINUS_ASSIGN valor
    (91) increment -> . empty
    (92) increment -> . VARIABLE INCREMENT PUNTOYCOMA
    (75) while -> . WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE
    (43) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (44) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (74) else -> . ELSE LLLAVE instrucciones RLLAVE
    (83) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (97) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (98) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (99) array -> . VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA
    (100) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (101) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (108) lista -> . LBRACKET RBRACKET
    (109) lista -> . LBRACKET elementos RBRACKET
    (110) diccionario -> . LBRACE pares RBRACE
    (118) funcion -> . FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE
    (119) funcion -> . FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE
    (120) funcioninbuilt -> . VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA
    (121) funcioninbuilt -> . VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA
    (134) funcion_anonima -> . VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (139) arrow_function -> . VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (93) empty -> .
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINT_R resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    PRINT           shift and go to state 17
    PRINT_R         shift and go to state 19
    ECHO            shift and go to state 20
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    FOR             shift and go to state 38
    LBRACKET        shift and go to state 23
    LBRACE          shift and go to state 39
    FUNCTION        shift and go to state 40
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    ID              shift and go to state 41
    RLLAVE          reduce using rule 93 (empty -> .)

  ! PRINT           [ reduce using rule 93 (empty -> .) ]
  ! PRINT_R         [ reduce using rule 93 (empty -> .) ]
  ! ECHO            [ reduce using rule 93 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 93 (empty -> .) ]
  ! WHILE           [ reduce using rule 93 (empty -> .) ]
  ! IF              [ reduce using rule 93 (empty -> .) ]
  ! ELSE            [ reduce using rule 93 (empty -> .) ]
  ! FOR             [ reduce using rule 93 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 93 (empty -> .) ]
  ! LBRACE          [ reduce using rule 93 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 93 (empty -> .) ]
  ! NUMBER          [ reduce using rule 93 (empty -> .) ]
  ! FLOAT           [ reduce using rule 93 (empty -> .) ]
  ! STRING          [ reduce using rule 93 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 93 (empty -> .) ]
  ! ID              [ reduce using rule 93 (empty -> .) ]

    instrucciones                  shift and go to state 141
    instruccion                    shift and go to state 6
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    operacion                      shift and go to state 15
    increment                      shift and go to state 16
    valor                          shift and go to state 18
    while                          shift and go to state 24
    if                             shift and go to state 25
    else                           shift and go to state 26
    for_statement                  shift and go to state 27
    array                          shift and go to state 28
    lista                          shift and go to state 29
    diccionario                    shift and go to state 30
    funcion                        shift and go to state 31
    funcioninbuilt                 shift and go to state 32
    funcion_anonima                shift and go to state 33
    arrow_function                 shift and go to state 34
    empty                          shift and go to state 48
    expression                     shift and go to state 42

state 91

    (83) for_statement -> FOR LPAREN . initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (84) initialization -> . VARIABLE IGUAL valor
    (85) initialization -> . empty
    (93) empty -> .

    VARIABLE        shift and go to state 143
    PUNTOYCOMA      reduce using rule 93 (empty -> .)

    initialization                 shift and go to state 142
    empty                          shift and go to state 144

state 92

    (110) diccionario -> LBRACE pares . RBRACE
    (112) pares -> pares . COMA par

    RBRACE          shift and go to state 145
    COMA            shift and go to state 146


state 93

    (111) pares -> par .

    RBRACE          reduce using rule 111 (pares -> par .)
    COMA            reduce using rule 111 (pares -> par .)


state 94

    (113) par -> STRING . ARROW valor

    ARROW           shift and go to state 147


state 95

    (118) funcion -> FUNCTION ID . LPAREN RPAREN LLLAVE instrucciones RLLAVE
    (119) funcion -> FUNCTION ID . LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE

    LPAREN          shift and go to state 148


state 96

    (67) operacion -> operacion operadorAritmetico operacion .
    (67) operacion -> operacion . operadorAritmetico operacion
    (68) operadorAritmetico -> . PLUS
    (69) operadorAritmetico -> . MINUS
    (70) operadorAritmetico -> . TIMES
    (71) operadorAritmetico -> . DIVIDE
    (72) operadorAritmetico -> . MOD
    (73) operadorAritmetico -> . POT

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for POT resolved as shift
    PRINT           reduce using rule 67 (operacion -> operacion operadorAritmetico operacion .)
    PRINT_R         reduce using rule 67 (operacion -> operacion operadorAritmetico operacion .)
    ECHO            reduce using rule 67 (operacion -> operacion operadorAritmetico operacion .)
    VARIABLE        reduce using rule 67 (operacion -> operacion operadorAritmetico operacion .)
    WHILE           reduce using rule 67 (operacion -> operacion operadorAritmetico operacion .)
    IF              reduce using rule 67 (operacion -> operacion operadorAritmetico operacion .)
    ELSE            reduce using rule 67 (operacion -> operacion operadorAritmetico operacion .)
    FOR             reduce using rule 67 (operacion -> operacion operadorAritmetico operacion .)
    LBRACKET        reduce using rule 67 (operacion -> operacion operadorAritmetico operacion .)
    LBRACE          reduce using rule 67 (operacion -> operacion operadorAritmetico operacion .)
    FUNCTION        reduce using rule 67 (operacion -> operacion operadorAritmetico operacion .)
    NUMBER          reduce using rule 67 (operacion -> operacion operadorAritmetico operacion .)
    FLOAT           reduce using rule 67 (operacion -> operacion operadorAritmetico operacion .)
    STRING          reduce using rule 67 (operacion -> operacion operadorAritmetico operacion .)
    BOOLEAN         reduce using rule 67 (operacion -> operacion operadorAritmetico operacion .)
    ID              reduce using rule 67 (operacion -> operacion operadorAritmetico operacion .)
    PHP_END         reduce using rule 67 (operacion -> operacion operadorAritmetico operacion .)
    RLLAVE          reduce using rule 67 (operacion -> operacion operadorAritmetico operacion .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MOD             shift and go to state 54
    POT             shift and go to state 55

  ! PLUS            [ reduce using rule 67 (operacion -> operacion operadorAritmetico operacion .) ]
  ! MINUS           [ reduce using rule 67 (operacion -> operacion operadorAritmetico operacion .) ]
  ! TIMES           [ reduce using rule 67 (operacion -> operacion operadorAritmetico operacion .) ]
  ! DIVIDE          [ reduce using rule 67 (operacion -> operacion operadorAritmetico operacion .) ]
  ! MOD             [ reduce using rule 67 (operacion -> operacion operadorAritmetico operacion .) ]
  ! POT             [ reduce using rule 67 (operacion -> operacion operadorAritmetico operacion .) ]

    operadorAritmetico             shift and go to state 49

state 97

    (16) imprimir -> PRINT LPAREN valor . RPAREN PUNTOYCOMA
    (30) argumentos -> valor .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 149
    COMA            reduce using rule 30 (argumentos -> valor .)

  ! RPAREN          [ reduce using rule 30 (argumentos -> valor .) ]


state 98

    (17) imprimir -> PRINT LPAREN argumentos . RPAREN PUNTOYCOMA
    (31) argumentos -> argumentos . COMA valor

    RPAREN          shift and go to state 150
    COMA            shift and go to state 151


state 99

    (66) operacion -> valor operadorAritmetico valor . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 152


state 100

    (18) imprimir -> PRINT_R LPAREN valor . RPAREN PUNTOYCOMA
    (30) argumentos -> valor .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 153
    COMA            reduce using rule 30 (argumentos -> valor .)

  ! RPAREN          [ reduce using rule 30 (argumentos -> valor .) ]


state 101

    (19) imprimir -> PRINT_R LPAREN argumentos . RPAREN PUNTOYCOMA
    (31) argumentos -> argumentos . COMA valor

    RPAREN          shift and go to state 154
    COMA            shift and go to state 151


state 102

    (20) imprimir -> ECHO valor PUNTOYCOMA .

    PRINT           reduce using rule 20 (imprimir -> ECHO valor PUNTOYCOMA .)
    PRINT_R         reduce using rule 20 (imprimir -> ECHO valor PUNTOYCOMA .)
    ECHO            reduce using rule 20 (imprimir -> ECHO valor PUNTOYCOMA .)
    VARIABLE        reduce using rule 20 (imprimir -> ECHO valor PUNTOYCOMA .)
    WHILE           reduce using rule 20 (imprimir -> ECHO valor PUNTOYCOMA .)
    IF              reduce using rule 20 (imprimir -> ECHO valor PUNTOYCOMA .)
    ELSE            reduce using rule 20 (imprimir -> ECHO valor PUNTOYCOMA .)
    FOR             reduce using rule 20 (imprimir -> ECHO valor PUNTOYCOMA .)
    LBRACKET        reduce using rule 20 (imprimir -> ECHO valor PUNTOYCOMA .)
    LBRACE          reduce using rule 20 (imprimir -> ECHO valor PUNTOYCOMA .)
    FUNCTION        reduce using rule 20 (imprimir -> ECHO valor PUNTOYCOMA .)
    NUMBER          reduce using rule 20 (imprimir -> ECHO valor PUNTOYCOMA .)
    FLOAT           reduce using rule 20 (imprimir -> ECHO valor PUNTOYCOMA .)
    STRING          reduce using rule 20 (imprimir -> ECHO valor PUNTOYCOMA .)
    BOOLEAN         reduce using rule 20 (imprimir -> ECHO valor PUNTOYCOMA .)
    ID              reduce using rule 20 (imprimir -> ECHO valor PUNTOYCOMA .)
    PHP_END         reduce using rule 20 (imprimir -> ECHO valor PUNTOYCOMA .)
    RLLAVE          reduce using rule 20 (imprimir -> ECHO valor PUNTOYCOMA .)


state 103

    (22) imprimir -> ECHO valor COMA . VARIABLE valor PUNTOYCOMA

    VARIABLE        shift and go to state 155


state 104

    (33) concatenar -> valor PUNTO . concatenar
    (32) concatenar -> . valor
    (33) concatenar -> . valor PUNTO concatenar
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    VARIABLE        shift and go to state 87
    ID              shift and go to state 41

    valor                          shift and go to state 156
    concatenar                     shift and go to state 157
    expression                     shift and go to state 42

state 105

    (21) imprimir -> ECHO concatenar PUNTOYCOMA .

    PRINT           reduce using rule 21 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    PRINT_R         reduce using rule 21 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    ECHO            reduce using rule 21 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    VARIABLE        reduce using rule 21 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    WHILE           reduce using rule 21 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    IF              reduce using rule 21 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    ELSE            reduce using rule 21 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    FOR             reduce using rule 21 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    LBRACKET        reduce using rule 21 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    LBRACE          reduce using rule 21 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    FUNCTION        reduce using rule 21 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    NUMBER          reduce using rule 21 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    FLOAT           reduce using rule 21 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    STRING          reduce using rule 21 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    BOOLEAN         reduce using rule 21 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    ID              reduce using rule 21 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    PHP_END         reduce using rule 21 (imprimir -> ECHO concatenar PUNTOYCOMA .)
    RLLAVE          reduce using rule 21 (imprimir -> ECHO concatenar PUNTOYCOMA .)


state 106

    (38) indexacion -> ECHO VARIABLE LBRACKET . valor RBRACKET PUNTOYCOMA
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    VARIABLE        shift and go to state 87
    ID              shift and go to state 41

    valor                          shift and go to state 158
    expression                     shift and go to state 42

state 107

    (34) solicitud_datos -> VARIABLE IGUAL READLINE . LPAREN STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> VARIABLE IGUAL READLINE . LPAREN RPAREN PUNTOYCOMA

    LPAREN          shift and go to state 159


state 108

    (36) input -> VARIABLE IGUAL FGETS . LPAREN VARIABLE RPAREN PUNTOYCOMA

    LPAREN          shift and go to state 160


state 109

    (63) asignacion -> VARIABLE IGUAL valor . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 161


state 110

    (64) asignacion -> VARIABLE IGUAL ARRAY . PUNTOYCOMA
    (65) asignacion -> VARIABLE IGUAL ARRAY . LPAREN elementos RPAREN PUNTOYCOMA
    (97) array -> VARIABLE IGUAL ARRAY . LPAREN RPAREN PUNTOYCOMA
    (98) array -> VARIABLE IGUAL ARRAY . LPAREN elementos RPAREN PUNTOYCOMA
    (99) array -> VARIABLE IGUAL ARRAY . LPAREN valor RPAREN PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 162
    LPAREN          shift and go to state 163


state 111

    (100) array -> VARIABLE IGUAL LBRACKET . RBRACKET PUNTOYCOMA
    (101) array -> VARIABLE IGUAL LBRACKET . elementos RBRACKET PUNTOYCOMA
    (102) elementos -> . elemento
    (103) elementos -> . elementos COMA elemento
    (104) elemento -> . valor
    (105) elemento -> . lista
    (106) elemento -> . clave_valor
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (108) lista -> . LBRACKET RBRACKET
    (109) lista -> . LBRACKET elementos RBRACKET
    (107) clave_valor -> . valor ARROW valor
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

    RBRACKET        shift and go to state 164
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    VARIABLE        shift and go to state 87
    ID              shift and go to state 41
    LBRACKET        shift and go to state 23

    elementos                      shift and go to state 165
    elemento                       shift and go to state 83
    valor                          shift and go to state 84
    lista                          shift and go to state 85
    clave_valor                    shift and go to state 86
    expression                     shift and go to state 42

state 112

    (120) funcioninbuilt -> VARIABLE IGUAL funcionesdefin . LPAREN operaciones RPAREN PUNTOYCOMA

    LPAREN          shift and go to state 166


state 113

    (134) funcion_anonima -> VARIABLE IGUAL FUNCTION . LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA

    LPAREN          shift and go to state 167


state 114

    (139) arrow_function -> VARIABLE IGUAL FN . LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA

    LPAREN          shift and go to state 168


state 115

    (37) indexacion -> VARIABLE LBRACKET valor . RBRACKET

    RBRACKET        shift and go to state 169


state 116

    (92) increment -> VARIABLE INCREMENT PUNTOYCOMA .

    PRINT           reduce using rule 92 (increment -> VARIABLE INCREMENT PUNTOYCOMA .)
    PRINT_R         reduce using rule 92 (increment -> VARIABLE INCREMENT PUNTOYCOMA .)
    ECHO            reduce using rule 92 (increment -> VARIABLE INCREMENT PUNTOYCOMA .)
    VARIABLE        reduce using rule 92 (increment -> VARIABLE INCREMENT PUNTOYCOMA .)
    WHILE           reduce using rule 92 (increment -> VARIABLE INCREMENT PUNTOYCOMA .)
    IF              reduce using rule 92 (increment -> VARIABLE INCREMENT PUNTOYCOMA .)
    ELSE            reduce using rule 92 (increment -> VARIABLE INCREMENT PUNTOYCOMA .)
    FOR             reduce using rule 92 (increment -> VARIABLE INCREMENT PUNTOYCOMA .)
    LBRACKET        reduce using rule 92 (increment -> VARIABLE INCREMENT PUNTOYCOMA .)
    LBRACE          reduce using rule 92 (increment -> VARIABLE INCREMENT PUNTOYCOMA .)
    FUNCTION        reduce using rule 92 (increment -> VARIABLE INCREMENT PUNTOYCOMA .)
    NUMBER          reduce using rule 92 (increment -> VARIABLE INCREMENT PUNTOYCOMA .)
    FLOAT           reduce using rule 92 (increment -> VARIABLE INCREMENT PUNTOYCOMA .)
    STRING          reduce using rule 92 (increment -> VARIABLE INCREMENT PUNTOYCOMA .)
    BOOLEAN         reduce using rule 92 (increment -> VARIABLE INCREMENT PUNTOYCOMA .)
    ID              reduce using rule 92 (increment -> VARIABLE INCREMENT PUNTOYCOMA .)
    PHP_END         reduce using rule 92 (increment -> VARIABLE INCREMENT PUNTOYCOMA .)
    RLLAVE          reduce using rule 92 (increment -> VARIABLE INCREMENT PUNTOYCOMA .)
    RPAREN          reduce using rule 92 (increment -> VARIABLE INCREMENT PUNTOYCOMA .)


state 117

    (88) increment -> VARIABLE DECREMENT PUNTOYCOMA .

    PRINT           reduce using rule 88 (increment -> VARIABLE DECREMENT PUNTOYCOMA .)
    PRINT_R         reduce using rule 88 (increment -> VARIABLE DECREMENT PUNTOYCOMA .)
    ECHO            reduce using rule 88 (increment -> VARIABLE DECREMENT PUNTOYCOMA .)
    VARIABLE        reduce using rule 88 (increment -> VARIABLE DECREMENT PUNTOYCOMA .)
    WHILE           reduce using rule 88 (increment -> VARIABLE DECREMENT PUNTOYCOMA .)
    IF              reduce using rule 88 (increment -> VARIABLE DECREMENT PUNTOYCOMA .)
    ELSE            reduce using rule 88 (increment -> VARIABLE DECREMENT PUNTOYCOMA .)
    FOR             reduce using rule 88 (increment -> VARIABLE DECREMENT PUNTOYCOMA .)
    LBRACKET        reduce using rule 88 (increment -> VARIABLE DECREMENT PUNTOYCOMA .)
    LBRACE          reduce using rule 88 (increment -> VARIABLE DECREMENT PUNTOYCOMA .)
    FUNCTION        reduce using rule 88 (increment -> VARIABLE DECREMENT PUNTOYCOMA .)
    NUMBER          reduce using rule 88 (increment -> VARIABLE DECREMENT PUNTOYCOMA .)
    FLOAT           reduce using rule 88 (increment -> VARIABLE DECREMENT PUNTOYCOMA .)
    STRING          reduce using rule 88 (increment -> VARIABLE DECREMENT PUNTOYCOMA .)
    BOOLEAN         reduce using rule 88 (increment -> VARIABLE DECREMENT PUNTOYCOMA .)
    ID              reduce using rule 88 (increment -> VARIABLE DECREMENT PUNTOYCOMA .)
    PHP_END         reduce using rule 88 (increment -> VARIABLE DECREMENT PUNTOYCOMA .)
    RLLAVE          reduce using rule 88 (increment -> VARIABLE DECREMENT PUNTOYCOMA .)
    RPAREN          reduce using rule 88 (increment -> VARIABLE DECREMENT PUNTOYCOMA .)


state 118

    (89) increment -> VARIABLE PLUS_ASSIGN valor .

    PRINT           reduce using rule 89 (increment -> VARIABLE PLUS_ASSIGN valor .)
    PRINT_R         reduce using rule 89 (increment -> VARIABLE PLUS_ASSIGN valor .)
    ECHO            reduce using rule 89 (increment -> VARIABLE PLUS_ASSIGN valor .)
    VARIABLE        reduce using rule 89 (increment -> VARIABLE PLUS_ASSIGN valor .)
    WHILE           reduce using rule 89 (increment -> VARIABLE PLUS_ASSIGN valor .)
    IF              reduce using rule 89 (increment -> VARIABLE PLUS_ASSIGN valor .)
    ELSE            reduce using rule 89 (increment -> VARIABLE PLUS_ASSIGN valor .)
    FOR             reduce using rule 89 (increment -> VARIABLE PLUS_ASSIGN valor .)
    LBRACKET        reduce using rule 89 (increment -> VARIABLE PLUS_ASSIGN valor .)
    LBRACE          reduce using rule 89 (increment -> VARIABLE PLUS_ASSIGN valor .)
    FUNCTION        reduce using rule 89 (increment -> VARIABLE PLUS_ASSIGN valor .)
    NUMBER          reduce using rule 89 (increment -> VARIABLE PLUS_ASSIGN valor .)
    FLOAT           reduce using rule 89 (increment -> VARIABLE PLUS_ASSIGN valor .)
    STRING          reduce using rule 89 (increment -> VARIABLE PLUS_ASSIGN valor .)
    BOOLEAN         reduce using rule 89 (increment -> VARIABLE PLUS_ASSIGN valor .)
    ID              reduce using rule 89 (increment -> VARIABLE PLUS_ASSIGN valor .)
    PHP_END         reduce using rule 89 (increment -> VARIABLE PLUS_ASSIGN valor .)
    RLLAVE          reduce using rule 89 (increment -> VARIABLE PLUS_ASSIGN valor .)
    RPAREN          reduce using rule 89 (increment -> VARIABLE PLUS_ASSIGN valor .)


state 119

    (90) increment -> VARIABLE MINUS_ASSIGN valor .

    PRINT           reduce using rule 90 (increment -> VARIABLE MINUS_ASSIGN valor .)
    PRINT_R         reduce using rule 90 (increment -> VARIABLE MINUS_ASSIGN valor .)
    ECHO            reduce using rule 90 (increment -> VARIABLE MINUS_ASSIGN valor .)
    VARIABLE        reduce using rule 90 (increment -> VARIABLE MINUS_ASSIGN valor .)
    WHILE           reduce using rule 90 (increment -> VARIABLE MINUS_ASSIGN valor .)
    IF              reduce using rule 90 (increment -> VARIABLE MINUS_ASSIGN valor .)
    ELSE            reduce using rule 90 (increment -> VARIABLE MINUS_ASSIGN valor .)
    FOR             reduce using rule 90 (increment -> VARIABLE MINUS_ASSIGN valor .)
    LBRACKET        reduce using rule 90 (increment -> VARIABLE MINUS_ASSIGN valor .)
    LBRACE          reduce using rule 90 (increment -> VARIABLE MINUS_ASSIGN valor .)
    FUNCTION        reduce using rule 90 (increment -> VARIABLE MINUS_ASSIGN valor .)
    NUMBER          reduce using rule 90 (increment -> VARIABLE MINUS_ASSIGN valor .)
    FLOAT           reduce using rule 90 (increment -> VARIABLE MINUS_ASSIGN valor .)
    STRING          reduce using rule 90 (increment -> VARIABLE MINUS_ASSIGN valor .)
    BOOLEAN         reduce using rule 90 (increment -> VARIABLE MINUS_ASSIGN valor .)
    ID              reduce using rule 90 (increment -> VARIABLE MINUS_ASSIGN valor .)
    PHP_END         reduce using rule 90 (increment -> VARIABLE MINUS_ASSIGN valor .)
    RLLAVE          reduce using rule 90 (increment -> VARIABLE MINUS_ASSIGN valor .)
    RPAREN          reduce using rule 90 (increment -> VARIABLE MINUS_ASSIGN valor .)


state 120

    (121) funcioninbuilt -> VARIABLE funcionesdefin LPAREN . RPAREN PUNTOYCOMA

    RPAREN          shift and go to state 170


state 121

    (144) expression -> VARIABLE TIMES VARIABLE .

    PLUS            reduce using rule 144 (expression -> VARIABLE TIMES VARIABLE .)
    MINUS           reduce using rule 144 (expression -> VARIABLE TIMES VARIABLE .)
    TIMES           reduce using rule 144 (expression -> VARIABLE TIMES VARIABLE .)
    DIVIDE          reduce using rule 144 (expression -> VARIABLE TIMES VARIABLE .)
    MOD             reduce using rule 144 (expression -> VARIABLE TIMES VARIABLE .)
    POT             reduce using rule 144 (expression -> VARIABLE TIMES VARIABLE .)
    PUNTOYCOMA      reduce using rule 144 (expression -> VARIABLE TIMES VARIABLE .)
    COMA            reduce using rule 144 (expression -> VARIABLE TIMES VARIABLE .)
    PUNTO           reduce using rule 144 (expression -> VARIABLE TIMES VARIABLE .)
    ARROW           reduce using rule 144 (expression -> VARIABLE TIMES VARIABLE .)
    RBRACKET        reduce using rule 144 (expression -> VARIABLE TIMES VARIABLE .)
    RPAREN          reduce using rule 144 (expression -> VARIABLE TIMES VARIABLE .)
    PRINT           reduce using rule 144 (expression -> VARIABLE TIMES VARIABLE .)
    PRINT_R         reduce using rule 144 (expression -> VARIABLE TIMES VARIABLE .)
    ECHO            reduce using rule 144 (expression -> VARIABLE TIMES VARIABLE .)
    VARIABLE        reduce using rule 144 (expression -> VARIABLE TIMES VARIABLE .)
    WHILE           reduce using rule 144 (expression -> VARIABLE TIMES VARIABLE .)
    IF              reduce using rule 144 (expression -> VARIABLE TIMES VARIABLE .)
    ELSE            reduce using rule 144 (expression -> VARIABLE TIMES VARIABLE .)
    FOR             reduce using rule 144 (expression -> VARIABLE TIMES VARIABLE .)
    LBRACKET        reduce using rule 144 (expression -> VARIABLE TIMES VARIABLE .)
    LBRACE          reduce using rule 144 (expression -> VARIABLE TIMES VARIABLE .)
    FUNCTION        reduce using rule 144 (expression -> VARIABLE TIMES VARIABLE .)
    NUMBER          reduce using rule 144 (expression -> VARIABLE TIMES VARIABLE .)
    FLOAT           reduce using rule 144 (expression -> VARIABLE TIMES VARIABLE .)
    STRING          reduce using rule 144 (expression -> VARIABLE TIMES VARIABLE .)
    BOOLEAN         reduce using rule 144 (expression -> VARIABLE TIMES VARIABLE .)
    ID              reduce using rule 144 (expression -> VARIABLE TIMES VARIABLE .)
    PHP_END         reduce using rule 144 (expression -> VARIABLE TIMES VARIABLE .)
    RLLAVE          reduce using rule 144 (expression -> VARIABLE TIMES VARIABLE .)
    EQUAL           reduce using rule 144 (expression -> VARIABLE TIMES VARIABLE .)
    NOT_IDENTICAL   reduce using rule 144 (expression -> VARIABLE TIMES VARIABLE .)
    NOT_EQUAL       reduce using rule 144 (expression -> VARIABLE TIMES VARIABLE .)
    IGUAL           reduce using rule 144 (expression -> VARIABLE TIMES VARIABLE .)
    IDENTICAL       reduce using rule 144 (expression -> VARIABLE TIMES VARIABLE .)
    MAYOR           reduce using rule 144 (expression -> VARIABLE TIMES VARIABLE .)
    MENOR           reduce using rule 144 (expression -> VARIABLE TIMES VARIABLE .)
    RBRACE          reduce using rule 144 (expression -> VARIABLE TIMES VARIABLE .)
    AND_LOGICAL     reduce using rule 144 (expression -> VARIABLE TIMES VARIABLE .)
    OR_LOGICAL      reduce using rule 144 (expression -> VARIABLE TIMES VARIABLE .)


state 122

    (148) expression -> VARIABLE TIMES NUMBER .

    PLUS            reduce using rule 148 (expression -> VARIABLE TIMES NUMBER .)
    MINUS           reduce using rule 148 (expression -> VARIABLE TIMES NUMBER .)
    TIMES           reduce using rule 148 (expression -> VARIABLE TIMES NUMBER .)
    DIVIDE          reduce using rule 148 (expression -> VARIABLE TIMES NUMBER .)
    MOD             reduce using rule 148 (expression -> VARIABLE TIMES NUMBER .)
    POT             reduce using rule 148 (expression -> VARIABLE TIMES NUMBER .)
    PUNTOYCOMA      reduce using rule 148 (expression -> VARIABLE TIMES NUMBER .)
    COMA            reduce using rule 148 (expression -> VARIABLE TIMES NUMBER .)
    PUNTO           reduce using rule 148 (expression -> VARIABLE TIMES NUMBER .)
    ARROW           reduce using rule 148 (expression -> VARIABLE TIMES NUMBER .)
    RBRACKET        reduce using rule 148 (expression -> VARIABLE TIMES NUMBER .)
    RPAREN          reduce using rule 148 (expression -> VARIABLE TIMES NUMBER .)
    PRINT           reduce using rule 148 (expression -> VARIABLE TIMES NUMBER .)
    PRINT_R         reduce using rule 148 (expression -> VARIABLE TIMES NUMBER .)
    ECHO            reduce using rule 148 (expression -> VARIABLE TIMES NUMBER .)
    VARIABLE        reduce using rule 148 (expression -> VARIABLE TIMES NUMBER .)
    WHILE           reduce using rule 148 (expression -> VARIABLE TIMES NUMBER .)
    IF              reduce using rule 148 (expression -> VARIABLE TIMES NUMBER .)
    ELSE            reduce using rule 148 (expression -> VARIABLE TIMES NUMBER .)
    FOR             reduce using rule 148 (expression -> VARIABLE TIMES NUMBER .)
    LBRACKET        reduce using rule 148 (expression -> VARIABLE TIMES NUMBER .)
    LBRACE          reduce using rule 148 (expression -> VARIABLE TIMES NUMBER .)
    FUNCTION        reduce using rule 148 (expression -> VARIABLE TIMES NUMBER .)
    NUMBER          reduce using rule 148 (expression -> VARIABLE TIMES NUMBER .)
    FLOAT           reduce using rule 148 (expression -> VARIABLE TIMES NUMBER .)
    STRING          reduce using rule 148 (expression -> VARIABLE TIMES NUMBER .)
    BOOLEAN         reduce using rule 148 (expression -> VARIABLE TIMES NUMBER .)
    ID              reduce using rule 148 (expression -> VARIABLE TIMES NUMBER .)
    PHP_END         reduce using rule 148 (expression -> VARIABLE TIMES NUMBER .)
    RLLAVE          reduce using rule 148 (expression -> VARIABLE TIMES NUMBER .)
    EQUAL           reduce using rule 148 (expression -> VARIABLE TIMES NUMBER .)
    NOT_IDENTICAL   reduce using rule 148 (expression -> VARIABLE TIMES NUMBER .)
    NOT_EQUAL       reduce using rule 148 (expression -> VARIABLE TIMES NUMBER .)
    IGUAL           reduce using rule 148 (expression -> VARIABLE TIMES NUMBER .)
    IDENTICAL       reduce using rule 148 (expression -> VARIABLE TIMES NUMBER .)
    MAYOR           reduce using rule 148 (expression -> VARIABLE TIMES NUMBER .)
    MENOR           reduce using rule 148 (expression -> VARIABLE TIMES NUMBER .)
    RBRACE          reduce using rule 148 (expression -> VARIABLE TIMES NUMBER .)
    AND_LOGICAL     reduce using rule 148 (expression -> VARIABLE TIMES NUMBER .)
    OR_LOGICAL      reduce using rule 148 (expression -> VARIABLE TIMES NUMBER .)


state 123

    (145) expression -> VARIABLE PLUS VARIABLE .

    PLUS            reduce using rule 145 (expression -> VARIABLE PLUS VARIABLE .)
    MINUS           reduce using rule 145 (expression -> VARIABLE PLUS VARIABLE .)
    TIMES           reduce using rule 145 (expression -> VARIABLE PLUS VARIABLE .)
    DIVIDE          reduce using rule 145 (expression -> VARIABLE PLUS VARIABLE .)
    MOD             reduce using rule 145 (expression -> VARIABLE PLUS VARIABLE .)
    POT             reduce using rule 145 (expression -> VARIABLE PLUS VARIABLE .)
    PUNTOYCOMA      reduce using rule 145 (expression -> VARIABLE PLUS VARIABLE .)
    COMA            reduce using rule 145 (expression -> VARIABLE PLUS VARIABLE .)
    PUNTO           reduce using rule 145 (expression -> VARIABLE PLUS VARIABLE .)
    ARROW           reduce using rule 145 (expression -> VARIABLE PLUS VARIABLE .)
    RBRACKET        reduce using rule 145 (expression -> VARIABLE PLUS VARIABLE .)
    RPAREN          reduce using rule 145 (expression -> VARIABLE PLUS VARIABLE .)
    PRINT           reduce using rule 145 (expression -> VARIABLE PLUS VARIABLE .)
    PRINT_R         reduce using rule 145 (expression -> VARIABLE PLUS VARIABLE .)
    ECHO            reduce using rule 145 (expression -> VARIABLE PLUS VARIABLE .)
    VARIABLE        reduce using rule 145 (expression -> VARIABLE PLUS VARIABLE .)
    WHILE           reduce using rule 145 (expression -> VARIABLE PLUS VARIABLE .)
    IF              reduce using rule 145 (expression -> VARIABLE PLUS VARIABLE .)
    ELSE            reduce using rule 145 (expression -> VARIABLE PLUS VARIABLE .)
    FOR             reduce using rule 145 (expression -> VARIABLE PLUS VARIABLE .)
    LBRACKET        reduce using rule 145 (expression -> VARIABLE PLUS VARIABLE .)
    LBRACE          reduce using rule 145 (expression -> VARIABLE PLUS VARIABLE .)
    FUNCTION        reduce using rule 145 (expression -> VARIABLE PLUS VARIABLE .)
    NUMBER          reduce using rule 145 (expression -> VARIABLE PLUS VARIABLE .)
    FLOAT           reduce using rule 145 (expression -> VARIABLE PLUS VARIABLE .)
    STRING          reduce using rule 145 (expression -> VARIABLE PLUS VARIABLE .)
    BOOLEAN         reduce using rule 145 (expression -> VARIABLE PLUS VARIABLE .)
    ID              reduce using rule 145 (expression -> VARIABLE PLUS VARIABLE .)
    PHP_END         reduce using rule 145 (expression -> VARIABLE PLUS VARIABLE .)
    RLLAVE          reduce using rule 145 (expression -> VARIABLE PLUS VARIABLE .)
    EQUAL           reduce using rule 145 (expression -> VARIABLE PLUS VARIABLE .)
    NOT_IDENTICAL   reduce using rule 145 (expression -> VARIABLE PLUS VARIABLE .)
    NOT_EQUAL       reduce using rule 145 (expression -> VARIABLE PLUS VARIABLE .)
    IGUAL           reduce using rule 145 (expression -> VARIABLE PLUS VARIABLE .)
    IDENTICAL       reduce using rule 145 (expression -> VARIABLE PLUS VARIABLE .)
    MAYOR           reduce using rule 145 (expression -> VARIABLE PLUS VARIABLE .)
    MENOR           reduce using rule 145 (expression -> VARIABLE PLUS VARIABLE .)
    RBRACE          reduce using rule 145 (expression -> VARIABLE PLUS VARIABLE .)
    AND_LOGICAL     reduce using rule 145 (expression -> VARIABLE PLUS VARIABLE .)
    OR_LOGICAL      reduce using rule 145 (expression -> VARIABLE PLUS VARIABLE .)


state 124

    (149) expression -> VARIABLE PLUS NUMBER .

    PLUS            reduce using rule 149 (expression -> VARIABLE PLUS NUMBER .)
    MINUS           reduce using rule 149 (expression -> VARIABLE PLUS NUMBER .)
    TIMES           reduce using rule 149 (expression -> VARIABLE PLUS NUMBER .)
    DIVIDE          reduce using rule 149 (expression -> VARIABLE PLUS NUMBER .)
    MOD             reduce using rule 149 (expression -> VARIABLE PLUS NUMBER .)
    POT             reduce using rule 149 (expression -> VARIABLE PLUS NUMBER .)
    PUNTOYCOMA      reduce using rule 149 (expression -> VARIABLE PLUS NUMBER .)
    COMA            reduce using rule 149 (expression -> VARIABLE PLUS NUMBER .)
    PUNTO           reduce using rule 149 (expression -> VARIABLE PLUS NUMBER .)
    ARROW           reduce using rule 149 (expression -> VARIABLE PLUS NUMBER .)
    RBRACKET        reduce using rule 149 (expression -> VARIABLE PLUS NUMBER .)
    RPAREN          reduce using rule 149 (expression -> VARIABLE PLUS NUMBER .)
    PRINT           reduce using rule 149 (expression -> VARIABLE PLUS NUMBER .)
    PRINT_R         reduce using rule 149 (expression -> VARIABLE PLUS NUMBER .)
    ECHO            reduce using rule 149 (expression -> VARIABLE PLUS NUMBER .)
    VARIABLE        reduce using rule 149 (expression -> VARIABLE PLUS NUMBER .)
    WHILE           reduce using rule 149 (expression -> VARIABLE PLUS NUMBER .)
    IF              reduce using rule 149 (expression -> VARIABLE PLUS NUMBER .)
    ELSE            reduce using rule 149 (expression -> VARIABLE PLUS NUMBER .)
    FOR             reduce using rule 149 (expression -> VARIABLE PLUS NUMBER .)
    LBRACKET        reduce using rule 149 (expression -> VARIABLE PLUS NUMBER .)
    LBRACE          reduce using rule 149 (expression -> VARIABLE PLUS NUMBER .)
    FUNCTION        reduce using rule 149 (expression -> VARIABLE PLUS NUMBER .)
    NUMBER          reduce using rule 149 (expression -> VARIABLE PLUS NUMBER .)
    FLOAT           reduce using rule 149 (expression -> VARIABLE PLUS NUMBER .)
    STRING          reduce using rule 149 (expression -> VARIABLE PLUS NUMBER .)
    BOOLEAN         reduce using rule 149 (expression -> VARIABLE PLUS NUMBER .)
    ID              reduce using rule 149 (expression -> VARIABLE PLUS NUMBER .)
    PHP_END         reduce using rule 149 (expression -> VARIABLE PLUS NUMBER .)
    RLLAVE          reduce using rule 149 (expression -> VARIABLE PLUS NUMBER .)
    EQUAL           reduce using rule 149 (expression -> VARIABLE PLUS NUMBER .)
    NOT_IDENTICAL   reduce using rule 149 (expression -> VARIABLE PLUS NUMBER .)
    NOT_EQUAL       reduce using rule 149 (expression -> VARIABLE PLUS NUMBER .)
    IGUAL           reduce using rule 149 (expression -> VARIABLE PLUS NUMBER .)
    IDENTICAL       reduce using rule 149 (expression -> VARIABLE PLUS NUMBER .)
    MAYOR           reduce using rule 149 (expression -> VARIABLE PLUS NUMBER .)
    MENOR           reduce using rule 149 (expression -> VARIABLE PLUS NUMBER .)
    RBRACE          reduce using rule 149 (expression -> VARIABLE PLUS NUMBER .)
    AND_LOGICAL     reduce using rule 149 (expression -> VARIABLE PLUS NUMBER .)
    OR_LOGICAL      reduce using rule 149 (expression -> VARIABLE PLUS NUMBER .)


state 125

    (146) expression -> VARIABLE MINUS VARIABLE .

    PLUS            reduce using rule 146 (expression -> VARIABLE MINUS VARIABLE .)
    MINUS           reduce using rule 146 (expression -> VARIABLE MINUS VARIABLE .)
    TIMES           reduce using rule 146 (expression -> VARIABLE MINUS VARIABLE .)
    DIVIDE          reduce using rule 146 (expression -> VARIABLE MINUS VARIABLE .)
    MOD             reduce using rule 146 (expression -> VARIABLE MINUS VARIABLE .)
    POT             reduce using rule 146 (expression -> VARIABLE MINUS VARIABLE .)
    PUNTOYCOMA      reduce using rule 146 (expression -> VARIABLE MINUS VARIABLE .)
    COMA            reduce using rule 146 (expression -> VARIABLE MINUS VARIABLE .)
    PUNTO           reduce using rule 146 (expression -> VARIABLE MINUS VARIABLE .)
    ARROW           reduce using rule 146 (expression -> VARIABLE MINUS VARIABLE .)
    RBRACKET        reduce using rule 146 (expression -> VARIABLE MINUS VARIABLE .)
    RPAREN          reduce using rule 146 (expression -> VARIABLE MINUS VARIABLE .)
    PRINT           reduce using rule 146 (expression -> VARIABLE MINUS VARIABLE .)
    PRINT_R         reduce using rule 146 (expression -> VARIABLE MINUS VARIABLE .)
    ECHO            reduce using rule 146 (expression -> VARIABLE MINUS VARIABLE .)
    VARIABLE        reduce using rule 146 (expression -> VARIABLE MINUS VARIABLE .)
    WHILE           reduce using rule 146 (expression -> VARIABLE MINUS VARIABLE .)
    IF              reduce using rule 146 (expression -> VARIABLE MINUS VARIABLE .)
    ELSE            reduce using rule 146 (expression -> VARIABLE MINUS VARIABLE .)
    FOR             reduce using rule 146 (expression -> VARIABLE MINUS VARIABLE .)
    LBRACKET        reduce using rule 146 (expression -> VARIABLE MINUS VARIABLE .)
    LBRACE          reduce using rule 146 (expression -> VARIABLE MINUS VARIABLE .)
    FUNCTION        reduce using rule 146 (expression -> VARIABLE MINUS VARIABLE .)
    NUMBER          reduce using rule 146 (expression -> VARIABLE MINUS VARIABLE .)
    FLOAT           reduce using rule 146 (expression -> VARIABLE MINUS VARIABLE .)
    STRING          reduce using rule 146 (expression -> VARIABLE MINUS VARIABLE .)
    BOOLEAN         reduce using rule 146 (expression -> VARIABLE MINUS VARIABLE .)
    ID              reduce using rule 146 (expression -> VARIABLE MINUS VARIABLE .)
    PHP_END         reduce using rule 146 (expression -> VARIABLE MINUS VARIABLE .)
    RLLAVE          reduce using rule 146 (expression -> VARIABLE MINUS VARIABLE .)
    EQUAL           reduce using rule 146 (expression -> VARIABLE MINUS VARIABLE .)
    NOT_IDENTICAL   reduce using rule 146 (expression -> VARIABLE MINUS VARIABLE .)
    NOT_EQUAL       reduce using rule 146 (expression -> VARIABLE MINUS VARIABLE .)
    IGUAL           reduce using rule 146 (expression -> VARIABLE MINUS VARIABLE .)
    IDENTICAL       reduce using rule 146 (expression -> VARIABLE MINUS VARIABLE .)
    MAYOR           reduce using rule 146 (expression -> VARIABLE MINUS VARIABLE .)
    MENOR           reduce using rule 146 (expression -> VARIABLE MINUS VARIABLE .)
    RBRACE          reduce using rule 146 (expression -> VARIABLE MINUS VARIABLE .)
    AND_LOGICAL     reduce using rule 146 (expression -> VARIABLE MINUS VARIABLE .)
    OR_LOGICAL      reduce using rule 146 (expression -> VARIABLE MINUS VARIABLE .)


state 126

    (150) expression -> VARIABLE MINUS NUMBER .

    PLUS            reduce using rule 150 (expression -> VARIABLE MINUS NUMBER .)
    MINUS           reduce using rule 150 (expression -> VARIABLE MINUS NUMBER .)
    TIMES           reduce using rule 150 (expression -> VARIABLE MINUS NUMBER .)
    DIVIDE          reduce using rule 150 (expression -> VARIABLE MINUS NUMBER .)
    MOD             reduce using rule 150 (expression -> VARIABLE MINUS NUMBER .)
    POT             reduce using rule 150 (expression -> VARIABLE MINUS NUMBER .)
    PUNTOYCOMA      reduce using rule 150 (expression -> VARIABLE MINUS NUMBER .)
    COMA            reduce using rule 150 (expression -> VARIABLE MINUS NUMBER .)
    PUNTO           reduce using rule 150 (expression -> VARIABLE MINUS NUMBER .)
    ARROW           reduce using rule 150 (expression -> VARIABLE MINUS NUMBER .)
    RBRACKET        reduce using rule 150 (expression -> VARIABLE MINUS NUMBER .)
    RPAREN          reduce using rule 150 (expression -> VARIABLE MINUS NUMBER .)
    PRINT           reduce using rule 150 (expression -> VARIABLE MINUS NUMBER .)
    PRINT_R         reduce using rule 150 (expression -> VARIABLE MINUS NUMBER .)
    ECHO            reduce using rule 150 (expression -> VARIABLE MINUS NUMBER .)
    VARIABLE        reduce using rule 150 (expression -> VARIABLE MINUS NUMBER .)
    WHILE           reduce using rule 150 (expression -> VARIABLE MINUS NUMBER .)
    IF              reduce using rule 150 (expression -> VARIABLE MINUS NUMBER .)
    ELSE            reduce using rule 150 (expression -> VARIABLE MINUS NUMBER .)
    FOR             reduce using rule 150 (expression -> VARIABLE MINUS NUMBER .)
    LBRACKET        reduce using rule 150 (expression -> VARIABLE MINUS NUMBER .)
    LBRACE          reduce using rule 150 (expression -> VARIABLE MINUS NUMBER .)
    FUNCTION        reduce using rule 150 (expression -> VARIABLE MINUS NUMBER .)
    NUMBER          reduce using rule 150 (expression -> VARIABLE MINUS NUMBER .)
    FLOAT           reduce using rule 150 (expression -> VARIABLE MINUS NUMBER .)
    STRING          reduce using rule 150 (expression -> VARIABLE MINUS NUMBER .)
    BOOLEAN         reduce using rule 150 (expression -> VARIABLE MINUS NUMBER .)
    ID              reduce using rule 150 (expression -> VARIABLE MINUS NUMBER .)
    PHP_END         reduce using rule 150 (expression -> VARIABLE MINUS NUMBER .)
    RLLAVE          reduce using rule 150 (expression -> VARIABLE MINUS NUMBER .)
    EQUAL           reduce using rule 150 (expression -> VARIABLE MINUS NUMBER .)
    NOT_IDENTICAL   reduce using rule 150 (expression -> VARIABLE MINUS NUMBER .)
    NOT_EQUAL       reduce using rule 150 (expression -> VARIABLE MINUS NUMBER .)
    IGUAL           reduce using rule 150 (expression -> VARIABLE MINUS NUMBER .)
    IDENTICAL       reduce using rule 150 (expression -> VARIABLE MINUS NUMBER .)
    MAYOR           reduce using rule 150 (expression -> VARIABLE MINUS NUMBER .)
    MENOR           reduce using rule 150 (expression -> VARIABLE MINUS NUMBER .)
    RBRACE          reduce using rule 150 (expression -> VARIABLE MINUS NUMBER .)
    AND_LOGICAL     reduce using rule 150 (expression -> VARIABLE MINUS NUMBER .)
    OR_LOGICAL      reduce using rule 150 (expression -> VARIABLE MINUS NUMBER .)


state 127

    (147) expression -> VARIABLE DIVIDE VARIABLE .

    PLUS            reduce using rule 147 (expression -> VARIABLE DIVIDE VARIABLE .)
    MINUS           reduce using rule 147 (expression -> VARIABLE DIVIDE VARIABLE .)
    TIMES           reduce using rule 147 (expression -> VARIABLE DIVIDE VARIABLE .)
    DIVIDE          reduce using rule 147 (expression -> VARIABLE DIVIDE VARIABLE .)
    MOD             reduce using rule 147 (expression -> VARIABLE DIVIDE VARIABLE .)
    POT             reduce using rule 147 (expression -> VARIABLE DIVIDE VARIABLE .)
    PUNTOYCOMA      reduce using rule 147 (expression -> VARIABLE DIVIDE VARIABLE .)
    COMA            reduce using rule 147 (expression -> VARIABLE DIVIDE VARIABLE .)
    PUNTO           reduce using rule 147 (expression -> VARIABLE DIVIDE VARIABLE .)
    ARROW           reduce using rule 147 (expression -> VARIABLE DIVIDE VARIABLE .)
    RBRACKET        reduce using rule 147 (expression -> VARIABLE DIVIDE VARIABLE .)
    RPAREN          reduce using rule 147 (expression -> VARIABLE DIVIDE VARIABLE .)
    PRINT           reduce using rule 147 (expression -> VARIABLE DIVIDE VARIABLE .)
    PRINT_R         reduce using rule 147 (expression -> VARIABLE DIVIDE VARIABLE .)
    ECHO            reduce using rule 147 (expression -> VARIABLE DIVIDE VARIABLE .)
    VARIABLE        reduce using rule 147 (expression -> VARIABLE DIVIDE VARIABLE .)
    WHILE           reduce using rule 147 (expression -> VARIABLE DIVIDE VARIABLE .)
    IF              reduce using rule 147 (expression -> VARIABLE DIVIDE VARIABLE .)
    ELSE            reduce using rule 147 (expression -> VARIABLE DIVIDE VARIABLE .)
    FOR             reduce using rule 147 (expression -> VARIABLE DIVIDE VARIABLE .)
    LBRACKET        reduce using rule 147 (expression -> VARIABLE DIVIDE VARIABLE .)
    LBRACE          reduce using rule 147 (expression -> VARIABLE DIVIDE VARIABLE .)
    FUNCTION        reduce using rule 147 (expression -> VARIABLE DIVIDE VARIABLE .)
    NUMBER          reduce using rule 147 (expression -> VARIABLE DIVIDE VARIABLE .)
    FLOAT           reduce using rule 147 (expression -> VARIABLE DIVIDE VARIABLE .)
    STRING          reduce using rule 147 (expression -> VARIABLE DIVIDE VARIABLE .)
    BOOLEAN         reduce using rule 147 (expression -> VARIABLE DIVIDE VARIABLE .)
    ID              reduce using rule 147 (expression -> VARIABLE DIVIDE VARIABLE .)
    PHP_END         reduce using rule 147 (expression -> VARIABLE DIVIDE VARIABLE .)
    RLLAVE          reduce using rule 147 (expression -> VARIABLE DIVIDE VARIABLE .)
    EQUAL           reduce using rule 147 (expression -> VARIABLE DIVIDE VARIABLE .)
    NOT_IDENTICAL   reduce using rule 147 (expression -> VARIABLE DIVIDE VARIABLE .)
    NOT_EQUAL       reduce using rule 147 (expression -> VARIABLE DIVIDE VARIABLE .)
    IGUAL           reduce using rule 147 (expression -> VARIABLE DIVIDE VARIABLE .)
    IDENTICAL       reduce using rule 147 (expression -> VARIABLE DIVIDE VARIABLE .)
    MAYOR           reduce using rule 147 (expression -> VARIABLE DIVIDE VARIABLE .)
    MENOR           reduce using rule 147 (expression -> VARIABLE DIVIDE VARIABLE .)
    RBRACE          reduce using rule 147 (expression -> VARIABLE DIVIDE VARIABLE .)
    AND_LOGICAL     reduce using rule 147 (expression -> VARIABLE DIVIDE VARIABLE .)
    OR_LOGICAL      reduce using rule 147 (expression -> VARIABLE DIVIDE VARIABLE .)


state 128

    (151) expression -> VARIABLE DIVIDE NUMBER .

    PLUS            reduce using rule 151 (expression -> VARIABLE DIVIDE NUMBER .)
    MINUS           reduce using rule 151 (expression -> VARIABLE DIVIDE NUMBER .)
    TIMES           reduce using rule 151 (expression -> VARIABLE DIVIDE NUMBER .)
    DIVIDE          reduce using rule 151 (expression -> VARIABLE DIVIDE NUMBER .)
    MOD             reduce using rule 151 (expression -> VARIABLE DIVIDE NUMBER .)
    POT             reduce using rule 151 (expression -> VARIABLE DIVIDE NUMBER .)
    PUNTOYCOMA      reduce using rule 151 (expression -> VARIABLE DIVIDE NUMBER .)
    COMA            reduce using rule 151 (expression -> VARIABLE DIVIDE NUMBER .)
    PUNTO           reduce using rule 151 (expression -> VARIABLE DIVIDE NUMBER .)
    ARROW           reduce using rule 151 (expression -> VARIABLE DIVIDE NUMBER .)
    RBRACKET        reduce using rule 151 (expression -> VARIABLE DIVIDE NUMBER .)
    RPAREN          reduce using rule 151 (expression -> VARIABLE DIVIDE NUMBER .)
    PRINT           reduce using rule 151 (expression -> VARIABLE DIVIDE NUMBER .)
    PRINT_R         reduce using rule 151 (expression -> VARIABLE DIVIDE NUMBER .)
    ECHO            reduce using rule 151 (expression -> VARIABLE DIVIDE NUMBER .)
    VARIABLE        reduce using rule 151 (expression -> VARIABLE DIVIDE NUMBER .)
    WHILE           reduce using rule 151 (expression -> VARIABLE DIVIDE NUMBER .)
    IF              reduce using rule 151 (expression -> VARIABLE DIVIDE NUMBER .)
    ELSE            reduce using rule 151 (expression -> VARIABLE DIVIDE NUMBER .)
    FOR             reduce using rule 151 (expression -> VARIABLE DIVIDE NUMBER .)
    LBRACKET        reduce using rule 151 (expression -> VARIABLE DIVIDE NUMBER .)
    LBRACE          reduce using rule 151 (expression -> VARIABLE DIVIDE NUMBER .)
    FUNCTION        reduce using rule 151 (expression -> VARIABLE DIVIDE NUMBER .)
    NUMBER          reduce using rule 151 (expression -> VARIABLE DIVIDE NUMBER .)
    FLOAT           reduce using rule 151 (expression -> VARIABLE DIVIDE NUMBER .)
    STRING          reduce using rule 151 (expression -> VARIABLE DIVIDE NUMBER .)
    BOOLEAN         reduce using rule 151 (expression -> VARIABLE DIVIDE NUMBER .)
    ID              reduce using rule 151 (expression -> VARIABLE DIVIDE NUMBER .)
    PHP_END         reduce using rule 151 (expression -> VARIABLE DIVIDE NUMBER .)
    RLLAVE          reduce using rule 151 (expression -> VARIABLE DIVIDE NUMBER .)
    EQUAL           reduce using rule 151 (expression -> VARIABLE DIVIDE NUMBER .)
    NOT_IDENTICAL   reduce using rule 151 (expression -> VARIABLE DIVIDE NUMBER .)
    NOT_EQUAL       reduce using rule 151 (expression -> VARIABLE DIVIDE NUMBER .)
    IGUAL           reduce using rule 151 (expression -> VARIABLE DIVIDE NUMBER .)
    IDENTICAL       reduce using rule 151 (expression -> VARIABLE DIVIDE NUMBER .)
    MAYOR           reduce using rule 151 (expression -> VARIABLE DIVIDE NUMBER .)
    MENOR           reduce using rule 151 (expression -> VARIABLE DIVIDE NUMBER .)
    RBRACE          reduce using rule 151 (expression -> VARIABLE DIVIDE NUMBER .)
    AND_LOGICAL     reduce using rule 151 (expression -> VARIABLE DIVIDE NUMBER .)
    OR_LOGICAL      reduce using rule 151 (expression -> VARIABLE DIVIDE NUMBER .)


state 129

    (152) expression -> VARIABLE MOD VARIABLE .

    PLUS            reduce using rule 152 (expression -> VARIABLE MOD VARIABLE .)
    MINUS           reduce using rule 152 (expression -> VARIABLE MOD VARIABLE .)
    TIMES           reduce using rule 152 (expression -> VARIABLE MOD VARIABLE .)
    DIVIDE          reduce using rule 152 (expression -> VARIABLE MOD VARIABLE .)
    MOD             reduce using rule 152 (expression -> VARIABLE MOD VARIABLE .)
    POT             reduce using rule 152 (expression -> VARIABLE MOD VARIABLE .)
    PUNTOYCOMA      reduce using rule 152 (expression -> VARIABLE MOD VARIABLE .)
    COMA            reduce using rule 152 (expression -> VARIABLE MOD VARIABLE .)
    PUNTO           reduce using rule 152 (expression -> VARIABLE MOD VARIABLE .)
    ARROW           reduce using rule 152 (expression -> VARIABLE MOD VARIABLE .)
    RBRACKET        reduce using rule 152 (expression -> VARIABLE MOD VARIABLE .)
    RPAREN          reduce using rule 152 (expression -> VARIABLE MOD VARIABLE .)
    PRINT           reduce using rule 152 (expression -> VARIABLE MOD VARIABLE .)
    PRINT_R         reduce using rule 152 (expression -> VARIABLE MOD VARIABLE .)
    ECHO            reduce using rule 152 (expression -> VARIABLE MOD VARIABLE .)
    VARIABLE        reduce using rule 152 (expression -> VARIABLE MOD VARIABLE .)
    WHILE           reduce using rule 152 (expression -> VARIABLE MOD VARIABLE .)
    IF              reduce using rule 152 (expression -> VARIABLE MOD VARIABLE .)
    ELSE            reduce using rule 152 (expression -> VARIABLE MOD VARIABLE .)
    FOR             reduce using rule 152 (expression -> VARIABLE MOD VARIABLE .)
    LBRACKET        reduce using rule 152 (expression -> VARIABLE MOD VARIABLE .)
    LBRACE          reduce using rule 152 (expression -> VARIABLE MOD VARIABLE .)
    FUNCTION        reduce using rule 152 (expression -> VARIABLE MOD VARIABLE .)
    NUMBER          reduce using rule 152 (expression -> VARIABLE MOD VARIABLE .)
    FLOAT           reduce using rule 152 (expression -> VARIABLE MOD VARIABLE .)
    STRING          reduce using rule 152 (expression -> VARIABLE MOD VARIABLE .)
    BOOLEAN         reduce using rule 152 (expression -> VARIABLE MOD VARIABLE .)
    ID              reduce using rule 152 (expression -> VARIABLE MOD VARIABLE .)
    PHP_END         reduce using rule 152 (expression -> VARIABLE MOD VARIABLE .)
    RLLAVE          reduce using rule 152 (expression -> VARIABLE MOD VARIABLE .)
    EQUAL           reduce using rule 152 (expression -> VARIABLE MOD VARIABLE .)
    NOT_IDENTICAL   reduce using rule 152 (expression -> VARIABLE MOD VARIABLE .)
    NOT_EQUAL       reduce using rule 152 (expression -> VARIABLE MOD VARIABLE .)
    IGUAL           reduce using rule 152 (expression -> VARIABLE MOD VARIABLE .)
    IDENTICAL       reduce using rule 152 (expression -> VARIABLE MOD VARIABLE .)
    MAYOR           reduce using rule 152 (expression -> VARIABLE MOD VARIABLE .)
    MENOR           reduce using rule 152 (expression -> VARIABLE MOD VARIABLE .)
    RBRACE          reduce using rule 152 (expression -> VARIABLE MOD VARIABLE .)
    AND_LOGICAL     reduce using rule 152 (expression -> VARIABLE MOD VARIABLE .)
    OR_LOGICAL      reduce using rule 152 (expression -> VARIABLE MOD VARIABLE .)


state 130

    (109) lista -> LBRACKET elementos RBRACKET .

    PRINT           reduce using rule 109 (lista -> LBRACKET elementos RBRACKET .)
    PRINT_R         reduce using rule 109 (lista -> LBRACKET elementos RBRACKET .)
    ECHO            reduce using rule 109 (lista -> LBRACKET elementos RBRACKET .)
    VARIABLE        reduce using rule 109 (lista -> LBRACKET elementos RBRACKET .)
    WHILE           reduce using rule 109 (lista -> LBRACKET elementos RBRACKET .)
    IF              reduce using rule 109 (lista -> LBRACKET elementos RBRACKET .)
    ELSE            reduce using rule 109 (lista -> LBRACKET elementos RBRACKET .)
    FOR             reduce using rule 109 (lista -> LBRACKET elementos RBRACKET .)
    LBRACKET        reduce using rule 109 (lista -> LBRACKET elementos RBRACKET .)
    LBRACE          reduce using rule 109 (lista -> LBRACKET elementos RBRACKET .)
    FUNCTION        reduce using rule 109 (lista -> LBRACKET elementos RBRACKET .)
    NUMBER          reduce using rule 109 (lista -> LBRACKET elementos RBRACKET .)
    FLOAT           reduce using rule 109 (lista -> LBRACKET elementos RBRACKET .)
    STRING          reduce using rule 109 (lista -> LBRACKET elementos RBRACKET .)
    BOOLEAN         reduce using rule 109 (lista -> LBRACKET elementos RBRACKET .)
    ID              reduce using rule 109 (lista -> LBRACKET elementos RBRACKET .)
    PHP_END         reduce using rule 109 (lista -> LBRACKET elementos RBRACKET .)
    RBRACKET        reduce using rule 109 (lista -> LBRACKET elementos RBRACKET .)
    COMA            reduce using rule 109 (lista -> LBRACKET elementos RBRACKET .)
    RLLAVE          reduce using rule 109 (lista -> LBRACKET elementos RBRACKET .)
    RPAREN          reduce using rule 109 (lista -> LBRACKET elementos RBRACKET .)


state 131

    (103) elementos -> elementos COMA . elemento
    (104) elemento -> . valor
    (105) elemento -> . lista
    (106) elemento -> . clave_valor
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (108) lista -> . LBRACKET RBRACKET
    (109) lista -> . LBRACKET elementos RBRACKET
    (107) clave_valor -> . valor ARROW valor
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    VARIABLE        shift and go to state 87
    ID              shift and go to state 41
    LBRACKET        shift and go to state 23

    elemento                       shift and go to state 171
    valor                          shift and go to state 84
    lista                          shift and go to state 85
    clave_valor                    shift and go to state 86
    expression                     shift and go to state 42

state 132

    (107) clave_valor -> valor ARROW . valor
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    VARIABLE        shift and go to state 87
    ID              shift and go to state 41

    valor                          shift and go to state 172
    expression                     shift and go to state 42

state 133

    (75) while -> WHILE LPAREN condicion . RPAREN LLLAVE instrucciones RLLAVE
    (77) condicion -> condicion . compuesta_logica condicion
    (81) compuesta_logica -> . AND_LOGICAL
    (82) compuesta_logica -> . OR_LOGICAL

    RPAREN          shift and go to state 173
    AND_LOGICAL     shift and go to state 175
    OR_LOGICAL      shift and go to state 176

    compuesta_logica               shift and go to state 174

state 134

    (76) condicion -> condicion_simple .

    RPAREN          reduce using rule 76 (condicion -> condicion_simple .)
    AND_LOGICAL     reduce using rule 76 (condicion -> condicion_simple .)
    OR_LOGICAL      reduce using rule 76 (condicion -> condicion_simple .)
    PUNTOYCOMA      reduce using rule 76 (condicion -> condicion_simple .)


state 135

    (78) condicion_simple -> valor . comparador valor
    (54) comparador -> . EQUAL
    (55) comparador -> . NOT_IDENTICAL
    (56) comparador -> . NOT_EQUAL
    (57) comparador -> . IGUAL
    (58) comparador -> . IDENTICAL
    (59) comparador -> . MAYOR
    (60) comparador -> . MENOR

    EQUAL           shift and go to state 178
    NOT_IDENTICAL   shift and go to state 179
    NOT_EQUAL       shift and go to state 180
    IGUAL           shift and go to state 181
    IDENTICAL       shift and go to state 182
    MAYOR           shift and go to state 183
    MENOR           shift and go to state 184

    comparador                     shift and go to state 177

state 136

    (79) condicion_simple -> VARIABLE . comparador valor
    (80) condicion_simple -> VARIABLE . comparador VARIABLE
    (27) valor -> VARIABLE .
    (142) expression -> VARIABLE .
    (144) expression -> VARIABLE . TIMES VARIABLE
    (145) expression -> VARIABLE . PLUS VARIABLE
    (146) expression -> VARIABLE . MINUS VARIABLE
    (147) expression -> VARIABLE . DIVIDE VARIABLE
    (148) expression -> VARIABLE . TIMES NUMBER
    (149) expression -> VARIABLE . PLUS NUMBER
    (150) expression -> VARIABLE . MINUS NUMBER
    (151) expression -> VARIABLE . DIVIDE NUMBER
    (152) expression -> VARIABLE . MOD VARIABLE
    (54) comparador -> . EQUAL
    (55) comparador -> . NOT_IDENTICAL
    (56) comparador -> . NOT_EQUAL
    (57) comparador -> . IGUAL
    (58) comparador -> . IDENTICAL
    (59) comparador -> . MAYOR
    (60) comparador -> . MENOR

  ! reduce/reduce conflict for EQUAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NOT_IDENTICAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IGUAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MAYOR resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MENOR resolved using rule 27 (valor -> VARIABLE .)
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_IDENTICAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for IDENTICAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
    TIMES           shift and go to state 69
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    DIVIDE          shift and go to state 72
    MOD             shift and go to state 73
    EQUAL           shift and go to state 178
    NOT_IDENTICAL   shift and go to state 179
    NOT_EQUAL       shift and go to state 180
    IGUAL           shift and go to state 181
    IDENTICAL       shift and go to state 182
    MAYOR           shift and go to state 183
    MENOR           shift and go to state 184

  ! EQUAL           [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! NOT_IDENTICAL   [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! NOT_EQUAL       [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! IGUAL           [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! IDENTICAL       [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! EQUAL           [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! NOT_IDENTICAL   [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! NOT_EQUAL       [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! IGUAL           [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! IDENTICAL       [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 142 (expression -> VARIABLE .) ]

    comparador                     shift and go to state 185

state 137

    (43) if -> IF LPAREN comparaciones . RPAREN LLLAVE instrucciones RLLAVE

    RPAREN          shift and go to state 186


state 138

    (44) if -> IF LPAREN VARIABLE . RPAREN LLLAVE instrucciones RLLAVE
    (47) comparacion -> VARIABLE . comparadorNum VARIABLE
    (49) comparacion -> VARIABLE . comparadorNum valor
    (27) valor -> VARIABLE .
    (142) expression -> VARIABLE .
    (144) expression -> VARIABLE . TIMES VARIABLE
    (145) expression -> VARIABLE . PLUS VARIABLE
    (146) expression -> VARIABLE . MINUS VARIABLE
    (147) expression -> VARIABLE . DIVIDE VARIABLE
    (148) expression -> VARIABLE . TIMES NUMBER
    (149) expression -> VARIABLE . PLUS NUMBER
    (150) expression -> VARIABLE . MINUS NUMBER
    (151) expression -> VARIABLE . DIVIDE NUMBER
    (152) expression -> VARIABLE . MOD VARIABLE
    (50) comparadorNum -> . MAYOR
    (51) comparadorNum -> . MAYORIGUAL
    (52) comparadorNum -> . MENOR
    (53) comparadorNum -> . MENORIGUAL

  ! reduce/reduce conflict for EQUAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NOT_IDENTICAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IGUAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MAYOR resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MENOR resolved using rule 27 (valor -> VARIABLE .)
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
    RPAREN          shift and go to state 187
    EQUAL           reduce using rule 27 (valor -> VARIABLE .)
    NOT_IDENTICAL   reduce using rule 27 (valor -> VARIABLE .)
    NOT_EQUAL       reduce using rule 27 (valor -> VARIABLE .)
    IGUAL           reduce using rule 27 (valor -> VARIABLE .)
    IDENTICAL       reduce using rule 27 (valor -> VARIABLE .)
    TIMES           shift and go to state 69
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    DIVIDE          shift and go to state 72
    MOD             shift and go to state 73
    MAYOR           shift and go to state 189
    MAYORIGUAL      shift and go to state 190
    MENOR           shift and go to state 191
    MENORIGUAL      shift and go to state 192

  ! MAYOR           [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! EQUAL           [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! NOT_IDENTICAL   [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! NOT_EQUAL       [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! IGUAL           [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! IDENTICAL       [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 142 (expression -> VARIABLE .) ]

    comparadorNum                  shift and go to state 188

state 139

    (45) comparaciones -> comparacion .
    (46) comparaciones -> comparacion . operadores comparaciones
    (61) operadores -> . AND_LOGICAL
    (62) operadores -> . OR_LOGICAL

    RPAREN          reduce using rule 45 (comparaciones -> comparacion .)
    AND_LOGICAL     shift and go to state 194
    OR_LOGICAL      shift and go to state 195

    operadores                     shift and go to state 193

state 140

    (48) comparacion -> valor . comparador valor
    (54) comparador -> . EQUAL
    (55) comparador -> . NOT_IDENTICAL
    (56) comparador -> . NOT_EQUAL
    (57) comparador -> . IGUAL
    (58) comparador -> . IDENTICAL
    (59) comparador -> . MAYOR
    (60) comparador -> . MENOR

    EQUAL           shift and go to state 178
    NOT_IDENTICAL   shift and go to state 179
    NOT_EQUAL       shift and go to state 180
    IGUAL           shift and go to state 181
    IDENTICAL       shift and go to state 182
    MAYOR           shift and go to state 183
    MENOR           shift and go to state 184

    comparador                     shift and go to state 196

state 141

    (74) else -> ELSE LLLAVE instrucciones . RLLAVE
    (5) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) instruccion -> . operacion
    (15) instruccion -> . increment
    (16) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (19) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (20) imprimir -> . ECHO valor PUNTOYCOMA
    (21) imprimir -> . ECHO concatenar PUNTOYCOMA
    (22) imprimir -> . ECHO valor COMA VARIABLE valor PUNTOYCOMA
    (34) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA
    (36) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (37) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (38) indexacion -> . ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (39) estructurasControl -> . while
    (40) estructurasControl -> . if
    (41) estructurasControl -> . else
    (42) estructurasControl -> . for_statement
    (63) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (64) asignacion -> . VARIABLE IGUAL ARRAY PUNTOYCOMA
    (65) asignacion -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (94) estructurasDatos -> . array
    (95) estructurasDatos -> . lista
    (96) estructurasDatos -> . diccionario
    (114) funciones -> . funcion
    (115) funciones -> . funcioninbuilt
    (116) funciones -> . funcion_anonima
    (117) funciones -> . arrow_function
    (66) operacion -> . valor operadorAritmetico valor PUNTOYCOMA
    (67) operacion -> . operacion operadorAritmetico operacion
    (86) increment -> . VARIABLE INCREMENT
    (87) increment -> . VARIABLE DECREMENT
    (88) increment -> . VARIABLE DECREMENT PUNTOYCOMA
    (89) increment -> . VARIABLE PLUS_ASSIGN valor
    (90) increment -> . VARIABLE MINUS_ASSIGN valor
    (91) increment -> . empty
    (92) increment -> . VARIABLE INCREMENT PUNTOYCOMA
    (75) while -> . WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE
    (43) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (44) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (74) else -> . ELSE LLLAVE instrucciones RLLAVE
    (83) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (97) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (98) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (99) array -> . VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA
    (100) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (101) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (108) lista -> . LBRACKET RBRACKET
    (109) lista -> . LBRACKET elementos RBRACKET
    (110) diccionario -> . LBRACE pares RBRACE
    (118) funcion -> . FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE
    (119) funcion -> . FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE
    (120) funcioninbuilt -> . VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA
    (121) funcioninbuilt -> . VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA
    (134) funcion_anonima -> . VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (139) arrow_function -> . VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (93) empty -> .
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINT_R resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    RLLAVE          shift and go to state 197
    PRINT           shift and go to state 17
    PRINT_R         shift and go to state 19
    ECHO            shift and go to state 20
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    FOR             shift and go to state 38
    LBRACKET        shift and go to state 23
    LBRACE          shift and go to state 39
    FUNCTION        shift and go to state 40
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    ID              shift and go to state 41

  ! RLLAVE          [ reduce using rule 93 (empty -> .) ]
  ! PRINT           [ reduce using rule 93 (empty -> .) ]
  ! PRINT_R         [ reduce using rule 93 (empty -> .) ]
  ! ECHO            [ reduce using rule 93 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 93 (empty -> .) ]
  ! WHILE           [ reduce using rule 93 (empty -> .) ]
  ! IF              [ reduce using rule 93 (empty -> .) ]
  ! ELSE            [ reduce using rule 93 (empty -> .) ]
  ! FOR             [ reduce using rule 93 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 93 (empty -> .) ]
  ! LBRACE          [ reduce using rule 93 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 93 (empty -> .) ]
  ! NUMBER          [ reduce using rule 93 (empty -> .) ]
  ! FLOAT           [ reduce using rule 93 (empty -> .) ]
  ! STRING          [ reduce using rule 93 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 93 (empty -> .) ]
  ! ID              [ reduce using rule 93 (empty -> .) ]

    instruccion                    shift and go to state 47
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    operacion                      shift and go to state 15
    increment                      shift and go to state 16
    valor                          shift and go to state 18
    while                          shift and go to state 24
    if                             shift and go to state 25
    else                           shift and go to state 26
    for_statement                  shift and go to state 27
    array                          shift and go to state 28
    lista                          shift and go to state 29
    diccionario                    shift and go to state 30
    funcion                        shift and go to state 31
    funcioninbuilt                 shift and go to state 32
    funcion_anonima                shift and go to state 33
    arrow_function                 shift and go to state 34
    empty                          shift and go to state 48
    expression                     shift and go to state 42

state 142

    (83) for_statement -> FOR LPAREN initialization . PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE

    PUNTOYCOMA      shift and go to state 198


state 143

    (84) initialization -> VARIABLE . IGUAL valor

    IGUAL           shift and go to state 199


state 144

    (85) initialization -> empty .

    PUNTOYCOMA      reduce using rule 85 (initialization -> empty .)


state 145

    (110) diccionario -> LBRACE pares RBRACE .

    PRINT           reduce using rule 110 (diccionario -> LBRACE pares RBRACE .)
    PRINT_R         reduce using rule 110 (diccionario -> LBRACE pares RBRACE .)
    ECHO            reduce using rule 110 (diccionario -> LBRACE pares RBRACE .)
    VARIABLE        reduce using rule 110 (diccionario -> LBRACE pares RBRACE .)
    WHILE           reduce using rule 110 (diccionario -> LBRACE pares RBRACE .)
    IF              reduce using rule 110 (diccionario -> LBRACE pares RBRACE .)
    ELSE            reduce using rule 110 (diccionario -> LBRACE pares RBRACE .)
    FOR             reduce using rule 110 (diccionario -> LBRACE pares RBRACE .)
    LBRACKET        reduce using rule 110 (diccionario -> LBRACE pares RBRACE .)
    LBRACE          reduce using rule 110 (diccionario -> LBRACE pares RBRACE .)
    FUNCTION        reduce using rule 110 (diccionario -> LBRACE pares RBRACE .)
    NUMBER          reduce using rule 110 (diccionario -> LBRACE pares RBRACE .)
    FLOAT           reduce using rule 110 (diccionario -> LBRACE pares RBRACE .)
    STRING          reduce using rule 110 (diccionario -> LBRACE pares RBRACE .)
    BOOLEAN         reduce using rule 110 (diccionario -> LBRACE pares RBRACE .)
    ID              reduce using rule 110 (diccionario -> LBRACE pares RBRACE .)
    PHP_END         reduce using rule 110 (diccionario -> LBRACE pares RBRACE .)
    RLLAVE          reduce using rule 110 (diccionario -> LBRACE pares RBRACE .)


state 146

    (112) pares -> pares COMA . par
    (113) par -> . STRING ARROW valor

    STRING          shift and go to state 94

    par                            shift and go to state 200

state 147

    (113) par -> STRING ARROW . valor
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    VARIABLE        shift and go to state 87
    ID              shift and go to state 41

    valor                          shift and go to state 201
    expression                     shift and go to state 42

state 148

    (118) funcion -> FUNCTION ID LPAREN . RPAREN LLLAVE instrucciones RLLAVE
    (119) funcion -> FUNCTION ID LPAREN . parametros RPAREN LLLAVE instrucciones RLLAVE
    (135) parametros -> . STRING
    (136) parametros -> . parametros COMA STRING
    (137) parametros -> . VARIABLE
    (138) parametros -> . parametros COMA VARIABLE

    RPAREN          shift and go to state 202
    STRING          shift and go to state 204
    VARIABLE        shift and go to state 205

    parametros                     shift and go to state 203

state 149

    (16) imprimir -> PRINT LPAREN valor RPAREN . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 206


state 150

    (17) imprimir -> PRINT LPAREN argumentos RPAREN . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 207


state 151

    (31) argumentos -> argumentos COMA . valor
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    VARIABLE        shift and go to state 87
    ID              shift and go to state 41

    valor                          shift and go to state 208
    expression                     shift and go to state 42

state 152

    (66) operacion -> valor operadorAritmetico valor PUNTOYCOMA .

    PLUS            reduce using rule 66 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    MINUS           reduce using rule 66 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    TIMES           reduce using rule 66 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    DIVIDE          reduce using rule 66 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    MOD             reduce using rule 66 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    POT             reduce using rule 66 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    PRINT           reduce using rule 66 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    PRINT_R         reduce using rule 66 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    ECHO            reduce using rule 66 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    VARIABLE        reduce using rule 66 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    WHILE           reduce using rule 66 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    IF              reduce using rule 66 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    ELSE            reduce using rule 66 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    FOR             reduce using rule 66 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    LBRACKET        reduce using rule 66 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    LBRACE          reduce using rule 66 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    FUNCTION        reduce using rule 66 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    NUMBER          reduce using rule 66 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    FLOAT           reduce using rule 66 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    STRING          reduce using rule 66 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    BOOLEAN         reduce using rule 66 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    ID              reduce using rule 66 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    PHP_END         reduce using rule 66 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    RLLAVE          reduce using rule 66 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 66 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)
    RPAREN          reduce using rule 66 (operacion -> valor operadorAritmetico valor PUNTOYCOMA .)


state 153

    (18) imprimir -> PRINT_R LPAREN valor RPAREN . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 209


state 154

    (19) imprimir -> PRINT_R LPAREN argumentos RPAREN . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 210


state 155

    (22) imprimir -> ECHO valor COMA VARIABLE . valor PUNTOYCOMA
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    VARIABLE        shift and go to state 87
    ID              shift and go to state 41

    valor                          shift and go to state 211
    expression                     shift and go to state 42

state 156

    (32) concatenar -> valor .
    (33) concatenar -> valor . PUNTO concatenar

    PUNTOYCOMA      reduce using rule 32 (concatenar -> valor .)
    PUNTO           shift and go to state 104


state 157

    (33) concatenar -> valor PUNTO concatenar .

    PUNTOYCOMA      reduce using rule 33 (concatenar -> valor PUNTO concatenar .)


state 158

    (38) indexacion -> ECHO VARIABLE LBRACKET valor . RBRACKET PUNTOYCOMA

    RBRACKET        shift and go to state 212


state 159

    (34) solicitud_datos -> VARIABLE IGUAL READLINE LPAREN . STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> VARIABLE IGUAL READLINE LPAREN . RPAREN PUNTOYCOMA

    STRING          shift and go to state 213
    RPAREN          shift and go to state 214


state 160

    (36) input -> VARIABLE IGUAL FGETS LPAREN . VARIABLE RPAREN PUNTOYCOMA

    VARIABLE        shift and go to state 215


state 161

    (63) asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .

    PRINT           reduce using rule 63 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    PRINT_R         reduce using rule 63 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    ECHO            reduce using rule 63 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    VARIABLE        reduce using rule 63 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    WHILE           reduce using rule 63 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    IF              reduce using rule 63 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    ELSE            reduce using rule 63 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    FOR             reduce using rule 63 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    LBRACKET        reduce using rule 63 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    LBRACE          reduce using rule 63 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    FUNCTION        reduce using rule 63 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    NUMBER          reduce using rule 63 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    FLOAT           reduce using rule 63 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    STRING          reduce using rule 63 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    BOOLEAN         reduce using rule 63 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    ID              reduce using rule 63 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    PHP_END         reduce using rule 63 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)
    RLLAVE          reduce using rule 63 (asignacion -> VARIABLE IGUAL valor PUNTOYCOMA .)


state 162

    (64) asignacion -> VARIABLE IGUAL ARRAY PUNTOYCOMA .

    PRINT           reduce using rule 64 (asignacion -> VARIABLE IGUAL ARRAY PUNTOYCOMA .)
    PRINT_R         reduce using rule 64 (asignacion -> VARIABLE IGUAL ARRAY PUNTOYCOMA .)
    ECHO            reduce using rule 64 (asignacion -> VARIABLE IGUAL ARRAY PUNTOYCOMA .)
    VARIABLE        reduce using rule 64 (asignacion -> VARIABLE IGUAL ARRAY PUNTOYCOMA .)
    WHILE           reduce using rule 64 (asignacion -> VARIABLE IGUAL ARRAY PUNTOYCOMA .)
    IF              reduce using rule 64 (asignacion -> VARIABLE IGUAL ARRAY PUNTOYCOMA .)
    ELSE            reduce using rule 64 (asignacion -> VARIABLE IGUAL ARRAY PUNTOYCOMA .)
    FOR             reduce using rule 64 (asignacion -> VARIABLE IGUAL ARRAY PUNTOYCOMA .)
    LBRACKET        reduce using rule 64 (asignacion -> VARIABLE IGUAL ARRAY PUNTOYCOMA .)
    LBRACE          reduce using rule 64 (asignacion -> VARIABLE IGUAL ARRAY PUNTOYCOMA .)
    FUNCTION        reduce using rule 64 (asignacion -> VARIABLE IGUAL ARRAY PUNTOYCOMA .)
    NUMBER          reduce using rule 64 (asignacion -> VARIABLE IGUAL ARRAY PUNTOYCOMA .)
    FLOAT           reduce using rule 64 (asignacion -> VARIABLE IGUAL ARRAY PUNTOYCOMA .)
    STRING          reduce using rule 64 (asignacion -> VARIABLE IGUAL ARRAY PUNTOYCOMA .)
    BOOLEAN         reduce using rule 64 (asignacion -> VARIABLE IGUAL ARRAY PUNTOYCOMA .)
    ID              reduce using rule 64 (asignacion -> VARIABLE IGUAL ARRAY PUNTOYCOMA .)
    PHP_END         reduce using rule 64 (asignacion -> VARIABLE IGUAL ARRAY PUNTOYCOMA .)
    RLLAVE          reduce using rule 64 (asignacion -> VARIABLE IGUAL ARRAY PUNTOYCOMA .)


state 163

    (65) asignacion -> VARIABLE IGUAL ARRAY LPAREN . elementos RPAREN PUNTOYCOMA
    (97) array -> VARIABLE IGUAL ARRAY LPAREN . RPAREN PUNTOYCOMA
    (98) array -> VARIABLE IGUAL ARRAY LPAREN . elementos RPAREN PUNTOYCOMA
    (99) array -> VARIABLE IGUAL ARRAY LPAREN . valor RPAREN PUNTOYCOMA
    (102) elementos -> . elemento
    (103) elementos -> . elementos COMA elemento
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (104) elemento -> . valor
    (105) elemento -> . lista
    (106) elemento -> . clave_valor
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE
    (108) lista -> . LBRACKET RBRACKET
    (109) lista -> . LBRACKET elementos RBRACKET
    (107) clave_valor -> . valor ARROW valor

    RPAREN          shift and go to state 217
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    VARIABLE        shift and go to state 87
    ID              shift and go to state 41
    LBRACKET        shift and go to state 23

    elementos                      shift and go to state 216
    valor                          shift and go to state 218
    elemento                       shift and go to state 83
    expression                     shift and go to state 42
    lista                          shift and go to state 85
    clave_valor                    shift and go to state 86

state 164

    (100) array -> VARIABLE IGUAL LBRACKET RBRACKET . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 219


state 165

    (101) array -> VARIABLE IGUAL LBRACKET elementos . RBRACKET PUNTOYCOMA
    (103) elementos -> elementos . COMA elemento

    RBRACKET        shift and go to state 220
    COMA            shift and go to state 131


state 166

    (120) funcioninbuilt -> VARIABLE IGUAL funcionesdefin LPAREN . operaciones RPAREN PUNTOYCOMA
    (129) operaciones -> . operacion
    (130) operaciones -> . operacion PUNTOYCOMA
    (131) operaciones -> . operacion operadorAritmetico operaciones
    (132) operaciones -> . VARIABLE IGUAL operaciones
    (133) operaciones -> . VARIABLE
    (66) operacion -> . valor operadorAritmetico valor PUNTOYCOMA
    (67) operacion -> . operacion operadorAritmetico operacion
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

    VARIABLE        shift and go to state 221
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    ID              shift and go to state 41

    operaciones                    shift and go to state 222
    operacion                      shift and go to state 223
    valor                          shift and go to state 18
    expression                     shift and go to state 42

state 167

    (134) funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN . parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (135) parametros -> . STRING
    (136) parametros -> . parametros COMA STRING
    (137) parametros -> . VARIABLE
    (138) parametros -> . parametros COMA VARIABLE

    STRING          shift and go to state 204
    VARIABLE        shift and go to state 205

    parametros                     shift and go to state 224

state 168

    (139) arrow_function -> VARIABLE IGUAL FN LPAREN . parameter_list RPAREN ARROW expression PUNTOYCOMA
    (140) parameter_list -> . VARIABLE
    (141) parameter_list -> . VARIABLE COMA parameter_list

    VARIABLE        shift and go to state 225

    parameter_list                 shift and go to state 226

state 169

    (37) indexacion -> VARIABLE LBRACKET valor RBRACKET .

    PRINT           reduce using rule 37 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    PRINT_R         reduce using rule 37 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    ECHO            reduce using rule 37 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    VARIABLE        reduce using rule 37 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    WHILE           reduce using rule 37 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    IF              reduce using rule 37 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    ELSE            reduce using rule 37 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    FOR             reduce using rule 37 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    LBRACKET        reduce using rule 37 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    LBRACE          reduce using rule 37 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    FUNCTION        reduce using rule 37 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    NUMBER          reduce using rule 37 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    FLOAT           reduce using rule 37 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    STRING          reduce using rule 37 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    BOOLEAN         reduce using rule 37 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    ID              reduce using rule 37 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    PHP_END         reduce using rule 37 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)
    RLLAVE          reduce using rule 37 (indexacion -> VARIABLE LBRACKET valor RBRACKET .)


state 170

    (121) funcioninbuilt -> VARIABLE funcionesdefin LPAREN RPAREN . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 227


state 171

    (103) elementos -> elementos COMA elemento .

    RBRACKET        reduce using rule 103 (elementos -> elementos COMA elemento .)
    COMA            reduce using rule 103 (elementos -> elementos COMA elemento .)
    RPAREN          reduce using rule 103 (elementos -> elementos COMA elemento .)


state 172

    (107) clave_valor -> valor ARROW valor .

    RBRACKET        reduce using rule 107 (clave_valor -> valor ARROW valor .)
    COMA            reduce using rule 107 (clave_valor -> valor ARROW valor .)
    RPAREN          reduce using rule 107 (clave_valor -> valor ARROW valor .)


state 173

    (75) while -> WHILE LPAREN condicion RPAREN . LLLAVE instrucciones RLLAVE

    LLLAVE          shift and go to state 228


state 174

    (77) condicion -> condicion compuesta_logica . condicion
    (76) condicion -> . condicion_simple
    (77) condicion -> . condicion compuesta_logica condicion
    (78) condicion_simple -> . valor comparador valor
    (79) condicion_simple -> . VARIABLE comparador valor
    (80) condicion_simple -> . VARIABLE comparador VARIABLE
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

    VARIABLE        shift and go to state 136
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    ID              shift and go to state 41

    condicion                      shift and go to state 229
    condicion_simple               shift and go to state 134
    valor                          shift and go to state 135
    expression                     shift and go to state 42

state 175

    (81) compuesta_logica -> AND_LOGICAL .

    VARIABLE        reduce using rule 81 (compuesta_logica -> AND_LOGICAL .)
    NUMBER          reduce using rule 81 (compuesta_logica -> AND_LOGICAL .)
    FLOAT           reduce using rule 81 (compuesta_logica -> AND_LOGICAL .)
    STRING          reduce using rule 81 (compuesta_logica -> AND_LOGICAL .)
    BOOLEAN         reduce using rule 81 (compuesta_logica -> AND_LOGICAL .)
    ID              reduce using rule 81 (compuesta_logica -> AND_LOGICAL .)


state 176

    (82) compuesta_logica -> OR_LOGICAL .

    VARIABLE        reduce using rule 82 (compuesta_logica -> OR_LOGICAL .)
    NUMBER          reduce using rule 82 (compuesta_logica -> OR_LOGICAL .)
    FLOAT           reduce using rule 82 (compuesta_logica -> OR_LOGICAL .)
    STRING          reduce using rule 82 (compuesta_logica -> OR_LOGICAL .)
    BOOLEAN         reduce using rule 82 (compuesta_logica -> OR_LOGICAL .)
    ID              reduce using rule 82 (compuesta_logica -> OR_LOGICAL .)


state 177

    (78) condicion_simple -> valor comparador . valor
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    VARIABLE        shift and go to state 87
    ID              shift and go to state 41

    valor                          shift and go to state 230
    expression                     shift and go to state 42

state 178

    (54) comparador -> EQUAL .

    NUMBER          reduce using rule 54 (comparador -> EQUAL .)
    FLOAT           reduce using rule 54 (comparador -> EQUAL .)
    STRING          reduce using rule 54 (comparador -> EQUAL .)
    BOOLEAN         reduce using rule 54 (comparador -> EQUAL .)
    VARIABLE        reduce using rule 54 (comparador -> EQUAL .)
    ID              reduce using rule 54 (comparador -> EQUAL .)


state 179

    (55) comparador -> NOT_IDENTICAL .

    NUMBER          reduce using rule 55 (comparador -> NOT_IDENTICAL .)
    FLOAT           reduce using rule 55 (comparador -> NOT_IDENTICAL .)
    STRING          reduce using rule 55 (comparador -> NOT_IDENTICAL .)
    BOOLEAN         reduce using rule 55 (comparador -> NOT_IDENTICAL .)
    VARIABLE        reduce using rule 55 (comparador -> NOT_IDENTICAL .)
    ID              reduce using rule 55 (comparador -> NOT_IDENTICAL .)


state 180

    (56) comparador -> NOT_EQUAL .

    NUMBER          reduce using rule 56 (comparador -> NOT_EQUAL .)
    FLOAT           reduce using rule 56 (comparador -> NOT_EQUAL .)
    STRING          reduce using rule 56 (comparador -> NOT_EQUAL .)
    BOOLEAN         reduce using rule 56 (comparador -> NOT_EQUAL .)
    VARIABLE        reduce using rule 56 (comparador -> NOT_EQUAL .)
    ID              reduce using rule 56 (comparador -> NOT_EQUAL .)


state 181

    (57) comparador -> IGUAL .

    NUMBER          reduce using rule 57 (comparador -> IGUAL .)
    FLOAT           reduce using rule 57 (comparador -> IGUAL .)
    STRING          reduce using rule 57 (comparador -> IGUAL .)
    BOOLEAN         reduce using rule 57 (comparador -> IGUAL .)
    VARIABLE        reduce using rule 57 (comparador -> IGUAL .)
    ID              reduce using rule 57 (comparador -> IGUAL .)


state 182

    (58) comparador -> IDENTICAL .

    NUMBER          reduce using rule 58 (comparador -> IDENTICAL .)
    FLOAT           reduce using rule 58 (comparador -> IDENTICAL .)
    STRING          reduce using rule 58 (comparador -> IDENTICAL .)
    BOOLEAN         reduce using rule 58 (comparador -> IDENTICAL .)
    VARIABLE        reduce using rule 58 (comparador -> IDENTICAL .)
    ID              reduce using rule 58 (comparador -> IDENTICAL .)


state 183

    (59) comparador -> MAYOR .

    NUMBER          reduce using rule 59 (comparador -> MAYOR .)
    FLOAT           reduce using rule 59 (comparador -> MAYOR .)
    STRING          reduce using rule 59 (comparador -> MAYOR .)
    BOOLEAN         reduce using rule 59 (comparador -> MAYOR .)
    VARIABLE        reduce using rule 59 (comparador -> MAYOR .)
    ID              reduce using rule 59 (comparador -> MAYOR .)


state 184

    (60) comparador -> MENOR .

    NUMBER          reduce using rule 60 (comparador -> MENOR .)
    FLOAT           reduce using rule 60 (comparador -> MENOR .)
    STRING          reduce using rule 60 (comparador -> MENOR .)
    BOOLEAN         reduce using rule 60 (comparador -> MENOR .)
    VARIABLE        reduce using rule 60 (comparador -> MENOR .)
    ID              reduce using rule 60 (comparador -> MENOR .)


state 185

    (79) condicion_simple -> VARIABLE comparador . valor
    (80) condicion_simple -> VARIABLE comparador . VARIABLE
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

    VARIABLE        shift and go to state 231
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    ID              shift and go to state 41

    valor                          shift and go to state 232
    expression                     shift and go to state 42

state 186

    (43) if -> IF LPAREN comparaciones RPAREN . LLLAVE instrucciones RLLAVE

    LLLAVE          shift and go to state 233


state 187

    (44) if -> IF LPAREN VARIABLE RPAREN . LLLAVE instrucciones RLLAVE

    LLLAVE          shift and go to state 234


state 188

    (47) comparacion -> VARIABLE comparadorNum . VARIABLE
    (49) comparacion -> VARIABLE comparadorNum . valor
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

    VARIABLE        shift and go to state 235
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    ID              shift and go to state 41

    valor                          shift and go to state 236
    expression                     shift and go to state 42

state 189

    (50) comparadorNum -> MAYOR .

    VARIABLE        reduce using rule 50 (comparadorNum -> MAYOR .)
    NUMBER          reduce using rule 50 (comparadorNum -> MAYOR .)
    FLOAT           reduce using rule 50 (comparadorNum -> MAYOR .)
    STRING          reduce using rule 50 (comparadorNum -> MAYOR .)
    BOOLEAN         reduce using rule 50 (comparadorNum -> MAYOR .)
    ID              reduce using rule 50 (comparadorNum -> MAYOR .)


state 190

    (51) comparadorNum -> MAYORIGUAL .

    VARIABLE        reduce using rule 51 (comparadorNum -> MAYORIGUAL .)
    NUMBER          reduce using rule 51 (comparadorNum -> MAYORIGUAL .)
    FLOAT           reduce using rule 51 (comparadorNum -> MAYORIGUAL .)
    STRING          reduce using rule 51 (comparadorNum -> MAYORIGUAL .)
    BOOLEAN         reduce using rule 51 (comparadorNum -> MAYORIGUAL .)
    ID              reduce using rule 51 (comparadorNum -> MAYORIGUAL .)


state 191

    (52) comparadorNum -> MENOR .

    VARIABLE        reduce using rule 52 (comparadorNum -> MENOR .)
    NUMBER          reduce using rule 52 (comparadorNum -> MENOR .)
    FLOAT           reduce using rule 52 (comparadorNum -> MENOR .)
    STRING          reduce using rule 52 (comparadorNum -> MENOR .)
    BOOLEAN         reduce using rule 52 (comparadorNum -> MENOR .)
    ID              reduce using rule 52 (comparadorNum -> MENOR .)


state 192

    (53) comparadorNum -> MENORIGUAL .

    VARIABLE        reduce using rule 53 (comparadorNum -> MENORIGUAL .)
    NUMBER          reduce using rule 53 (comparadorNum -> MENORIGUAL .)
    FLOAT           reduce using rule 53 (comparadorNum -> MENORIGUAL .)
    STRING          reduce using rule 53 (comparadorNum -> MENORIGUAL .)
    BOOLEAN         reduce using rule 53 (comparadorNum -> MENORIGUAL .)
    ID              reduce using rule 53 (comparadorNum -> MENORIGUAL .)


state 193

    (46) comparaciones -> comparacion operadores . comparaciones
    (45) comparaciones -> . comparacion
    (46) comparaciones -> . comparacion operadores comparaciones
    (47) comparacion -> . VARIABLE comparadorNum VARIABLE
    (48) comparacion -> . valor comparador valor
    (49) comparacion -> . VARIABLE comparadorNum valor
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

    VARIABLE        shift and go to state 238
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    ID              shift and go to state 41

    comparacion                    shift and go to state 139
    comparaciones                  shift and go to state 237
    valor                          shift and go to state 140
    expression                     shift and go to state 42

state 194

    (61) operadores -> AND_LOGICAL .

    VARIABLE        reduce using rule 61 (operadores -> AND_LOGICAL .)
    NUMBER          reduce using rule 61 (operadores -> AND_LOGICAL .)
    FLOAT           reduce using rule 61 (operadores -> AND_LOGICAL .)
    STRING          reduce using rule 61 (operadores -> AND_LOGICAL .)
    BOOLEAN         reduce using rule 61 (operadores -> AND_LOGICAL .)
    ID              reduce using rule 61 (operadores -> AND_LOGICAL .)


state 195

    (62) operadores -> OR_LOGICAL .

    VARIABLE        reduce using rule 62 (operadores -> OR_LOGICAL .)
    NUMBER          reduce using rule 62 (operadores -> OR_LOGICAL .)
    FLOAT           reduce using rule 62 (operadores -> OR_LOGICAL .)
    STRING          reduce using rule 62 (operadores -> OR_LOGICAL .)
    BOOLEAN         reduce using rule 62 (operadores -> OR_LOGICAL .)
    ID              reduce using rule 62 (operadores -> OR_LOGICAL .)


state 196

    (48) comparacion -> valor comparador . valor
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    VARIABLE        shift and go to state 87
    ID              shift and go to state 41

    valor                          shift and go to state 239
    expression                     shift and go to state 42

state 197

    (74) else -> ELSE LLLAVE instrucciones RLLAVE .

    PRINT           reduce using rule 74 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    PRINT_R         reduce using rule 74 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    ECHO            reduce using rule 74 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    VARIABLE        reduce using rule 74 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    WHILE           reduce using rule 74 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    IF              reduce using rule 74 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    ELSE            reduce using rule 74 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    FOR             reduce using rule 74 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    LBRACKET        reduce using rule 74 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    LBRACE          reduce using rule 74 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    FUNCTION        reduce using rule 74 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    NUMBER          reduce using rule 74 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    FLOAT           reduce using rule 74 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    STRING          reduce using rule 74 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    BOOLEAN         reduce using rule 74 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    ID              reduce using rule 74 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    PHP_END         reduce using rule 74 (else -> ELSE LLLAVE instrucciones RLLAVE .)
    RLLAVE          reduce using rule 74 (else -> ELSE LLLAVE instrucciones RLLAVE .)


state 198

    (83) for_statement -> FOR LPAREN initialization PUNTOYCOMA . condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (76) condicion -> . condicion_simple
    (77) condicion -> . condicion compuesta_logica condicion
    (78) condicion_simple -> . valor comparador valor
    (79) condicion_simple -> . VARIABLE comparador valor
    (80) condicion_simple -> . VARIABLE comparador VARIABLE
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

    VARIABLE        shift and go to state 136
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    ID              shift and go to state 41

    condicion                      shift and go to state 240
    condicion_simple               shift and go to state 134
    valor                          shift and go to state 135
    expression                     shift and go to state 42

state 199

    (84) initialization -> VARIABLE IGUAL . valor
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    VARIABLE        shift and go to state 87
    ID              shift and go to state 41

    valor                          shift and go to state 241
    expression                     shift and go to state 42

state 200

    (112) pares -> pares COMA par .

    RBRACE          reduce using rule 112 (pares -> pares COMA par .)
    COMA            reduce using rule 112 (pares -> pares COMA par .)


state 201

    (113) par -> STRING ARROW valor .

    RBRACE          reduce using rule 113 (par -> STRING ARROW valor .)
    COMA            reduce using rule 113 (par -> STRING ARROW valor .)


state 202

    (118) funcion -> FUNCTION ID LPAREN RPAREN . LLLAVE instrucciones RLLAVE

    LLLAVE          shift and go to state 242


state 203

    (119) funcion -> FUNCTION ID LPAREN parametros . RPAREN LLLAVE instrucciones RLLAVE
    (136) parametros -> parametros . COMA STRING
    (138) parametros -> parametros . COMA VARIABLE

    RPAREN          shift and go to state 243
    COMA            shift and go to state 244


state 204

    (135) parametros -> STRING .

    RPAREN          reduce using rule 135 (parametros -> STRING .)
    COMA            reduce using rule 135 (parametros -> STRING .)


state 205

    (137) parametros -> VARIABLE .

    RPAREN          reduce using rule 137 (parametros -> VARIABLE .)
    COMA            reduce using rule 137 (parametros -> VARIABLE .)


state 206

    (16) imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .

    PRINT           reduce using rule 16 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    PRINT_R         reduce using rule 16 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    ECHO            reduce using rule 16 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    VARIABLE        reduce using rule 16 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    WHILE           reduce using rule 16 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    IF              reduce using rule 16 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    ELSE            reduce using rule 16 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    FOR             reduce using rule 16 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    LBRACKET        reduce using rule 16 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    LBRACE          reduce using rule 16 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    FUNCTION        reduce using rule 16 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    NUMBER          reduce using rule 16 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    FLOAT           reduce using rule 16 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    STRING          reduce using rule 16 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    BOOLEAN         reduce using rule 16 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    ID              reduce using rule 16 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    PHP_END         reduce using rule 16 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)
    RLLAVE          reduce using rule 16 (imprimir -> PRINT LPAREN valor RPAREN PUNTOYCOMA .)


state 207

    (17) imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .

    PRINT           reduce using rule 17 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    PRINT_R         reduce using rule 17 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    ECHO            reduce using rule 17 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    VARIABLE        reduce using rule 17 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    WHILE           reduce using rule 17 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    IF              reduce using rule 17 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    ELSE            reduce using rule 17 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    FOR             reduce using rule 17 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    LBRACKET        reduce using rule 17 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    LBRACE          reduce using rule 17 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    FUNCTION        reduce using rule 17 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    NUMBER          reduce using rule 17 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    FLOAT           reduce using rule 17 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    STRING          reduce using rule 17 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    BOOLEAN         reduce using rule 17 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    ID              reduce using rule 17 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    PHP_END         reduce using rule 17 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)
    RLLAVE          reduce using rule 17 (imprimir -> PRINT LPAREN argumentos RPAREN PUNTOYCOMA .)


state 208

    (31) argumentos -> argumentos COMA valor .

    RPAREN          reduce using rule 31 (argumentos -> argumentos COMA valor .)
    COMA            reduce using rule 31 (argumentos -> argumentos COMA valor .)


state 209

    (18) imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .

    PRINT           reduce using rule 18 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    PRINT_R         reduce using rule 18 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    ECHO            reduce using rule 18 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    VARIABLE        reduce using rule 18 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    WHILE           reduce using rule 18 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    IF              reduce using rule 18 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    ELSE            reduce using rule 18 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    FOR             reduce using rule 18 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    LBRACKET        reduce using rule 18 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    LBRACE          reduce using rule 18 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    FUNCTION        reduce using rule 18 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    NUMBER          reduce using rule 18 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    FLOAT           reduce using rule 18 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    STRING          reduce using rule 18 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    BOOLEAN         reduce using rule 18 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    ID              reduce using rule 18 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    PHP_END         reduce using rule 18 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)
    RLLAVE          reduce using rule 18 (imprimir -> PRINT_R LPAREN valor RPAREN PUNTOYCOMA .)


state 210

    (19) imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .

    PRINT           reduce using rule 19 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    PRINT_R         reduce using rule 19 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    ECHO            reduce using rule 19 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    VARIABLE        reduce using rule 19 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    WHILE           reduce using rule 19 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    IF              reduce using rule 19 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    ELSE            reduce using rule 19 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    FOR             reduce using rule 19 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    LBRACKET        reduce using rule 19 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    LBRACE          reduce using rule 19 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    FUNCTION        reduce using rule 19 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    NUMBER          reduce using rule 19 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    FLOAT           reduce using rule 19 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    STRING          reduce using rule 19 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    BOOLEAN         reduce using rule 19 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    ID              reduce using rule 19 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    PHP_END         reduce using rule 19 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)
    RLLAVE          reduce using rule 19 (imprimir -> PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA .)


state 211

    (22) imprimir -> ECHO valor COMA VARIABLE valor . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 245


state 212

    (38) indexacion -> ECHO VARIABLE LBRACKET valor RBRACKET . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 246


state 213

    (34) solicitud_datos -> VARIABLE IGUAL READLINE LPAREN STRING . RPAREN PUNTOYCOMA

    RPAREN          shift and go to state 247


state 214

    (35) solicitud_datos -> VARIABLE IGUAL READLINE LPAREN RPAREN . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 248


state 215

    (36) input -> VARIABLE IGUAL FGETS LPAREN VARIABLE . RPAREN PUNTOYCOMA

    RPAREN          shift and go to state 249


state 216

    (65) asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos . RPAREN PUNTOYCOMA
    (98) array -> VARIABLE IGUAL ARRAY LPAREN elementos . RPAREN PUNTOYCOMA
    (103) elementos -> elementos . COMA elemento

    RPAREN          shift and go to state 250
    COMA            shift and go to state 131


state 217

    (97) array -> VARIABLE IGUAL ARRAY LPAREN RPAREN . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 251


state 218

    (99) array -> VARIABLE IGUAL ARRAY LPAREN valor . RPAREN PUNTOYCOMA
    (104) elemento -> valor .
    (107) clave_valor -> valor . ARROW valor

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 252
    COMA            reduce using rule 104 (elemento -> valor .)
    ARROW           shift and go to state 132

  ! RPAREN          [ reduce using rule 104 (elemento -> valor .) ]


state 219

    (100) array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .

    PRINT           reduce using rule 100 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    PRINT_R         reduce using rule 100 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    ECHO            reduce using rule 100 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    VARIABLE        reduce using rule 100 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    WHILE           reduce using rule 100 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    IF              reduce using rule 100 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    ELSE            reduce using rule 100 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    FOR             reduce using rule 100 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    LBRACKET        reduce using rule 100 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    LBRACE          reduce using rule 100 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    FUNCTION        reduce using rule 100 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    NUMBER          reduce using rule 100 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    FLOAT           reduce using rule 100 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    STRING          reduce using rule 100 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    BOOLEAN         reduce using rule 100 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    ID              reduce using rule 100 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    PHP_END         reduce using rule 100 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)
    RLLAVE          reduce using rule 100 (array -> VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA .)


state 220

    (101) array -> VARIABLE IGUAL LBRACKET elementos RBRACKET . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 253


state 221

    (132) operaciones -> VARIABLE . IGUAL operaciones
    (133) operaciones -> VARIABLE .
    (27) valor -> VARIABLE .
    (142) expression -> VARIABLE .
    (144) expression -> VARIABLE . TIMES VARIABLE
    (145) expression -> VARIABLE . PLUS VARIABLE
    (146) expression -> VARIABLE . MINUS VARIABLE
    (147) expression -> VARIABLE . DIVIDE VARIABLE
    (148) expression -> VARIABLE . TIMES NUMBER
    (149) expression -> VARIABLE . PLUS NUMBER
    (150) expression -> VARIABLE . MINUS NUMBER
    (151) expression -> VARIABLE . DIVIDE NUMBER
    (152) expression -> VARIABLE . MOD VARIABLE

  ! reduce/reduce conflict for PLUS resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MINUS resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for TIMES resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for POT resolved using rule 27 (valor -> VARIABLE .)
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    IGUAL           shift and go to state 254
    RPAREN          reduce using rule 133 (operaciones -> VARIABLE .)
    POT             reduce using rule 27 (valor -> VARIABLE .)
    TIMES           shift and go to state 69
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    DIVIDE          shift and go to state 72
    MOD             shift and go to state 73

  ! PLUS            [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! MINUS           [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! TIMES           [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! DIVIDE          [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! MOD             [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! PLUS            [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! MINUS           [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! TIMES           [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! DIVIDE          [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! MOD             [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! POT             [ reduce using rule 142 (expression -> VARIABLE .) ]


state 222

    (120) funcioninbuilt -> VARIABLE IGUAL funcionesdefin LPAREN operaciones . RPAREN PUNTOYCOMA

    RPAREN          shift and go to state 255


state 223

    (129) operaciones -> operacion .
    (130) operaciones -> operacion . PUNTOYCOMA
    (131) operaciones -> operacion . operadorAritmetico operaciones
    (67) operacion -> operacion . operadorAritmetico operacion
    (68) operadorAritmetico -> . PLUS
    (69) operadorAritmetico -> . MINUS
    (70) operadorAritmetico -> . TIMES
    (71) operadorAritmetico -> . DIVIDE
    (72) operadorAritmetico -> . MOD
    (73) operadorAritmetico -> . POT

    RPAREN          reduce using rule 129 (operaciones -> operacion .)
    PUNTOYCOMA      shift and go to state 256
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MOD             shift and go to state 54
    POT             shift and go to state 55

    operadorAritmetico             shift and go to state 257

state 224

    (134) funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros . RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (136) parametros -> parametros . COMA STRING
    (138) parametros -> parametros . COMA VARIABLE

    RPAREN          shift and go to state 258
    COMA            shift and go to state 244


state 225

    (140) parameter_list -> VARIABLE .
    (141) parameter_list -> VARIABLE . COMA parameter_list

    RPAREN          reduce using rule 140 (parameter_list -> VARIABLE .)
    COMA            shift and go to state 259


state 226

    (139) arrow_function -> VARIABLE IGUAL FN LPAREN parameter_list . RPAREN ARROW expression PUNTOYCOMA

    RPAREN          shift and go to state 260


state 227

    (121) funcioninbuilt -> VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA .

    PRINT           reduce using rule 121 (funcioninbuilt -> VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA .)
    PRINT_R         reduce using rule 121 (funcioninbuilt -> VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA .)
    ECHO            reduce using rule 121 (funcioninbuilt -> VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA .)
    VARIABLE        reduce using rule 121 (funcioninbuilt -> VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA .)
    WHILE           reduce using rule 121 (funcioninbuilt -> VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA .)
    IF              reduce using rule 121 (funcioninbuilt -> VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA .)
    ELSE            reduce using rule 121 (funcioninbuilt -> VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA .)
    FOR             reduce using rule 121 (funcioninbuilt -> VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA .)
    LBRACKET        reduce using rule 121 (funcioninbuilt -> VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA .)
    LBRACE          reduce using rule 121 (funcioninbuilt -> VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA .)
    FUNCTION        reduce using rule 121 (funcioninbuilt -> VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA .)
    NUMBER          reduce using rule 121 (funcioninbuilt -> VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA .)
    FLOAT           reduce using rule 121 (funcioninbuilt -> VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA .)
    STRING          reduce using rule 121 (funcioninbuilt -> VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA .)
    BOOLEAN         reduce using rule 121 (funcioninbuilt -> VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA .)
    ID              reduce using rule 121 (funcioninbuilt -> VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA .)
    PHP_END         reduce using rule 121 (funcioninbuilt -> VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA .)
    RLLAVE          reduce using rule 121 (funcioninbuilt -> VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA .)


state 228

    (75) while -> WHILE LPAREN condicion RPAREN LLLAVE . instrucciones RLLAVE
    (4) instrucciones -> . instruccion
    (5) instrucciones -> . instrucciones instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) instruccion -> . operacion
    (15) instruccion -> . increment
    (16) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (19) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (20) imprimir -> . ECHO valor PUNTOYCOMA
    (21) imprimir -> . ECHO concatenar PUNTOYCOMA
    (22) imprimir -> . ECHO valor COMA VARIABLE valor PUNTOYCOMA
    (34) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA
    (36) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (37) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (38) indexacion -> . ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (39) estructurasControl -> . while
    (40) estructurasControl -> . if
    (41) estructurasControl -> . else
    (42) estructurasControl -> . for_statement
    (63) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (64) asignacion -> . VARIABLE IGUAL ARRAY PUNTOYCOMA
    (65) asignacion -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (94) estructurasDatos -> . array
    (95) estructurasDatos -> . lista
    (96) estructurasDatos -> . diccionario
    (114) funciones -> . funcion
    (115) funciones -> . funcioninbuilt
    (116) funciones -> . funcion_anonima
    (117) funciones -> . arrow_function
    (66) operacion -> . valor operadorAritmetico valor PUNTOYCOMA
    (67) operacion -> . operacion operadorAritmetico operacion
    (86) increment -> . VARIABLE INCREMENT
    (87) increment -> . VARIABLE DECREMENT
    (88) increment -> . VARIABLE DECREMENT PUNTOYCOMA
    (89) increment -> . VARIABLE PLUS_ASSIGN valor
    (90) increment -> . VARIABLE MINUS_ASSIGN valor
    (91) increment -> . empty
    (92) increment -> . VARIABLE INCREMENT PUNTOYCOMA
    (75) while -> . WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE
    (43) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (44) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (74) else -> . ELSE LLLAVE instrucciones RLLAVE
    (83) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (97) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (98) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (99) array -> . VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA
    (100) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (101) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (108) lista -> . LBRACKET RBRACKET
    (109) lista -> . LBRACKET elementos RBRACKET
    (110) diccionario -> . LBRACE pares RBRACE
    (118) funcion -> . FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE
    (119) funcion -> . FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE
    (120) funcioninbuilt -> . VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA
    (121) funcioninbuilt -> . VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA
    (134) funcion_anonima -> . VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (139) arrow_function -> . VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (93) empty -> .
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINT_R resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    PRINT           shift and go to state 17
    PRINT_R         shift and go to state 19
    ECHO            shift and go to state 20
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    FOR             shift and go to state 38
    LBRACKET        shift and go to state 23
    LBRACE          shift and go to state 39
    FUNCTION        shift and go to state 40
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    ID              shift and go to state 41
    RLLAVE          reduce using rule 93 (empty -> .)

  ! PRINT           [ reduce using rule 93 (empty -> .) ]
  ! PRINT_R         [ reduce using rule 93 (empty -> .) ]
  ! ECHO            [ reduce using rule 93 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 93 (empty -> .) ]
  ! WHILE           [ reduce using rule 93 (empty -> .) ]
  ! IF              [ reduce using rule 93 (empty -> .) ]
  ! ELSE            [ reduce using rule 93 (empty -> .) ]
  ! FOR             [ reduce using rule 93 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 93 (empty -> .) ]
  ! LBRACE          [ reduce using rule 93 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 93 (empty -> .) ]
  ! NUMBER          [ reduce using rule 93 (empty -> .) ]
  ! FLOAT           [ reduce using rule 93 (empty -> .) ]
  ! STRING          [ reduce using rule 93 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 93 (empty -> .) ]
  ! ID              [ reduce using rule 93 (empty -> .) ]

    instrucciones                  shift and go to state 261
    instruccion                    shift and go to state 6
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    operacion                      shift and go to state 15
    increment                      shift and go to state 16
    valor                          shift and go to state 18
    while                          shift and go to state 24
    if                             shift and go to state 25
    else                           shift and go to state 26
    for_statement                  shift and go to state 27
    array                          shift and go to state 28
    lista                          shift and go to state 29
    diccionario                    shift and go to state 30
    funcion                        shift and go to state 31
    funcioninbuilt                 shift and go to state 32
    funcion_anonima                shift and go to state 33
    arrow_function                 shift and go to state 34
    empty                          shift and go to state 48
    expression                     shift and go to state 42

state 229

    (77) condicion -> condicion compuesta_logica condicion .
    (77) condicion -> condicion . compuesta_logica condicion
    (81) compuesta_logica -> . AND_LOGICAL
    (82) compuesta_logica -> . OR_LOGICAL

  ! shift/reduce conflict for AND_LOGICAL resolved as shift
  ! shift/reduce conflict for OR_LOGICAL resolved as shift
    RPAREN          reduce using rule 77 (condicion -> condicion compuesta_logica condicion .)
    PUNTOYCOMA      reduce using rule 77 (condicion -> condicion compuesta_logica condicion .)
    AND_LOGICAL     shift and go to state 175
    OR_LOGICAL      shift and go to state 176

  ! AND_LOGICAL     [ reduce using rule 77 (condicion -> condicion compuesta_logica condicion .) ]
  ! OR_LOGICAL      [ reduce using rule 77 (condicion -> condicion compuesta_logica condicion .) ]

    compuesta_logica               shift and go to state 174

state 230

    (78) condicion_simple -> valor comparador valor .

    RPAREN          reduce using rule 78 (condicion_simple -> valor comparador valor .)
    AND_LOGICAL     reduce using rule 78 (condicion_simple -> valor comparador valor .)
    OR_LOGICAL      reduce using rule 78 (condicion_simple -> valor comparador valor .)
    PUNTOYCOMA      reduce using rule 78 (condicion_simple -> valor comparador valor .)


state 231

    (80) condicion_simple -> VARIABLE comparador VARIABLE .
    (27) valor -> VARIABLE .
    (142) expression -> VARIABLE .
    (144) expression -> VARIABLE . TIMES VARIABLE
    (145) expression -> VARIABLE . PLUS VARIABLE
    (146) expression -> VARIABLE . MINUS VARIABLE
    (147) expression -> VARIABLE . DIVIDE VARIABLE
    (148) expression -> VARIABLE . TIMES NUMBER
    (149) expression -> VARIABLE . PLUS NUMBER
    (150) expression -> VARIABLE . MINUS NUMBER
    (151) expression -> VARIABLE . DIVIDE NUMBER
    (152) expression -> VARIABLE . MOD VARIABLE

  ! reduce/reduce conflict for RPAREN resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for AND_LOGICAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for OR_LOGICAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for AND_LOGICAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for OR_LOGICAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 27 (valor -> VARIABLE .)
    RPAREN          reduce using rule 27 (valor -> VARIABLE .)
    AND_LOGICAL     reduce using rule 27 (valor -> VARIABLE .)
    OR_LOGICAL      reduce using rule 27 (valor -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 27 (valor -> VARIABLE .)
    TIMES           shift and go to state 69
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    DIVIDE          shift and go to state 72
    MOD             shift and go to state 73

  ! RPAREN          [ reduce using rule 80 (condicion_simple -> VARIABLE comparador VARIABLE .) ]
  ! AND_LOGICAL     [ reduce using rule 80 (condicion_simple -> VARIABLE comparador VARIABLE .) ]
  ! OR_LOGICAL      [ reduce using rule 80 (condicion_simple -> VARIABLE comparador VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 80 (condicion_simple -> VARIABLE comparador VARIABLE .) ]
  ! RPAREN          [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! AND_LOGICAL     [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! OR_LOGICAL      [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 142 (expression -> VARIABLE .) ]


state 232

    (79) condicion_simple -> VARIABLE comparador valor .

    RPAREN          reduce using rule 79 (condicion_simple -> VARIABLE comparador valor .)
    AND_LOGICAL     reduce using rule 79 (condicion_simple -> VARIABLE comparador valor .)
    OR_LOGICAL      reduce using rule 79 (condicion_simple -> VARIABLE comparador valor .)
    PUNTOYCOMA      reduce using rule 79 (condicion_simple -> VARIABLE comparador valor .)


state 233

    (43) if -> IF LPAREN comparaciones RPAREN LLLAVE . instrucciones RLLAVE
    (4) instrucciones -> . instruccion
    (5) instrucciones -> . instrucciones instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) instruccion -> . operacion
    (15) instruccion -> . increment
    (16) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (19) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (20) imprimir -> . ECHO valor PUNTOYCOMA
    (21) imprimir -> . ECHO concatenar PUNTOYCOMA
    (22) imprimir -> . ECHO valor COMA VARIABLE valor PUNTOYCOMA
    (34) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA
    (36) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (37) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (38) indexacion -> . ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (39) estructurasControl -> . while
    (40) estructurasControl -> . if
    (41) estructurasControl -> . else
    (42) estructurasControl -> . for_statement
    (63) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (64) asignacion -> . VARIABLE IGUAL ARRAY PUNTOYCOMA
    (65) asignacion -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (94) estructurasDatos -> . array
    (95) estructurasDatos -> . lista
    (96) estructurasDatos -> . diccionario
    (114) funciones -> . funcion
    (115) funciones -> . funcioninbuilt
    (116) funciones -> . funcion_anonima
    (117) funciones -> . arrow_function
    (66) operacion -> . valor operadorAritmetico valor PUNTOYCOMA
    (67) operacion -> . operacion operadorAritmetico operacion
    (86) increment -> . VARIABLE INCREMENT
    (87) increment -> . VARIABLE DECREMENT
    (88) increment -> . VARIABLE DECREMENT PUNTOYCOMA
    (89) increment -> . VARIABLE PLUS_ASSIGN valor
    (90) increment -> . VARIABLE MINUS_ASSIGN valor
    (91) increment -> . empty
    (92) increment -> . VARIABLE INCREMENT PUNTOYCOMA
    (75) while -> . WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE
    (43) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (44) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (74) else -> . ELSE LLLAVE instrucciones RLLAVE
    (83) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (97) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (98) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (99) array -> . VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA
    (100) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (101) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (108) lista -> . LBRACKET RBRACKET
    (109) lista -> . LBRACKET elementos RBRACKET
    (110) diccionario -> . LBRACE pares RBRACE
    (118) funcion -> . FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE
    (119) funcion -> . FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE
    (120) funcioninbuilt -> . VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA
    (121) funcioninbuilt -> . VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA
    (134) funcion_anonima -> . VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (139) arrow_function -> . VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (93) empty -> .
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINT_R resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    PRINT           shift and go to state 17
    PRINT_R         shift and go to state 19
    ECHO            shift and go to state 20
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    FOR             shift and go to state 38
    LBRACKET        shift and go to state 23
    LBRACE          shift and go to state 39
    FUNCTION        shift and go to state 40
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    ID              shift and go to state 41
    RLLAVE          reduce using rule 93 (empty -> .)

  ! PRINT           [ reduce using rule 93 (empty -> .) ]
  ! PRINT_R         [ reduce using rule 93 (empty -> .) ]
  ! ECHO            [ reduce using rule 93 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 93 (empty -> .) ]
  ! WHILE           [ reduce using rule 93 (empty -> .) ]
  ! IF              [ reduce using rule 93 (empty -> .) ]
  ! ELSE            [ reduce using rule 93 (empty -> .) ]
  ! FOR             [ reduce using rule 93 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 93 (empty -> .) ]
  ! LBRACE          [ reduce using rule 93 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 93 (empty -> .) ]
  ! NUMBER          [ reduce using rule 93 (empty -> .) ]
  ! FLOAT           [ reduce using rule 93 (empty -> .) ]
  ! STRING          [ reduce using rule 93 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 93 (empty -> .) ]
  ! ID              [ reduce using rule 93 (empty -> .) ]

    instrucciones                  shift and go to state 262
    instruccion                    shift and go to state 6
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    operacion                      shift and go to state 15
    increment                      shift and go to state 16
    valor                          shift and go to state 18
    while                          shift and go to state 24
    if                             shift and go to state 25
    else                           shift and go to state 26
    for_statement                  shift and go to state 27
    array                          shift and go to state 28
    lista                          shift and go to state 29
    diccionario                    shift and go to state 30
    funcion                        shift and go to state 31
    funcioninbuilt                 shift and go to state 32
    funcion_anonima                shift and go to state 33
    arrow_function                 shift and go to state 34
    empty                          shift and go to state 48
    expression                     shift and go to state 42

state 234

    (44) if -> IF LPAREN VARIABLE RPAREN LLLAVE . instrucciones RLLAVE
    (4) instrucciones -> . instruccion
    (5) instrucciones -> . instrucciones instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) instruccion -> . operacion
    (15) instruccion -> . increment
    (16) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (19) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (20) imprimir -> . ECHO valor PUNTOYCOMA
    (21) imprimir -> . ECHO concatenar PUNTOYCOMA
    (22) imprimir -> . ECHO valor COMA VARIABLE valor PUNTOYCOMA
    (34) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA
    (36) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (37) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (38) indexacion -> . ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (39) estructurasControl -> . while
    (40) estructurasControl -> . if
    (41) estructurasControl -> . else
    (42) estructurasControl -> . for_statement
    (63) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (64) asignacion -> . VARIABLE IGUAL ARRAY PUNTOYCOMA
    (65) asignacion -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (94) estructurasDatos -> . array
    (95) estructurasDatos -> . lista
    (96) estructurasDatos -> . diccionario
    (114) funciones -> . funcion
    (115) funciones -> . funcioninbuilt
    (116) funciones -> . funcion_anonima
    (117) funciones -> . arrow_function
    (66) operacion -> . valor operadorAritmetico valor PUNTOYCOMA
    (67) operacion -> . operacion operadorAritmetico operacion
    (86) increment -> . VARIABLE INCREMENT
    (87) increment -> . VARIABLE DECREMENT
    (88) increment -> . VARIABLE DECREMENT PUNTOYCOMA
    (89) increment -> . VARIABLE PLUS_ASSIGN valor
    (90) increment -> . VARIABLE MINUS_ASSIGN valor
    (91) increment -> . empty
    (92) increment -> . VARIABLE INCREMENT PUNTOYCOMA
    (75) while -> . WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE
    (43) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (44) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (74) else -> . ELSE LLLAVE instrucciones RLLAVE
    (83) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (97) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (98) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (99) array -> . VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA
    (100) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (101) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (108) lista -> . LBRACKET RBRACKET
    (109) lista -> . LBRACKET elementos RBRACKET
    (110) diccionario -> . LBRACE pares RBRACE
    (118) funcion -> . FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE
    (119) funcion -> . FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE
    (120) funcioninbuilt -> . VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA
    (121) funcioninbuilt -> . VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA
    (134) funcion_anonima -> . VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (139) arrow_function -> . VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (93) empty -> .
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINT_R resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    PRINT           shift and go to state 17
    PRINT_R         shift and go to state 19
    ECHO            shift and go to state 20
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    FOR             shift and go to state 38
    LBRACKET        shift and go to state 23
    LBRACE          shift and go to state 39
    FUNCTION        shift and go to state 40
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    ID              shift and go to state 41
    RLLAVE          reduce using rule 93 (empty -> .)

  ! PRINT           [ reduce using rule 93 (empty -> .) ]
  ! PRINT_R         [ reduce using rule 93 (empty -> .) ]
  ! ECHO            [ reduce using rule 93 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 93 (empty -> .) ]
  ! WHILE           [ reduce using rule 93 (empty -> .) ]
  ! IF              [ reduce using rule 93 (empty -> .) ]
  ! ELSE            [ reduce using rule 93 (empty -> .) ]
  ! FOR             [ reduce using rule 93 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 93 (empty -> .) ]
  ! LBRACE          [ reduce using rule 93 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 93 (empty -> .) ]
  ! NUMBER          [ reduce using rule 93 (empty -> .) ]
  ! FLOAT           [ reduce using rule 93 (empty -> .) ]
  ! STRING          [ reduce using rule 93 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 93 (empty -> .) ]
  ! ID              [ reduce using rule 93 (empty -> .) ]

    instrucciones                  shift and go to state 263
    instruccion                    shift and go to state 6
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    operacion                      shift and go to state 15
    increment                      shift and go to state 16
    valor                          shift and go to state 18
    while                          shift and go to state 24
    if                             shift and go to state 25
    else                           shift and go to state 26
    for_statement                  shift and go to state 27
    array                          shift and go to state 28
    lista                          shift and go to state 29
    diccionario                    shift and go to state 30
    funcion                        shift and go to state 31
    funcioninbuilt                 shift and go to state 32
    funcion_anonima                shift and go to state 33
    arrow_function                 shift and go to state 34
    empty                          shift and go to state 48
    expression                     shift and go to state 42

state 235

    (47) comparacion -> VARIABLE comparadorNum VARIABLE .
    (27) valor -> VARIABLE .
    (142) expression -> VARIABLE .
    (144) expression -> VARIABLE . TIMES VARIABLE
    (145) expression -> VARIABLE . PLUS VARIABLE
    (146) expression -> VARIABLE . MINUS VARIABLE
    (147) expression -> VARIABLE . DIVIDE VARIABLE
    (148) expression -> VARIABLE . TIMES NUMBER
    (149) expression -> VARIABLE . PLUS NUMBER
    (150) expression -> VARIABLE . MINUS NUMBER
    (151) expression -> VARIABLE . DIVIDE NUMBER
    (152) expression -> VARIABLE . MOD VARIABLE

  ! reduce/reduce conflict for AND_LOGICAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for OR_LOGICAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for AND_LOGICAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for OR_LOGICAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 27 (valor -> VARIABLE .)
    AND_LOGICAL     reduce using rule 27 (valor -> VARIABLE .)
    OR_LOGICAL      reduce using rule 27 (valor -> VARIABLE .)
    RPAREN          reduce using rule 27 (valor -> VARIABLE .)
    TIMES           shift and go to state 69
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    DIVIDE          shift and go to state 72
    MOD             shift and go to state 73

  ! AND_LOGICAL     [ reduce using rule 47 (comparacion -> VARIABLE comparadorNum VARIABLE .) ]
  ! OR_LOGICAL      [ reduce using rule 47 (comparacion -> VARIABLE comparadorNum VARIABLE .) ]
  ! RPAREN          [ reduce using rule 47 (comparacion -> VARIABLE comparadorNum VARIABLE .) ]
  ! AND_LOGICAL     [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! OR_LOGICAL      [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! RPAREN          [ reduce using rule 142 (expression -> VARIABLE .) ]


state 236

    (49) comparacion -> VARIABLE comparadorNum valor .

    AND_LOGICAL     reduce using rule 49 (comparacion -> VARIABLE comparadorNum valor .)
    OR_LOGICAL      reduce using rule 49 (comparacion -> VARIABLE comparadorNum valor .)
    RPAREN          reduce using rule 49 (comparacion -> VARIABLE comparadorNum valor .)


state 237

    (46) comparaciones -> comparacion operadores comparaciones .

    RPAREN          reduce using rule 46 (comparaciones -> comparacion operadores comparaciones .)


state 238

    (47) comparacion -> VARIABLE . comparadorNum VARIABLE
    (49) comparacion -> VARIABLE . comparadorNum valor
    (27) valor -> VARIABLE .
    (142) expression -> VARIABLE .
    (144) expression -> VARIABLE . TIMES VARIABLE
    (145) expression -> VARIABLE . PLUS VARIABLE
    (146) expression -> VARIABLE . MINUS VARIABLE
    (147) expression -> VARIABLE . DIVIDE VARIABLE
    (148) expression -> VARIABLE . TIMES NUMBER
    (149) expression -> VARIABLE . PLUS NUMBER
    (150) expression -> VARIABLE . MINUS NUMBER
    (151) expression -> VARIABLE . DIVIDE NUMBER
    (152) expression -> VARIABLE . MOD VARIABLE
    (50) comparadorNum -> . MAYOR
    (51) comparadorNum -> . MAYORIGUAL
    (52) comparadorNum -> . MENOR
    (53) comparadorNum -> . MENORIGUAL

  ! reduce/reduce conflict for EQUAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NOT_IDENTICAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IGUAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MAYOR resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MENOR resolved using rule 27 (valor -> VARIABLE .)
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
    EQUAL           reduce using rule 27 (valor -> VARIABLE .)
    NOT_IDENTICAL   reduce using rule 27 (valor -> VARIABLE .)
    NOT_EQUAL       reduce using rule 27 (valor -> VARIABLE .)
    IGUAL           reduce using rule 27 (valor -> VARIABLE .)
    IDENTICAL       reduce using rule 27 (valor -> VARIABLE .)
    TIMES           shift and go to state 69
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    DIVIDE          shift and go to state 72
    MOD             shift and go to state 73
    MAYOR           shift and go to state 189
    MAYORIGUAL      shift and go to state 190
    MENOR           shift and go to state 191
    MENORIGUAL      shift and go to state 192

  ! MAYOR           [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 27 (valor -> VARIABLE .) ]
  ! EQUAL           [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! NOT_IDENTICAL   [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! NOT_EQUAL       [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! IGUAL           [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! IDENTICAL       [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 142 (expression -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 142 (expression -> VARIABLE .) ]

    comparadorNum                  shift and go to state 188

state 239

    (48) comparacion -> valor comparador valor .

    AND_LOGICAL     reduce using rule 48 (comparacion -> valor comparador valor .)
    OR_LOGICAL      reduce using rule 48 (comparacion -> valor comparador valor .)
    RPAREN          reduce using rule 48 (comparacion -> valor comparador valor .)


state 240

    (83) for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion . PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (77) condicion -> condicion . compuesta_logica condicion
    (81) compuesta_logica -> . AND_LOGICAL
    (82) compuesta_logica -> . OR_LOGICAL

    PUNTOYCOMA      shift and go to state 264
    AND_LOGICAL     shift and go to state 175
    OR_LOGICAL      shift and go to state 176

    compuesta_logica               shift and go to state 174

state 241

    (84) initialization -> VARIABLE IGUAL valor .

    PUNTOYCOMA      reduce using rule 84 (initialization -> VARIABLE IGUAL valor .)


state 242

    (118) funcion -> FUNCTION ID LPAREN RPAREN LLLAVE . instrucciones RLLAVE
    (4) instrucciones -> . instruccion
    (5) instrucciones -> . instrucciones instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) instruccion -> . operacion
    (15) instruccion -> . increment
    (16) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (19) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (20) imprimir -> . ECHO valor PUNTOYCOMA
    (21) imprimir -> . ECHO concatenar PUNTOYCOMA
    (22) imprimir -> . ECHO valor COMA VARIABLE valor PUNTOYCOMA
    (34) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA
    (36) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (37) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (38) indexacion -> . ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (39) estructurasControl -> . while
    (40) estructurasControl -> . if
    (41) estructurasControl -> . else
    (42) estructurasControl -> . for_statement
    (63) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (64) asignacion -> . VARIABLE IGUAL ARRAY PUNTOYCOMA
    (65) asignacion -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (94) estructurasDatos -> . array
    (95) estructurasDatos -> . lista
    (96) estructurasDatos -> . diccionario
    (114) funciones -> . funcion
    (115) funciones -> . funcioninbuilt
    (116) funciones -> . funcion_anonima
    (117) funciones -> . arrow_function
    (66) operacion -> . valor operadorAritmetico valor PUNTOYCOMA
    (67) operacion -> . operacion operadorAritmetico operacion
    (86) increment -> . VARIABLE INCREMENT
    (87) increment -> . VARIABLE DECREMENT
    (88) increment -> . VARIABLE DECREMENT PUNTOYCOMA
    (89) increment -> . VARIABLE PLUS_ASSIGN valor
    (90) increment -> . VARIABLE MINUS_ASSIGN valor
    (91) increment -> . empty
    (92) increment -> . VARIABLE INCREMENT PUNTOYCOMA
    (75) while -> . WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE
    (43) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (44) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (74) else -> . ELSE LLLAVE instrucciones RLLAVE
    (83) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (97) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (98) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (99) array -> . VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA
    (100) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (101) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (108) lista -> . LBRACKET RBRACKET
    (109) lista -> . LBRACKET elementos RBRACKET
    (110) diccionario -> . LBRACE pares RBRACE
    (118) funcion -> . FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE
    (119) funcion -> . FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE
    (120) funcioninbuilt -> . VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA
    (121) funcioninbuilt -> . VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA
    (134) funcion_anonima -> . VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (139) arrow_function -> . VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (93) empty -> .
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINT_R resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    PRINT           shift and go to state 17
    PRINT_R         shift and go to state 19
    ECHO            shift and go to state 20
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    FOR             shift and go to state 38
    LBRACKET        shift and go to state 23
    LBRACE          shift and go to state 39
    FUNCTION        shift and go to state 40
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    ID              shift and go to state 41
    RLLAVE          reduce using rule 93 (empty -> .)

  ! PRINT           [ reduce using rule 93 (empty -> .) ]
  ! PRINT_R         [ reduce using rule 93 (empty -> .) ]
  ! ECHO            [ reduce using rule 93 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 93 (empty -> .) ]
  ! WHILE           [ reduce using rule 93 (empty -> .) ]
  ! IF              [ reduce using rule 93 (empty -> .) ]
  ! ELSE            [ reduce using rule 93 (empty -> .) ]
  ! FOR             [ reduce using rule 93 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 93 (empty -> .) ]
  ! LBRACE          [ reduce using rule 93 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 93 (empty -> .) ]
  ! NUMBER          [ reduce using rule 93 (empty -> .) ]
  ! FLOAT           [ reduce using rule 93 (empty -> .) ]
  ! STRING          [ reduce using rule 93 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 93 (empty -> .) ]
  ! ID              [ reduce using rule 93 (empty -> .) ]

    instrucciones                  shift and go to state 265
    instruccion                    shift and go to state 6
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    operacion                      shift and go to state 15
    increment                      shift and go to state 16
    valor                          shift and go to state 18
    while                          shift and go to state 24
    if                             shift and go to state 25
    else                           shift and go to state 26
    for_statement                  shift and go to state 27
    array                          shift and go to state 28
    lista                          shift and go to state 29
    diccionario                    shift and go to state 30
    funcion                        shift and go to state 31
    funcioninbuilt                 shift and go to state 32
    funcion_anonima                shift and go to state 33
    arrow_function                 shift and go to state 34
    empty                          shift and go to state 48
    expression                     shift and go to state 42

state 243

    (119) funcion -> FUNCTION ID LPAREN parametros RPAREN . LLLAVE instrucciones RLLAVE

    LLLAVE          shift and go to state 266


state 244

    (136) parametros -> parametros COMA . STRING
    (138) parametros -> parametros COMA . VARIABLE

    STRING          shift and go to state 267
    VARIABLE        shift and go to state 268


state 245

    (22) imprimir -> ECHO valor COMA VARIABLE valor PUNTOYCOMA .

    PRINT           reduce using rule 22 (imprimir -> ECHO valor COMA VARIABLE valor PUNTOYCOMA .)
    PRINT_R         reduce using rule 22 (imprimir -> ECHO valor COMA VARIABLE valor PUNTOYCOMA .)
    ECHO            reduce using rule 22 (imprimir -> ECHO valor COMA VARIABLE valor PUNTOYCOMA .)
    VARIABLE        reduce using rule 22 (imprimir -> ECHO valor COMA VARIABLE valor PUNTOYCOMA .)
    WHILE           reduce using rule 22 (imprimir -> ECHO valor COMA VARIABLE valor PUNTOYCOMA .)
    IF              reduce using rule 22 (imprimir -> ECHO valor COMA VARIABLE valor PUNTOYCOMA .)
    ELSE            reduce using rule 22 (imprimir -> ECHO valor COMA VARIABLE valor PUNTOYCOMA .)
    FOR             reduce using rule 22 (imprimir -> ECHO valor COMA VARIABLE valor PUNTOYCOMA .)
    LBRACKET        reduce using rule 22 (imprimir -> ECHO valor COMA VARIABLE valor PUNTOYCOMA .)
    LBRACE          reduce using rule 22 (imprimir -> ECHO valor COMA VARIABLE valor PUNTOYCOMA .)
    FUNCTION        reduce using rule 22 (imprimir -> ECHO valor COMA VARIABLE valor PUNTOYCOMA .)
    NUMBER          reduce using rule 22 (imprimir -> ECHO valor COMA VARIABLE valor PUNTOYCOMA .)
    FLOAT           reduce using rule 22 (imprimir -> ECHO valor COMA VARIABLE valor PUNTOYCOMA .)
    STRING          reduce using rule 22 (imprimir -> ECHO valor COMA VARIABLE valor PUNTOYCOMA .)
    BOOLEAN         reduce using rule 22 (imprimir -> ECHO valor COMA VARIABLE valor PUNTOYCOMA .)
    ID              reduce using rule 22 (imprimir -> ECHO valor COMA VARIABLE valor PUNTOYCOMA .)
    PHP_END         reduce using rule 22 (imprimir -> ECHO valor COMA VARIABLE valor PUNTOYCOMA .)
    RLLAVE          reduce using rule 22 (imprimir -> ECHO valor COMA VARIABLE valor PUNTOYCOMA .)


state 246

    (38) indexacion -> ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .

    PRINT           reduce using rule 38 (indexacion -> ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    PRINT_R         reduce using rule 38 (indexacion -> ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    ECHO            reduce using rule 38 (indexacion -> ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    VARIABLE        reduce using rule 38 (indexacion -> ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    WHILE           reduce using rule 38 (indexacion -> ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    IF              reduce using rule 38 (indexacion -> ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    ELSE            reduce using rule 38 (indexacion -> ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    FOR             reduce using rule 38 (indexacion -> ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    LBRACKET        reduce using rule 38 (indexacion -> ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    LBRACE          reduce using rule 38 (indexacion -> ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    FUNCTION        reduce using rule 38 (indexacion -> ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    NUMBER          reduce using rule 38 (indexacion -> ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    FLOAT           reduce using rule 38 (indexacion -> ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    STRING          reduce using rule 38 (indexacion -> ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    BOOLEAN         reduce using rule 38 (indexacion -> ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    ID              reduce using rule 38 (indexacion -> ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    PHP_END         reduce using rule 38 (indexacion -> ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)
    RLLAVE          reduce using rule 38 (indexacion -> ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA .)


state 247

    (34) solicitud_datos -> VARIABLE IGUAL READLINE LPAREN STRING RPAREN . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 269


state 248

    (35) solicitud_datos -> VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA .

    PRINT           reduce using rule 35 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA .)
    PRINT_R         reduce using rule 35 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA .)
    ECHO            reduce using rule 35 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA .)
    VARIABLE        reduce using rule 35 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA .)
    WHILE           reduce using rule 35 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA .)
    IF              reduce using rule 35 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA .)
    ELSE            reduce using rule 35 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA .)
    FOR             reduce using rule 35 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA .)
    LBRACKET        reduce using rule 35 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA .)
    LBRACE          reduce using rule 35 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA .)
    FUNCTION        reduce using rule 35 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA .)
    NUMBER          reduce using rule 35 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA .)
    FLOAT           reduce using rule 35 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA .)
    STRING          reduce using rule 35 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA .)
    BOOLEAN         reduce using rule 35 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA .)
    ID              reduce using rule 35 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA .)
    PHP_END         reduce using rule 35 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA .)
    RLLAVE          reduce using rule 35 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA .)


state 249

    (36) input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 270


state 250

    (65) asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN . PUNTOYCOMA
    (98) array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 271


state 251

    (97) array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .

    PRINT           reduce using rule 97 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    PRINT_R         reduce using rule 97 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    ECHO            reduce using rule 97 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    VARIABLE        reduce using rule 97 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    WHILE           reduce using rule 97 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    IF              reduce using rule 97 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    ELSE            reduce using rule 97 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    FOR             reduce using rule 97 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    LBRACKET        reduce using rule 97 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    LBRACE          reduce using rule 97 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    FUNCTION        reduce using rule 97 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    NUMBER          reduce using rule 97 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    FLOAT           reduce using rule 97 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    STRING          reduce using rule 97 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    BOOLEAN         reduce using rule 97 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    ID              reduce using rule 97 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    PHP_END         reduce using rule 97 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)
    RLLAVE          reduce using rule 97 (array -> VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA .)


state 252

    (99) array -> VARIABLE IGUAL ARRAY LPAREN valor RPAREN . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 272


state 253

    (101) array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .

    PRINT           reduce using rule 101 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    PRINT_R         reduce using rule 101 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    ECHO            reduce using rule 101 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    VARIABLE        reduce using rule 101 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    WHILE           reduce using rule 101 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    IF              reduce using rule 101 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    ELSE            reduce using rule 101 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    FOR             reduce using rule 101 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    LBRACKET        reduce using rule 101 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    LBRACE          reduce using rule 101 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    FUNCTION        reduce using rule 101 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    NUMBER          reduce using rule 101 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    FLOAT           reduce using rule 101 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    STRING          reduce using rule 101 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    BOOLEAN         reduce using rule 101 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    ID              reduce using rule 101 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    PHP_END         reduce using rule 101 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)
    RLLAVE          reduce using rule 101 (array -> VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA .)


state 254

    (132) operaciones -> VARIABLE IGUAL . operaciones
    (129) operaciones -> . operacion
    (130) operaciones -> . operacion PUNTOYCOMA
    (131) operaciones -> . operacion operadorAritmetico operaciones
    (132) operaciones -> . VARIABLE IGUAL operaciones
    (133) operaciones -> . VARIABLE
    (66) operacion -> . valor operadorAritmetico valor PUNTOYCOMA
    (67) operacion -> . operacion operadorAritmetico operacion
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

    VARIABLE        shift and go to state 221
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    ID              shift and go to state 41

    operaciones                    shift and go to state 273
    operacion                      shift and go to state 223
    valor                          shift and go to state 18
    expression                     shift and go to state 42

state 255

    (120) funcioninbuilt -> VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 274


state 256

    (130) operaciones -> operacion PUNTOYCOMA .

    RPAREN          reduce using rule 130 (operaciones -> operacion PUNTOYCOMA .)


state 257

    (131) operaciones -> operacion operadorAritmetico . operaciones
    (67) operacion -> operacion operadorAritmetico . operacion
    (129) operaciones -> . operacion
    (130) operaciones -> . operacion PUNTOYCOMA
    (131) operaciones -> . operacion operadorAritmetico operaciones
    (132) operaciones -> . VARIABLE IGUAL operaciones
    (133) operaciones -> . VARIABLE
    (66) operacion -> . valor operadorAritmetico valor PUNTOYCOMA
    (67) operacion -> . operacion operadorAritmetico operacion
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

    VARIABLE        shift and go to state 221
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    ID              shift and go to state 41

    operacion                      shift and go to state 275
    operaciones                    shift and go to state 276
    valor                          shift and go to state 18
    expression                     shift and go to state 42

state 258

    (134) funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN . LLLAVE instrucciones RLLAVE PUNTOYCOMA

    LLLAVE          shift and go to state 277


state 259

    (141) parameter_list -> VARIABLE COMA . parameter_list
    (140) parameter_list -> . VARIABLE
    (141) parameter_list -> . VARIABLE COMA parameter_list

    VARIABLE        shift and go to state 225

    parameter_list                 shift and go to state 278

state 260

    (139) arrow_function -> VARIABLE IGUAL FN LPAREN parameter_list RPAREN . ARROW expression PUNTOYCOMA

    ARROW           shift and go to state 279


state 261

    (75) while -> WHILE LPAREN condicion RPAREN LLLAVE instrucciones . RLLAVE
    (5) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) instruccion -> . operacion
    (15) instruccion -> . increment
    (16) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (19) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (20) imprimir -> . ECHO valor PUNTOYCOMA
    (21) imprimir -> . ECHO concatenar PUNTOYCOMA
    (22) imprimir -> . ECHO valor COMA VARIABLE valor PUNTOYCOMA
    (34) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA
    (36) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (37) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (38) indexacion -> . ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (39) estructurasControl -> . while
    (40) estructurasControl -> . if
    (41) estructurasControl -> . else
    (42) estructurasControl -> . for_statement
    (63) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (64) asignacion -> . VARIABLE IGUAL ARRAY PUNTOYCOMA
    (65) asignacion -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (94) estructurasDatos -> . array
    (95) estructurasDatos -> . lista
    (96) estructurasDatos -> . diccionario
    (114) funciones -> . funcion
    (115) funciones -> . funcioninbuilt
    (116) funciones -> . funcion_anonima
    (117) funciones -> . arrow_function
    (66) operacion -> . valor operadorAritmetico valor PUNTOYCOMA
    (67) operacion -> . operacion operadorAritmetico operacion
    (86) increment -> . VARIABLE INCREMENT
    (87) increment -> . VARIABLE DECREMENT
    (88) increment -> . VARIABLE DECREMENT PUNTOYCOMA
    (89) increment -> . VARIABLE PLUS_ASSIGN valor
    (90) increment -> . VARIABLE MINUS_ASSIGN valor
    (91) increment -> . empty
    (92) increment -> . VARIABLE INCREMENT PUNTOYCOMA
    (75) while -> . WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE
    (43) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (44) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (74) else -> . ELSE LLLAVE instrucciones RLLAVE
    (83) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (97) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (98) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (99) array -> . VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA
    (100) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (101) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (108) lista -> . LBRACKET RBRACKET
    (109) lista -> . LBRACKET elementos RBRACKET
    (110) diccionario -> . LBRACE pares RBRACE
    (118) funcion -> . FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE
    (119) funcion -> . FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE
    (120) funcioninbuilt -> . VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA
    (121) funcioninbuilt -> . VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA
    (134) funcion_anonima -> . VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (139) arrow_function -> . VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (93) empty -> .
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINT_R resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    RLLAVE          shift and go to state 280
    PRINT           shift and go to state 17
    PRINT_R         shift and go to state 19
    ECHO            shift and go to state 20
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    FOR             shift and go to state 38
    LBRACKET        shift and go to state 23
    LBRACE          shift and go to state 39
    FUNCTION        shift and go to state 40
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    ID              shift and go to state 41

  ! RLLAVE          [ reduce using rule 93 (empty -> .) ]
  ! PRINT           [ reduce using rule 93 (empty -> .) ]
  ! PRINT_R         [ reduce using rule 93 (empty -> .) ]
  ! ECHO            [ reduce using rule 93 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 93 (empty -> .) ]
  ! WHILE           [ reduce using rule 93 (empty -> .) ]
  ! IF              [ reduce using rule 93 (empty -> .) ]
  ! ELSE            [ reduce using rule 93 (empty -> .) ]
  ! FOR             [ reduce using rule 93 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 93 (empty -> .) ]
  ! LBRACE          [ reduce using rule 93 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 93 (empty -> .) ]
  ! NUMBER          [ reduce using rule 93 (empty -> .) ]
  ! FLOAT           [ reduce using rule 93 (empty -> .) ]
  ! STRING          [ reduce using rule 93 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 93 (empty -> .) ]
  ! ID              [ reduce using rule 93 (empty -> .) ]

    instruccion                    shift and go to state 47
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    operacion                      shift and go to state 15
    increment                      shift and go to state 16
    valor                          shift and go to state 18
    while                          shift and go to state 24
    if                             shift and go to state 25
    else                           shift and go to state 26
    for_statement                  shift and go to state 27
    array                          shift and go to state 28
    lista                          shift and go to state 29
    diccionario                    shift and go to state 30
    funcion                        shift and go to state 31
    funcioninbuilt                 shift and go to state 32
    funcion_anonima                shift and go to state 33
    arrow_function                 shift and go to state 34
    empty                          shift and go to state 48
    expression                     shift and go to state 42

state 262

    (43) if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones . RLLAVE
    (5) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) instruccion -> . operacion
    (15) instruccion -> . increment
    (16) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (19) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (20) imprimir -> . ECHO valor PUNTOYCOMA
    (21) imprimir -> . ECHO concatenar PUNTOYCOMA
    (22) imprimir -> . ECHO valor COMA VARIABLE valor PUNTOYCOMA
    (34) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA
    (36) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (37) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (38) indexacion -> . ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (39) estructurasControl -> . while
    (40) estructurasControl -> . if
    (41) estructurasControl -> . else
    (42) estructurasControl -> . for_statement
    (63) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (64) asignacion -> . VARIABLE IGUAL ARRAY PUNTOYCOMA
    (65) asignacion -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (94) estructurasDatos -> . array
    (95) estructurasDatos -> . lista
    (96) estructurasDatos -> . diccionario
    (114) funciones -> . funcion
    (115) funciones -> . funcioninbuilt
    (116) funciones -> . funcion_anonima
    (117) funciones -> . arrow_function
    (66) operacion -> . valor operadorAritmetico valor PUNTOYCOMA
    (67) operacion -> . operacion operadorAritmetico operacion
    (86) increment -> . VARIABLE INCREMENT
    (87) increment -> . VARIABLE DECREMENT
    (88) increment -> . VARIABLE DECREMENT PUNTOYCOMA
    (89) increment -> . VARIABLE PLUS_ASSIGN valor
    (90) increment -> . VARIABLE MINUS_ASSIGN valor
    (91) increment -> . empty
    (92) increment -> . VARIABLE INCREMENT PUNTOYCOMA
    (75) while -> . WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE
    (43) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (44) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (74) else -> . ELSE LLLAVE instrucciones RLLAVE
    (83) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (97) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (98) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (99) array -> . VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA
    (100) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (101) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (108) lista -> . LBRACKET RBRACKET
    (109) lista -> . LBRACKET elementos RBRACKET
    (110) diccionario -> . LBRACE pares RBRACE
    (118) funcion -> . FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE
    (119) funcion -> . FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE
    (120) funcioninbuilt -> . VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA
    (121) funcioninbuilt -> . VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA
    (134) funcion_anonima -> . VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (139) arrow_function -> . VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (93) empty -> .
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINT_R resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    RLLAVE          shift and go to state 281
    PRINT           shift and go to state 17
    PRINT_R         shift and go to state 19
    ECHO            shift and go to state 20
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    FOR             shift and go to state 38
    LBRACKET        shift and go to state 23
    LBRACE          shift and go to state 39
    FUNCTION        shift and go to state 40
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    ID              shift and go to state 41

  ! RLLAVE          [ reduce using rule 93 (empty -> .) ]
  ! PRINT           [ reduce using rule 93 (empty -> .) ]
  ! PRINT_R         [ reduce using rule 93 (empty -> .) ]
  ! ECHO            [ reduce using rule 93 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 93 (empty -> .) ]
  ! WHILE           [ reduce using rule 93 (empty -> .) ]
  ! IF              [ reduce using rule 93 (empty -> .) ]
  ! ELSE            [ reduce using rule 93 (empty -> .) ]
  ! FOR             [ reduce using rule 93 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 93 (empty -> .) ]
  ! LBRACE          [ reduce using rule 93 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 93 (empty -> .) ]
  ! NUMBER          [ reduce using rule 93 (empty -> .) ]
  ! FLOAT           [ reduce using rule 93 (empty -> .) ]
  ! STRING          [ reduce using rule 93 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 93 (empty -> .) ]
  ! ID              [ reduce using rule 93 (empty -> .) ]

    instruccion                    shift and go to state 47
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    operacion                      shift and go to state 15
    increment                      shift and go to state 16
    valor                          shift and go to state 18
    while                          shift and go to state 24
    if                             shift and go to state 25
    else                           shift and go to state 26
    for_statement                  shift and go to state 27
    array                          shift and go to state 28
    lista                          shift and go to state 29
    diccionario                    shift and go to state 30
    funcion                        shift and go to state 31
    funcioninbuilt                 shift and go to state 32
    funcion_anonima                shift and go to state 33
    arrow_function                 shift and go to state 34
    empty                          shift and go to state 48
    expression                     shift and go to state 42

state 263

    (44) if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones . RLLAVE
    (5) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) instruccion -> . operacion
    (15) instruccion -> . increment
    (16) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (19) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (20) imprimir -> . ECHO valor PUNTOYCOMA
    (21) imprimir -> . ECHO concatenar PUNTOYCOMA
    (22) imprimir -> . ECHO valor COMA VARIABLE valor PUNTOYCOMA
    (34) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA
    (36) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (37) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (38) indexacion -> . ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (39) estructurasControl -> . while
    (40) estructurasControl -> . if
    (41) estructurasControl -> . else
    (42) estructurasControl -> . for_statement
    (63) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (64) asignacion -> . VARIABLE IGUAL ARRAY PUNTOYCOMA
    (65) asignacion -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (94) estructurasDatos -> . array
    (95) estructurasDatos -> . lista
    (96) estructurasDatos -> . diccionario
    (114) funciones -> . funcion
    (115) funciones -> . funcioninbuilt
    (116) funciones -> . funcion_anonima
    (117) funciones -> . arrow_function
    (66) operacion -> . valor operadorAritmetico valor PUNTOYCOMA
    (67) operacion -> . operacion operadorAritmetico operacion
    (86) increment -> . VARIABLE INCREMENT
    (87) increment -> . VARIABLE DECREMENT
    (88) increment -> . VARIABLE DECREMENT PUNTOYCOMA
    (89) increment -> . VARIABLE PLUS_ASSIGN valor
    (90) increment -> . VARIABLE MINUS_ASSIGN valor
    (91) increment -> . empty
    (92) increment -> . VARIABLE INCREMENT PUNTOYCOMA
    (75) while -> . WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE
    (43) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (44) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (74) else -> . ELSE LLLAVE instrucciones RLLAVE
    (83) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (97) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (98) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (99) array -> . VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA
    (100) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (101) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (108) lista -> . LBRACKET RBRACKET
    (109) lista -> . LBRACKET elementos RBRACKET
    (110) diccionario -> . LBRACE pares RBRACE
    (118) funcion -> . FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE
    (119) funcion -> . FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE
    (120) funcioninbuilt -> . VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA
    (121) funcioninbuilt -> . VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA
    (134) funcion_anonima -> . VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (139) arrow_function -> . VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (93) empty -> .
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINT_R resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    RLLAVE          shift and go to state 282
    PRINT           shift and go to state 17
    PRINT_R         shift and go to state 19
    ECHO            shift and go to state 20
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    FOR             shift and go to state 38
    LBRACKET        shift and go to state 23
    LBRACE          shift and go to state 39
    FUNCTION        shift and go to state 40
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    ID              shift and go to state 41

  ! RLLAVE          [ reduce using rule 93 (empty -> .) ]
  ! PRINT           [ reduce using rule 93 (empty -> .) ]
  ! PRINT_R         [ reduce using rule 93 (empty -> .) ]
  ! ECHO            [ reduce using rule 93 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 93 (empty -> .) ]
  ! WHILE           [ reduce using rule 93 (empty -> .) ]
  ! IF              [ reduce using rule 93 (empty -> .) ]
  ! ELSE            [ reduce using rule 93 (empty -> .) ]
  ! FOR             [ reduce using rule 93 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 93 (empty -> .) ]
  ! LBRACE          [ reduce using rule 93 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 93 (empty -> .) ]
  ! NUMBER          [ reduce using rule 93 (empty -> .) ]
  ! FLOAT           [ reduce using rule 93 (empty -> .) ]
  ! STRING          [ reduce using rule 93 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 93 (empty -> .) ]
  ! ID              [ reduce using rule 93 (empty -> .) ]

    instruccion                    shift and go to state 47
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    operacion                      shift and go to state 15
    increment                      shift and go to state 16
    valor                          shift and go to state 18
    while                          shift and go to state 24
    if                             shift and go to state 25
    else                           shift and go to state 26
    for_statement                  shift and go to state 27
    array                          shift and go to state 28
    lista                          shift and go to state 29
    diccionario                    shift and go to state 30
    funcion                        shift and go to state 31
    funcioninbuilt                 shift and go to state 32
    funcion_anonima                shift and go to state 33
    arrow_function                 shift and go to state 34
    empty                          shift and go to state 48
    expression                     shift and go to state 42

state 264

    (83) for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA . increment RPAREN LLLAVE instrucciones RLLAVE
    (86) increment -> . VARIABLE INCREMENT
    (87) increment -> . VARIABLE DECREMENT
    (88) increment -> . VARIABLE DECREMENT PUNTOYCOMA
    (89) increment -> . VARIABLE PLUS_ASSIGN valor
    (90) increment -> . VARIABLE MINUS_ASSIGN valor
    (91) increment -> . empty
    (92) increment -> . VARIABLE INCREMENT PUNTOYCOMA
    (93) empty -> .

    VARIABLE        shift and go to state 284
    RPAREN          reduce using rule 93 (empty -> .)

    increment                      shift and go to state 283
    empty                          shift and go to state 48

state 265

    (118) funcion -> FUNCTION ID LPAREN RPAREN LLLAVE instrucciones . RLLAVE
    (5) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) instruccion -> . operacion
    (15) instruccion -> . increment
    (16) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (19) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (20) imprimir -> . ECHO valor PUNTOYCOMA
    (21) imprimir -> . ECHO concatenar PUNTOYCOMA
    (22) imprimir -> . ECHO valor COMA VARIABLE valor PUNTOYCOMA
    (34) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA
    (36) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (37) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (38) indexacion -> . ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (39) estructurasControl -> . while
    (40) estructurasControl -> . if
    (41) estructurasControl -> . else
    (42) estructurasControl -> . for_statement
    (63) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (64) asignacion -> . VARIABLE IGUAL ARRAY PUNTOYCOMA
    (65) asignacion -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (94) estructurasDatos -> . array
    (95) estructurasDatos -> . lista
    (96) estructurasDatos -> . diccionario
    (114) funciones -> . funcion
    (115) funciones -> . funcioninbuilt
    (116) funciones -> . funcion_anonima
    (117) funciones -> . arrow_function
    (66) operacion -> . valor operadorAritmetico valor PUNTOYCOMA
    (67) operacion -> . operacion operadorAritmetico operacion
    (86) increment -> . VARIABLE INCREMENT
    (87) increment -> . VARIABLE DECREMENT
    (88) increment -> . VARIABLE DECREMENT PUNTOYCOMA
    (89) increment -> . VARIABLE PLUS_ASSIGN valor
    (90) increment -> . VARIABLE MINUS_ASSIGN valor
    (91) increment -> . empty
    (92) increment -> . VARIABLE INCREMENT PUNTOYCOMA
    (75) while -> . WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE
    (43) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (44) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (74) else -> . ELSE LLLAVE instrucciones RLLAVE
    (83) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (97) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (98) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (99) array -> . VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA
    (100) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (101) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (108) lista -> . LBRACKET RBRACKET
    (109) lista -> . LBRACKET elementos RBRACKET
    (110) diccionario -> . LBRACE pares RBRACE
    (118) funcion -> . FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE
    (119) funcion -> . FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE
    (120) funcioninbuilt -> . VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA
    (121) funcioninbuilt -> . VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA
    (134) funcion_anonima -> . VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (139) arrow_function -> . VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (93) empty -> .
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINT_R resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    RLLAVE          shift and go to state 285
    PRINT           shift and go to state 17
    PRINT_R         shift and go to state 19
    ECHO            shift and go to state 20
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    FOR             shift and go to state 38
    LBRACKET        shift and go to state 23
    LBRACE          shift and go to state 39
    FUNCTION        shift and go to state 40
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    ID              shift and go to state 41

  ! RLLAVE          [ reduce using rule 93 (empty -> .) ]
  ! PRINT           [ reduce using rule 93 (empty -> .) ]
  ! PRINT_R         [ reduce using rule 93 (empty -> .) ]
  ! ECHO            [ reduce using rule 93 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 93 (empty -> .) ]
  ! WHILE           [ reduce using rule 93 (empty -> .) ]
  ! IF              [ reduce using rule 93 (empty -> .) ]
  ! ELSE            [ reduce using rule 93 (empty -> .) ]
  ! FOR             [ reduce using rule 93 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 93 (empty -> .) ]
  ! LBRACE          [ reduce using rule 93 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 93 (empty -> .) ]
  ! NUMBER          [ reduce using rule 93 (empty -> .) ]
  ! FLOAT           [ reduce using rule 93 (empty -> .) ]
  ! STRING          [ reduce using rule 93 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 93 (empty -> .) ]
  ! ID              [ reduce using rule 93 (empty -> .) ]

    instruccion                    shift and go to state 47
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    operacion                      shift and go to state 15
    increment                      shift and go to state 16
    valor                          shift and go to state 18
    while                          shift and go to state 24
    if                             shift and go to state 25
    else                           shift and go to state 26
    for_statement                  shift and go to state 27
    array                          shift and go to state 28
    lista                          shift and go to state 29
    diccionario                    shift and go to state 30
    funcion                        shift and go to state 31
    funcioninbuilt                 shift and go to state 32
    funcion_anonima                shift and go to state 33
    arrow_function                 shift and go to state 34
    empty                          shift and go to state 48
    expression                     shift and go to state 42

state 266

    (119) funcion -> FUNCTION ID LPAREN parametros RPAREN LLLAVE . instrucciones RLLAVE
    (4) instrucciones -> . instruccion
    (5) instrucciones -> . instrucciones instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) instruccion -> . operacion
    (15) instruccion -> . increment
    (16) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (19) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (20) imprimir -> . ECHO valor PUNTOYCOMA
    (21) imprimir -> . ECHO concatenar PUNTOYCOMA
    (22) imprimir -> . ECHO valor COMA VARIABLE valor PUNTOYCOMA
    (34) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA
    (36) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (37) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (38) indexacion -> . ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (39) estructurasControl -> . while
    (40) estructurasControl -> . if
    (41) estructurasControl -> . else
    (42) estructurasControl -> . for_statement
    (63) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (64) asignacion -> . VARIABLE IGUAL ARRAY PUNTOYCOMA
    (65) asignacion -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (94) estructurasDatos -> . array
    (95) estructurasDatos -> . lista
    (96) estructurasDatos -> . diccionario
    (114) funciones -> . funcion
    (115) funciones -> . funcioninbuilt
    (116) funciones -> . funcion_anonima
    (117) funciones -> . arrow_function
    (66) operacion -> . valor operadorAritmetico valor PUNTOYCOMA
    (67) operacion -> . operacion operadorAritmetico operacion
    (86) increment -> . VARIABLE INCREMENT
    (87) increment -> . VARIABLE DECREMENT
    (88) increment -> . VARIABLE DECREMENT PUNTOYCOMA
    (89) increment -> . VARIABLE PLUS_ASSIGN valor
    (90) increment -> . VARIABLE MINUS_ASSIGN valor
    (91) increment -> . empty
    (92) increment -> . VARIABLE INCREMENT PUNTOYCOMA
    (75) while -> . WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE
    (43) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (44) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (74) else -> . ELSE LLLAVE instrucciones RLLAVE
    (83) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (97) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (98) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (99) array -> . VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA
    (100) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (101) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (108) lista -> . LBRACKET RBRACKET
    (109) lista -> . LBRACKET elementos RBRACKET
    (110) diccionario -> . LBRACE pares RBRACE
    (118) funcion -> . FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE
    (119) funcion -> . FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE
    (120) funcioninbuilt -> . VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA
    (121) funcioninbuilt -> . VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA
    (134) funcion_anonima -> . VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (139) arrow_function -> . VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (93) empty -> .
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINT_R resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    PRINT           shift and go to state 17
    PRINT_R         shift and go to state 19
    ECHO            shift and go to state 20
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    FOR             shift and go to state 38
    LBRACKET        shift and go to state 23
    LBRACE          shift and go to state 39
    FUNCTION        shift and go to state 40
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    ID              shift and go to state 41
    RLLAVE          reduce using rule 93 (empty -> .)

  ! PRINT           [ reduce using rule 93 (empty -> .) ]
  ! PRINT_R         [ reduce using rule 93 (empty -> .) ]
  ! ECHO            [ reduce using rule 93 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 93 (empty -> .) ]
  ! WHILE           [ reduce using rule 93 (empty -> .) ]
  ! IF              [ reduce using rule 93 (empty -> .) ]
  ! ELSE            [ reduce using rule 93 (empty -> .) ]
  ! FOR             [ reduce using rule 93 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 93 (empty -> .) ]
  ! LBRACE          [ reduce using rule 93 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 93 (empty -> .) ]
  ! NUMBER          [ reduce using rule 93 (empty -> .) ]
  ! FLOAT           [ reduce using rule 93 (empty -> .) ]
  ! STRING          [ reduce using rule 93 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 93 (empty -> .) ]
  ! ID              [ reduce using rule 93 (empty -> .) ]

    instrucciones                  shift and go to state 286
    instruccion                    shift and go to state 6
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    operacion                      shift and go to state 15
    increment                      shift and go to state 16
    valor                          shift and go to state 18
    while                          shift and go to state 24
    if                             shift and go to state 25
    else                           shift and go to state 26
    for_statement                  shift and go to state 27
    array                          shift and go to state 28
    lista                          shift and go to state 29
    diccionario                    shift and go to state 30
    funcion                        shift and go to state 31
    funcioninbuilt                 shift and go to state 32
    funcion_anonima                shift and go to state 33
    arrow_function                 shift and go to state 34
    empty                          shift and go to state 48
    expression                     shift and go to state 42

state 267

    (136) parametros -> parametros COMA STRING .

    RPAREN          reduce using rule 136 (parametros -> parametros COMA STRING .)
    COMA            reduce using rule 136 (parametros -> parametros COMA STRING .)


state 268

    (138) parametros -> parametros COMA VARIABLE .

    RPAREN          reduce using rule 138 (parametros -> parametros COMA VARIABLE .)
    COMA            reduce using rule 138 (parametros -> parametros COMA VARIABLE .)


state 269

    (34) solicitud_datos -> VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA .

    PRINT           reduce using rule 34 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    PRINT_R         reduce using rule 34 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    ECHO            reduce using rule 34 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    VARIABLE        reduce using rule 34 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    WHILE           reduce using rule 34 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    IF              reduce using rule 34 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    ELSE            reduce using rule 34 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    FOR             reduce using rule 34 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    LBRACKET        reduce using rule 34 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    LBRACE          reduce using rule 34 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    FUNCTION        reduce using rule 34 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    NUMBER          reduce using rule 34 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    FLOAT           reduce using rule 34 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    STRING          reduce using rule 34 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    BOOLEAN         reduce using rule 34 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    ID              reduce using rule 34 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    PHP_END         reduce using rule 34 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA .)
    RLLAVE          reduce using rule 34 (solicitud_datos -> VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA .)


state 270

    (36) input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .

    PRINT           reduce using rule 36 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    PRINT_R         reduce using rule 36 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    ECHO            reduce using rule 36 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    VARIABLE        reduce using rule 36 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    WHILE           reduce using rule 36 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    IF              reduce using rule 36 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    ELSE            reduce using rule 36 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    FOR             reduce using rule 36 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    LBRACKET        reduce using rule 36 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    LBRACE          reduce using rule 36 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    FUNCTION        reduce using rule 36 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    NUMBER          reduce using rule 36 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    FLOAT           reduce using rule 36 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    STRING          reduce using rule 36 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    BOOLEAN         reduce using rule 36 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    ID              reduce using rule 36 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    PHP_END         reduce using rule 36 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)
    RLLAVE          reduce using rule 36 (input -> VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA .)


state 271

    (65) asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .
    (98) array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .

  ! reduce/reduce conflict for PRINT resolved using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
  ! reduce/reduce conflict for PRINT_R resolved using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
  ! reduce/reduce conflict for ECHO resolved using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
  ! reduce/reduce conflict for LBRACE resolved using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
  ! reduce/reduce conflict for NUMBER resolved using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
  ! reduce/reduce conflict for FLOAT resolved using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
  ! reduce/reduce conflict for STRING resolved using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
  ! reduce/reduce conflict for ID resolved using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
  ! reduce/reduce conflict for PHP_END resolved using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    PRINT           reduce using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    PRINT_R         reduce using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    ECHO            reduce using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    VARIABLE        reduce using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    WHILE           reduce using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    IF              reduce using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    ELSE            reduce using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    FOR             reduce using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    LBRACKET        reduce using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    LBRACE          reduce using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    FUNCTION        reduce using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    NUMBER          reduce using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    FLOAT           reduce using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    STRING          reduce using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    BOOLEAN         reduce using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    ID              reduce using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    PHP_END         reduce using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)
    RLLAVE          reduce using rule 65 (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .)

  ! PRINT           [ reduce using rule 98 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .) ]
  ! PRINT_R         [ reduce using rule 98 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .) ]
  ! ECHO            [ reduce using rule 98 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .) ]
  ! VARIABLE        [ reduce using rule 98 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 98 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 98 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 98 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 98 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .) ]
  ! LBRACKET        [ reduce using rule 98 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .) ]
  ! LBRACE          [ reduce using rule 98 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .) ]
  ! FUNCTION        [ reduce using rule 98 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .) ]
  ! NUMBER          [ reduce using rule 98 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .) ]
  ! FLOAT           [ reduce using rule 98 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 98 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .) ]
  ! BOOLEAN         [ reduce using rule 98 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .) ]
  ! ID              [ reduce using rule 98 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .) ]
  ! PHP_END         [ reduce using rule 98 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .) ]
  ! RLLAVE          [ reduce using rule 98 (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA .) ]


state 272

    (99) array -> VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA .

    PRINT           reduce using rule 99 (array -> VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA .)
    PRINT_R         reduce using rule 99 (array -> VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA .)
    ECHO            reduce using rule 99 (array -> VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA .)
    VARIABLE        reduce using rule 99 (array -> VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA .)
    WHILE           reduce using rule 99 (array -> VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA .)
    IF              reduce using rule 99 (array -> VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA .)
    ELSE            reduce using rule 99 (array -> VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA .)
    FOR             reduce using rule 99 (array -> VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA .)
    LBRACKET        reduce using rule 99 (array -> VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA .)
    LBRACE          reduce using rule 99 (array -> VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA .)
    FUNCTION        reduce using rule 99 (array -> VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA .)
    NUMBER          reduce using rule 99 (array -> VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA .)
    FLOAT           reduce using rule 99 (array -> VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA .)
    STRING          reduce using rule 99 (array -> VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA .)
    BOOLEAN         reduce using rule 99 (array -> VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA .)
    ID              reduce using rule 99 (array -> VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA .)
    PHP_END         reduce using rule 99 (array -> VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA .)
    RLLAVE          reduce using rule 99 (array -> VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA .)


state 273

    (132) operaciones -> VARIABLE IGUAL operaciones .

    RPAREN          reduce using rule 132 (operaciones -> VARIABLE IGUAL operaciones .)


state 274

    (120) funcioninbuilt -> VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA .

    PRINT           reduce using rule 120 (funcioninbuilt -> VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA .)
    PRINT_R         reduce using rule 120 (funcioninbuilt -> VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA .)
    ECHO            reduce using rule 120 (funcioninbuilt -> VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA .)
    VARIABLE        reduce using rule 120 (funcioninbuilt -> VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA .)
    WHILE           reduce using rule 120 (funcioninbuilt -> VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA .)
    IF              reduce using rule 120 (funcioninbuilt -> VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA .)
    ELSE            reduce using rule 120 (funcioninbuilt -> VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA .)
    FOR             reduce using rule 120 (funcioninbuilt -> VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA .)
    LBRACKET        reduce using rule 120 (funcioninbuilt -> VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA .)
    LBRACE          reduce using rule 120 (funcioninbuilt -> VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA .)
    FUNCTION        reduce using rule 120 (funcioninbuilt -> VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA .)
    NUMBER          reduce using rule 120 (funcioninbuilt -> VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA .)
    FLOAT           reduce using rule 120 (funcioninbuilt -> VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA .)
    STRING          reduce using rule 120 (funcioninbuilt -> VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA .)
    BOOLEAN         reduce using rule 120 (funcioninbuilt -> VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA .)
    ID              reduce using rule 120 (funcioninbuilt -> VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA .)
    PHP_END         reduce using rule 120 (funcioninbuilt -> VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA .)
    RLLAVE          reduce using rule 120 (funcioninbuilt -> VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA .)


state 275

    (67) operacion -> operacion operadorAritmetico operacion .
    (129) operaciones -> operacion .
    (130) operaciones -> operacion . PUNTOYCOMA
    (131) operaciones -> operacion . operadorAritmetico operaciones
    (67) operacion -> operacion . operadorAritmetico operacion
    (68) operadorAritmetico -> . PLUS
    (69) operadorAritmetico -> . MINUS
    (70) operadorAritmetico -> . TIMES
    (71) operadorAritmetico -> . DIVIDE
    (72) operadorAritmetico -> . MOD
    (73) operadorAritmetico -> . POT

  ! reduce/reduce conflict for RPAREN resolved using rule 67 (operacion -> operacion operadorAritmetico operacion .)
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for POT resolved as shift
    RPAREN          reduce using rule 67 (operacion -> operacion operadorAritmetico operacion .)
    PUNTOYCOMA      shift and go to state 256
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MOD             shift and go to state 54
    POT             shift and go to state 55

  ! PUNTOYCOMA      [ reduce using rule 67 (operacion -> operacion operadorAritmetico operacion .) ]
  ! PLUS            [ reduce using rule 67 (operacion -> operacion operadorAritmetico operacion .) ]
  ! MINUS           [ reduce using rule 67 (operacion -> operacion operadorAritmetico operacion .) ]
  ! TIMES           [ reduce using rule 67 (operacion -> operacion operadorAritmetico operacion .) ]
  ! DIVIDE          [ reduce using rule 67 (operacion -> operacion operadorAritmetico operacion .) ]
  ! MOD             [ reduce using rule 67 (operacion -> operacion operadorAritmetico operacion .) ]
  ! POT             [ reduce using rule 67 (operacion -> operacion operadorAritmetico operacion .) ]
  ! RPAREN          [ reduce using rule 129 (operaciones -> operacion .) ]

    operadorAritmetico             shift and go to state 257

state 276

    (131) operaciones -> operacion operadorAritmetico operaciones .

    RPAREN          reduce using rule 131 (operaciones -> operacion operadorAritmetico operaciones .)


state 277

    (134) funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE . instrucciones RLLAVE PUNTOYCOMA
    (4) instrucciones -> . instruccion
    (5) instrucciones -> . instrucciones instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) instruccion -> . operacion
    (15) instruccion -> . increment
    (16) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (19) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (20) imprimir -> . ECHO valor PUNTOYCOMA
    (21) imprimir -> . ECHO concatenar PUNTOYCOMA
    (22) imprimir -> . ECHO valor COMA VARIABLE valor PUNTOYCOMA
    (34) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA
    (36) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (37) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (38) indexacion -> . ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (39) estructurasControl -> . while
    (40) estructurasControl -> . if
    (41) estructurasControl -> . else
    (42) estructurasControl -> . for_statement
    (63) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (64) asignacion -> . VARIABLE IGUAL ARRAY PUNTOYCOMA
    (65) asignacion -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (94) estructurasDatos -> . array
    (95) estructurasDatos -> . lista
    (96) estructurasDatos -> . diccionario
    (114) funciones -> . funcion
    (115) funciones -> . funcioninbuilt
    (116) funciones -> . funcion_anonima
    (117) funciones -> . arrow_function
    (66) operacion -> . valor operadorAritmetico valor PUNTOYCOMA
    (67) operacion -> . operacion operadorAritmetico operacion
    (86) increment -> . VARIABLE INCREMENT
    (87) increment -> . VARIABLE DECREMENT
    (88) increment -> . VARIABLE DECREMENT PUNTOYCOMA
    (89) increment -> . VARIABLE PLUS_ASSIGN valor
    (90) increment -> . VARIABLE MINUS_ASSIGN valor
    (91) increment -> . empty
    (92) increment -> . VARIABLE INCREMENT PUNTOYCOMA
    (75) while -> . WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE
    (43) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (44) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (74) else -> . ELSE LLLAVE instrucciones RLLAVE
    (83) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (97) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (98) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (99) array -> . VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA
    (100) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (101) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (108) lista -> . LBRACKET RBRACKET
    (109) lista -> . LBRACKET elementos RBRACKET
    (110) diccionario -> . LBRACE pares RBRACE
    (118) funcion -> . FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE
    (119) funcion -> . FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE
    (120) funcioninbuilt -> . VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA
    (121) funcioninbuilt -> . VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA
    (134) funcion_anonima -> . VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (139) arrow_function -> . VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (93) empty -> .
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINT_R resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    PRINT           shift and go to state 17
    PRINT_R         shift and go to state 19
    ECHO            shift and go to state 20
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    FOR             shift and go to state 38
    LBRACKET        shift and go to state 23
    LBRACE          shift and go to state 39
    FUNCTION        shift and go to state 40
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    ID              shift and go to state 41
    RLLAVE          reduce using rule 93 (empty -> .)

  ! PRINT           [ reduce using rule 93 (empty -> .) ]
  ! PRINT_R         [ reduce using rule 93 (empty -> .) ]
  ! ECHO            [ reduce using rule 93 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 93 (empty -> .) ]
  ! WHILE           [ reduce using rule 93 (empty -> .) ]
  ! IF              [ reduce using rule 93 (empty -> .) ]
  ! ELSE            [ reduce using rule 93 (empty -> .) ]
  ! FOR             [ reduce using rule 93 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 93 (empty -> .) ]
  ! LBRACE          [ reduce using rule 93 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 93 (empty -> .) ]
  ! NUMBER          [ reduce using rule 93 (empty -> .) ]
  ! FLOAT           [ reduce using rule 93 (empty -> .) ]
  ! STRING          [ reduce using rule 93 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 93 (empty -> .) ]
  ! ID              [ reduce using rule 93 (empty -> .) ]

    instrucciones                  shift and go to state 287
    instruccion                    shift and go to state 6
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    operacion                      shift and go to state 15
    increment                      shift and go to state 16
    valor                          shift and go to state 18
    while                          shift and go to state 24
    if                             shift and go to state 25
    else                           shift and go to state 26
    for_statement                  shift and go to state 27
    array                          shift and go to state 28
    lista                          shift and go to state 29
    diccionario                    shift and go to state 30
    funcion                        shift and go to state 31
    funcioninbuilt                 shift and go to state 32
    funcion_anonima                shift and go to state 33
    arrow_function                 shift and go to state 34
    empty                          shift and go to state 48
    expression                     shift and go to state 42

state 278

    (141) parameter_list -> VARIABLE COMA parameter_list .

    RPAREN          reduce using rule 141 (parameter_list -> VARIABLE COMA parameter_list .)


state 279

    (139) arrow_function -> VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW . expression PUNTOYCOMA
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

    VARIABLE        shift and go to state 288
    NUMBER          shift and go to state 290

    expression                     shift and go to state 289

state 280

    (75) while -> WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE .

    PRINT           reduce using rule 75 (while -> WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE .)
    PRINT_R         reduce using rule 75 (while -> WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE .)
    ECHO            reduce using rule 75 (while -> WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE .)
    VARIABLE        reduce using rule 75 (while -> WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE .)
    WHILE           reduce using rule 75 (while -> WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE .)
    IF              reduce using rule 75 (while -> WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE .)
    ELSE            reduce using rule 75 (while -> WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE .)
    FOR             reduce using rule 75 (while -> WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE .)
    LBRACKET        reduce using rule 75 (while -> WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE .)
    LBRACE          reduce using rule 75 (while -> WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE .)
    FUNCTION        reduce using rule 75 (while -> WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE .)
    NUMBER          reduce using rule 75 (while -> WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE .)
    FLOAT           reduce using rule 75 (while -> WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE .)
    STRING          reduce using rule 75 (while -> WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE .)
    BOOLEAN         reduce using rule 75 (while -> WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE .)
    ID              reduce using rule 75 (while -> WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE .)
    PHP_END         reduce using rule 75 (while -> WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE .)
    RLLAVE          reduce using rule 75 (while -> WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE .)


state 281

    (43) if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .

    PRINT           reduce using rule 43 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    PRINT_R         reduce using rule 43 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    ECHO            reduce using rule 43 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    VARIABLE        reduce using rule 43 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    WHILE           reduce using rule 43 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    IF              reduce using rule 43 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    ELSE            reduce using rule 43 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    FOR             reduce using rule 43 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    LBRACKET        reduce using rule 43 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    LBRACE          reduce using rule 43 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    FUNCTION        reduce using rule 43 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    NUMBER          reduce using rule 43 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    FLOAT           reduce using rule 43 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    STRING          reduce using rule 43 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    BOOLEAN         reduce using rule 43 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    ID              reduce using rule 43 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    PHP_END         reduce using rule 43 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)
    RLLAVE          reduce using rule 43 (if -> IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE .)


state 282

    (44) if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .

    PRINT           reduce using rule 44 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    PRINT_R         reduce using rule 44 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    ECHO            reduce using rule 44 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    VARIABLE        reduce using rule 44 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    WHILE           reduce using rule 44 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    IF              reduce using rule 44 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    ELSE            reduce using rule 44 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    FOR             reduce using rule 44 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    LBRACKET        reduce using rule 44 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    LBRACE          reduce using rule 44 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    FUNCTION        reduce using rule 44 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    NUMBER          reduce using rule 44 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    FLOAT           reduce using rule 44 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    STRING          reduce using rule 44 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    BOOLEAN         reduce using rule 44 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    ID              reduce using rule 44 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    PHP_END         reduce using rule 44 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)
    RLLAVE          reduce using rule 44 (if -> IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE .)


state 283

    (83) for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment . RPAREN LLLAVE instrucciones RLLAVE

    RPAREN          shift and go to state 291


state 284

    (86) increment -> VARIABLE . INCREMENT
    (87) increment -> VARIABLE . DECREMENT
    (88) increment -> VARIABLE . DECREMENT PUNTOYCOMA
    (89) increment -> VARIABLE . PLUS_ASSIGN valor
    (90) increment -> VARIABLE . MINUS_ASSIGN valor
    (92) increment -> VARIABLE . INCREMENT PUNTOYCOMA

    INCREMENT       shift and go to state 64
    DECREMENT       shift and go to state 65
    PLUS_ASSIGN     shift and go to state 66
    MINUS_ASSIGN    shift and go to state 67


state 285

    (118) funcion -> FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE .

    PRINT           reduce using rule 118 (funcion -> FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE .)
    PRINT_R         reduce using rule 118 (funcion -> FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE .)
    ECHO            reduce using rule 118 (funcion -> FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE .)
    VARIABLE        reduce using rule 118 (funcion -> FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE .)
    WHILE           reduce using rule 118 (funcion -> FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE .)
    IF              reduce using rule 118 (funcion -> FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE .)
    ELSE            reduce using rule 118 (funcion -> FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE .)
    FOR             reduce using rule 118 (funcion -> FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE .)
    LBRACKET        reduce using rule 118 (funcion -> FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE .)
    LBRACE          reduce using rule 118 (funcion -> FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE .)
    FUNCTION        reduce using rule 118 (funcion -> FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE .)
    NUMBER          reduce using rule 118 (funcion -> FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE .)
    FLOAT           reduce using rule 118 (funcion -> FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE .)
    STRING          reduce using rule 118 (funcion -> FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE .)
    BOOLEAN         reduce using rule 118 (funcion -> FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE .)
    ID              reduce using rule 118 (funcion -> FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE .)
    PHP_END         reduce using rule 118 (funcion -> FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE .)
    RLLAVE          reduce using rule 118 (funcion -> FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE .)


state 286

    (119) funcion -> FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones . RLLAVE
    (5) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) instruccion -> . operacion
    (15) instruccion -> . increment
    (16) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (19) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (20) imprimir -> . ECHO valor PUNTOYCOMA
    (21) imprimir -> . ECHO concatenar PUNTOYCOMA
    (22) imprimir -> . ECHO valor COMA VARIABLE valor PUNTOYCOMA
    (34) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA
    (36) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (37) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (38) indexacion -> . ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (39) estructurasControl -> . while
    (40) estructurasControl -> . if
    (41) estructurasControl -> . else
    (42) estructurasControl -> . for_statement
    (63) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (64) asignacion -> . VARIABLE IGUAL ARRAY PUNTOYCOMA
    (65) asignacion -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (94) estructurasDatos -> . array
    (95) estructurasDatos -> . lista
    (96) estructurasDatos -> . diccionario
    (114) funciones -> . funcion
    (115) funciones -> . funcioninbuilt
    (116) funciones -> . funcion_anonima
    (117) funciones -> . arrow_function
    (66) operacion -> . valor operadorAritmetico valor PUNTOYCOMA
    (67) operacion -> . operacion operadorAritmetico operacion
    (86) increment -> . VARIABLE INCREMENT
    (87) increment -> . VARIABLE DECREMENT
    (88) increment -> . VARIABLE DECREMENT PUNTOYCOMA
    (89) increment -> . VARIABLE PLUS_ASSIGN valor
    (90) increment -> . VARIABLE MINUS_ASSIGN valor
    (91) increment -> . empty
    (92) increment -> . VARIABLE INCREMENT PUNTOYCOMA
    (75) while -> . WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE
    (43) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (44) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (74) else -> . ELSE LLLAVE instrucciones RLLAVE
    (83) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (97) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (98) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (99) array -> . VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA
    (100) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (101) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (108) lista -> . LBRACKET RBRACKET
    (109) lista -> . LBRACKET elementos RBRACKET
    (110) diccionario -> . LBRACE pares RBRACE
    (118) funcion -> . FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE
    (119) funcion -> . FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE
    (120) funcioninbuilt -> . VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA
    (121) funcioninbuilt -> . VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA
    (134) funcion_anonima -> . VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (139) arrow_function -> . VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (93) empty -> .
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINT_R resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    RLLAVE          shift and go to state 292
    PRINT           shift and go to state 17
    PRINT_R         shift and go to state 19
    ECHO            shift and go to state 20
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    FOR             shift and go to state 38
    LBRACKET        shift and go to state 23
    LBRACE          shift and go to state 39
    FUNCTION        shift and go to state 40
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    ID              shift and go to state 41

  ! RLLAVE          [ reduce using rule 93 (empty -> .) ]
  ! PRINT           [ reduce using rule 93 (empty -> .) ]
  ! PRINT_R         [ reduce using rule 93 (empty -> .) ]
  ! ECHO            [ reduce using rule 93 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 93 (empty -> .) ]
  ! WHILE           [ reduce using rule 93 (empty -> .) ]
  ! IF              [ reduce using rule 93 (empty -> .) ]
  ! ELSE            [ reduce using rule 93 (empty -> .) ]
  ! FOR             [ reduce using rule 93 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 93 (empty -> .) ]
  ! LBRACE          [ reduce using rule 93 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 93 (empty -> .) ]
  ! NUMBER          [ reduce using rule 93 (empty -> .) ]
  ! FLOAT           [ reduce using rule 93 (empty -> .) ]
  ! STRING          [ reduce using rule 93 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 93 (empty -> .) ]
  ! ID              [ reduce using rule 93 (empty -> .) ]

    instruccion                    shift and go to state 47
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    operacion                      shift and go to state 15
    increment                      shift and go to state 16
    valor                          shift and go to state 18
    while                          shift and go to state 24
    if                             shift and go to state 25
    else                           shift and go to state 26
    for_statement                  shift and go to state 27
    array                          shift and go to state 28
    lista                          shift and go to state 29
    diccionario                    shift and go to state 30
    funcion                        shift and go to state 31
    funcioninbuilt                 shift and go to state 32
    funcion_anonima                shift and go to state 33
    arrow_function                 shift and go to state 34
    empty                          shift and go to state 48
    expression                     shift and go to state 42

state 287

    (134) funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones . RLLAVE PUNTOYCOMA
    (5) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) instruccion -> . operacion
    (15) instruccion -> . increment
    (16) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (19) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (20) imprimir -> . ECHO valor PUNTOYCOMA
    (21) imprimir -> . ECHO concatenar PUNTOYCOMA
    (22) imprimir -> . ECHO valor COMA VARIABLE valor PUNTOYCOMA
    (34) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA
    (36) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (37) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (38) indexacion -> . ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (39) estructurasControl -> . while
    (40) estructurasControl -> . if
    (41) estructurasControl -> . else
    (42) estructurasControl -> . for_statement
    (63) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (64) asignacion -> . VARIABLE IGUAL ARRAY PUNTOYCOMA
    (65) asignacion -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (94) estructurasDatos -> . array
    (95) estructurasDatos -> . lista
    (96) estructurasDatos -> . diccionario
    (114) funciones -> . funcion
    (115) funciones -> . funcioninbuilt
    (116) funciones -> . funcion_anonima
    (117) funciones -> . arrow_function
    (66) operacion -> . valor operadorAritmetico valor PUNTOYCOMA
    (67) operacion -> . operacion operadorAritmetico operacion
    (86) increment -> . VARIABLE INCREMENT
    (87) increment -> . VARIABLE DECREMENT
    (88) increment -> . VARIABLE DECREMENT PUNTOYCOMA
    (89) increment -> . VARIABLE PLUS_ASSIGN valor
    (90) increment -> . VARIABLE MINUS_ASSIGN valor
    (91) increment -> . empty
    (92) increment -> . VARIABLE INCREMENT PUNTOYCOMA
    (75) while -> . WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE
    (43) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (44) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (74) else -> . ELSE LLLAVE instrucciones RLLAVE
    (83) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (97) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (98) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (99) array -> . VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA
    (100) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (101) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (108) lista -> . LBRACKET RBRACKET
    (109) lista -> . LBRACKET elementos RBRACKET
    (110) diccionario -> . LBRACE pares RBRACE
    (118) funcion -> . FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE
    (119) funcion -> . FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE
    (120) funcioninbuilt -> . VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA
    (121) funcioninbuilt -> . VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA
    (134) funcion_anonima -> . VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (139) arrow_function -> . VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (93) empty -> .
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINT_R resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    RLLAVE          shift and go to state 293
    PRINT           shift and go to state 17
    PRINT_R         shift and go to state 19
    ECHO            shift and go to state 20
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    FOR             shift and go to state 38
    LBRACKET        shift and go to state 23
    LBRACE          shift and go to state 39
    FUNCTION        shift and go to state 40
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    ID              shift and go to state 41

  ! RLLAVE          [ reduce using rule 93 (empty -> .) ]
  ! PRINT           [ reduce using rule 93 (empty -> .) ]
  ! PRINT_R         [ reduce using rule 93 (empty -> .) ]
  ! ECHO            [ reduce using rule 93 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 93 (empty -> .) ]
  ! WHILE           [ reduce using rule 93 (empty -> .) ]
  ! IF              [ reduce using rule 93 (empty -> .) ]
  ! ELSE            [ reduce using rule 93 (empty -> .) ]
  ! FOR             [ reduce using rule 93 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 93 (empty -> .) ]
  ! LBRACE          [ reduce using rule 93 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 93 (empty -> .) ]
  ! NUMBER          [ reduce using rule 93 (empty -> .) ]
  ! FLOAT           [ reduce using rule 93 (empty -> .) ]
  ! STRING          [ reduce using rule 93 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 93 (empty -> .) ]
  ! ID              [ reduce using rule 93 (empty -> .) ]

    instruccion                    shift and go to state 47
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    operacion                      shift and go to state 15
    increment                      shift and go to state 16
    valor                          shift and go to state 18
    while                          shift and go to state 24
    if                             shift and go to state 25
    else                           shift and go to state 26
    for_statement                  shift and go to state 27
    array                          shift and go to state 28
    lista                          shift and go to state 29
    diccionario                    shift and go to state 30
    funcion                        shift and go to state 31
    funcioninbuilt                 shift and go to state 32
    funcion_anonima                shift and go to state 33
    arrow_function                 shift and go to state 34
    empty                          shift and go to state 48
    expression                     shift and go to state 42

state 288

    (142) expression -> VARIABLE .
    (144) expression -> VARIABLE . TIMES VARIABLE
    (145) expression -> VARIABLE . PLUS VARIABLE
    (146) expression -> VARIABLE . MINUS VARIABLE
    (147) expression -> VARIABLE . DIVIDE VARIABLE
    (148) expression -> VARIABLE . TIMES NUMBER
    (149) expression -> VARIABLE . PLUS NUMBER
    (150) expression -> VARIABLE . MINUS NUMBER
    (151) expression -> VARIABLE . DIVIDE NUMBER
    (152) expression -> VARIABLE . MOD VARIABLE

    PUNTOYCOMA      reduce using rule 142 (expression -> VARIABLE .)
    TIMES           shift and go to state 69
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    DIVIDE          shift and go to state 72
    MOD             shift and go to state 73


state 289

    (139) arrow_function -> VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 294


state 290

    (143) expression -> NUMBER .

    PUNTOYCOMA      reduce using rule 143 (expression -> NUMBER .)


state 291

    (83) for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN . LLLAVE instrucciones RLLAVE

    LLLAVE          shift and go to state 295


state 292

    (119) funcion -> FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE .

    PRINT           reduce using rule 119 (funcion -> FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE .)
    PRINT_R         reduce using rule 119 (funcion -> FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE .)
    ECHO            reduce using rule 119 (funcion -> FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE .)
    VARIABLE        reduce using rule 119 (funcion -> FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE .)
    WHILE           reduce using rule 119 (funcion -> FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE .)
    IF              reduce using rule 119 (funcion -> FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE .)
    ELSE            reduce using rule 119 (funcion -> FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE .)
    FOR             reduce using rule 119 (funcion -> FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE .)
    LBRACKET        reduce using rule 119 (funcion -> FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE .)
    LBRACE          reduce using rule 119 (funcion -> FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE .)
    FUNCTION        reduce using rule 119 (funcion -> FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE .)
    NUMBER          reduce using rule 119 (funcion -> FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE .)
    FLOAT           reduce using rule 119 (funcion -> FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE .)
    STRING          reduce using rule 119 (funcion -> FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE .)
    BOOLEAN         reduce using rule 119 (funcion -> FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE .)
    ID              reduce using rule 119 (funcion -> FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE .)
    PHP_END         reduce using rule 119 (funcion -> FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE .)
    RLLAVE          reduce using rule 119 (funcion -> FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE .)


state 293

    (134) funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 296


state 294

    (139) arrow_function -> VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA .

    PRINT           reduce using rule 139 (arrow_function -> VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA .)
    PRINT_R         reduce using rule 139 (arrow_function -> VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA .)
    ECHO            reduce using rule 139 (arrow_function -> VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA .)
    VARIABLE        reduce using rule 139 (arrow_function -> VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA .)
    WHILE           reduce using rule 139 (arrow_function -> VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA .)
    IF              reduce using rule 139 (arrow_function -> VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA .)
    ELSE            reduce using rule 139 (arrow_function -> VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA .)
    FOR             reduce using rule 139 (arrow_function -> VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA .)
    LBRACKET        reduce using rule 139 (arrow_function -> VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA .)
    LBRACE          reduce using rule 139 (arrow_function -> VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA .)
    FUNCTION        reduce using rule 139 (arrow_function -> VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA .)
    NUMBER          reduce using rule 139 (arrow_function -> VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA .)
    FLOAT           reduce using rule 139 (arrow_function -> VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA .)
    STRING          reduce using rule 139 (arrow_function -> VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA .)
    BOOLEAN         reduce using rule 139 (arrow_function -> VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA .)
    ID              reduce using rule 139 (arrow_function -> VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA .)
    PHP_END         reduce using rule 139 (arrow_function -> VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA .)
    RLLAVE          reduce using rule 139 (arrow_function -> VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA .)


state 295

    (83) for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE . instrucciones RLLAVE
    (4) instrucciones -> . instruccion
    (5) instrucciones -> . instrucciones instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) instruccion -> . operacion
    (15) instruccion -> . increment
    (16) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (19) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (20) imprimir -> . ECHO valor PUNTOYCOMA
    (21) imprimir -> . ECHO concatenar PUNTOYCOMA
    (22) imprimir -> . ECHO valor COMA VARIABLE valor PUNTOYCOMA
    (34) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA
    (36) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (37) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (38) indexacion -> . ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (39) estructurasControl -> . while
    (40) estructurasControl -> . if
    (41) estructurasControl -> . else
    (42) estructurasControl -> . for_statement
    (63) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (64) asignacion -> . VARIABLE IGUAL ARRAY PUNTOYCOMA
    (65) asignacion -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (94) estructurasDatos -> . array
    (95) estructurasDatos -> . lista
    (96) estructurasDatos -> . diccionario
    (114) funciones -> . funcion
    (115) funciones -> . funcioninbuilt
    (116) funciones -> . funcion_anonima
    (117) funciones -> . arrow_function
    (66) operacion -> . valor operadorAritmetico valor PUNTOYCOMA
    (67) operacion -> . operacion operadorAritmetico operacion
    (86) increment -> . VARIABLE INCREMENT
    (87) increment -> . VARIABLE DECREMENT
    (88) increment -> . VARIABLE DECREMENT PUNTOYCOMA
    (89) increment -> . VARIABLE PLUS_ASSIGN valor
    (90) increment -> . VARIABLE MINUS_ASSIGN valor
    (91) increment -> . empty
    (92) increment -> . VARIABLE INCREMENT PUNTOYCOMA
    (75) while -> . WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE
    (43) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (44) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (74) else -> . ELSE LLLAVE instrucciones RLLAVE
    (83) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (97) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (98) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (99) array -> . VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA
    (100) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (101) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (108) lista -> . LBRACKET RBRACKET
    (109) lista -> . LBRACKET elementos RBRACKET
    (110) diccionario -> . LBRACE pares RBRACE
    (118) funcion -> . FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE
    (119) funcion -> . FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE
    (120) funcioninbuilt -> . VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA
    (121) funcioninbuilt -> . VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA
    (134) funcion_anonima -> . VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (139) arrow_function -> . VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (93) empty -> .
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINT_R resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    PRINT           shift and go to state 17
    PRINT_R         shift and go to state 19
    ECHO            shift and go to state 20
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    FOR             shift and go to state 38
    LBRACKET        shift and go to state 23
    LBRACE          shift and go to state 39
    FUNCTION        shift and go to state 40
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    ID              shift and go to state 41
    RLLAVE          reduce using rule 93 (empty -> .)

  ! PRINT           [ reduce using rule 93 (empty -> .) ]
  ! PRINT_R         [ reduce using rule 93 (empty -> .) ]
  ! ECHO            [ reduce using rule 93 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 93 (empty -> .) ]
  ! WHILE           [ reduce using rule 93 (empty -> .) ]
  ! IF              [ reduce using rule 93 (empty -> .) ]
  ! ELSE            [ reduce using rule 93 (empty -> .) ]
  ! FOR             [ reduce using rule 93 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 93 (empty -> .) ]
  ! LBRACE          [ reduce using rule 93 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 93 (empty -> .) ]
  ! NUMBER          [ reduce using rule 93 (empty -> .) ]
  ! FLOAT           [ reduce using rule 93 (empty -> .) ]
  ! STRING          [ reduce using rule 93 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 93 (empty -> .) ]
  ! ID              [ reduce using rule 93 (empty -> .) ]

    increment                      shift and go to state 16
    instrucciones                  shift and go to state 297
    instruccion                    shift and go to state 6
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    operacion                      shift and go to state 15
    valor                          shift and go to state 18
    while                          shift and go to state 24
    if                             shift and go to state 25
    else                           shift and go to state 26
    for_statement                  shift and go to state 27
    array                          shift and go to state 28
    lista                          shift and go to state 29
    diccionario                    shift and go to state 30
    funcion                        shift and go to state 31
    funcioninbuilt                 shift and go to state 32
    funcion_anonima                shift and go to state 33
    arrow_function                 shift and go to state 34
    empty                          shift and go to state 48
    expression                     shift and go to state 42

state 296

    (134) funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA .

    PRINT           reduce using rule 134 (funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA .)
    PRINT_R         reduce using rule 134 (funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA .)
    ECHO            reduce using rule 134 (funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA .)
    VARIABLE        reduce using rule 134 (funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA .)
    WHILE           reduce using rule 134 (funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA .)
    IF              reduce using rule 134 (funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA .)
    ELSE            reduce using rule 134 (funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA .)
    FOR             reduce using rule 134 (funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA .)
    LBRACKET        reduce using rule 134 (funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA .)
    LBRACE          reduce using rule 134 (funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA .)
    FUNCTION        reduce using rule 134 (funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA .)
    NUMBER          reduce using rule 134 (funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA .)
    FLOAT           reduce using rule 134 (funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA .)
    STRING          reduce using rule 134 (funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA .)
    BOOLEAN         reduce using rule 134 (funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA .)
    ID              reduce using rule 134 (funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA .)
    PHP_END         reduce using rule 134 (funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA .)
    RLLAVE          reduce using rule 134 (funcion_anonima -> VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA .)


state 297

    (83) for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones . RLLAVE
    (5) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . solicitud_datos
    (8) instruccion -> . input
    (9) instruccion -> . indexacion
    (10) instruccion -> . estructurasControl
    (11) instruccion -> . asignacion
    (12) instruccion -> . estructurasDatos
    (13) instruccion -> . funciones
    (14) instruccion -> . operacion
    (15) instruccion -> . increment
    (16) imprimir -> . PRINT LPAREN valor RPAREN PUNTOYCOMA
    (17) imprimir -> . PRINT LPAREN argumentos RPAREN PUNTOYCOMA
    (18) imprimir -> . PRINT_R LPAREN valor RPAREN PUNTOYCOMA
    (19) imprimir -> . PRINT_R LPAREN argumentos RPAREN PUNTOYCOMA
    (20) imprimir -> . ECHO valor PUNTOYCOMA
    (21) imprimir -> . ECHO concatenar PUNTOYCOMA
    (22) imprimir -> . ECHO valor COMA VARIABLE valor PUNTOYCOMA
    (34) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN STRING RPAREN PUNTOYCOMA
    (35) solicitud_datos -> . VARIABLE IGUAL READLINE LPAREN RPAREN PUNTOYCOMA
    (36) input -> . VARIABLE IGUAL FGETS LPAREN VARIABLE RPAREN PUNTOYCOMA
    (37) indexacion -> . VARIABLE LBRACKET valor RBRACKET
    (38) indexacion -> . ECHO VARIABLE LBRACKET valor RBRACKET PUNTOYCOMA
    (39) estructurasControl -> . while
    (40) estructurasControl -> . if
    (41) estructurasControl -> . else
    (42) estructurasControl -> . for_statement
    (63) asignacion -> . VARIABLE IGUAL valor PUNTOYCOMA
    (64) asignacion -> . VARIABLE IGUAL ARRAY PUNTOYCOMA
    (65) asignacion -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (94) estructurasDatos -> . array
    (95) estructurasDatos -> . lista
    (96) estructurasDatos -> . diccionario
    (114) funciones -> . funcion
    (115) funciones -> . funcioninbuilt
    (116) funciones -> . funcion_anonima
    (117) funciones -> . arrow_function
    (66) operacion -> . valor operadorAritmetico valor PUNTOYCOMA
    (67) operacion -> . operacion operadorAritmetico operacion
    (86) increment -> . VARIABLE INCREMENT
    (87) increment -> . VARIABLE DECREMENT
    (88) increment -> . VARIABLE DECREMENT PUNTOYCOMA
    (89) increment -> . VARIABLE PLUS_ASSIGN valor
    (90) increment -> . VARIABLE MINUS_ASSIGN valor
    (91) increment -> . empty
    (92) increment -> . VARIABLE INCREMENT PUNTOYCOMA
    (75) while -> . WHILE LPAREN condicion RPAREN LLLAVE instrucciones RLLAVE
    (43) if -> . IF LPAREN comparaciones RPAREN LLLAVE instrucciones RLLAVE
    (44) if -> . IF LPAREN VARIABLE RPAREN LLLAVE instrucciones RLLAVE
    (74) else -> . ELSE LLLAVE instrucciones RLLAVE
    (83) for_statement -> . FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE
    (97) array -> . VARIABLE IGUAL ARRAY LPAREN RPAREN PUNTOYCOMA
    (98) array -> . VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA
    (99) array -> . VARIABLE IGUAL ARRAY LPAREN valor RPAREN PUNTOYCOMA
    (100) array -> . VARIABLE IGUAL LBRACKET RBRACKET PUNTOYCOMA
    (101) array -> . VARIABLE IGUAL LBRACKET elementos RBRACKET PUNTOYCOMA
    (108) lista -> . LBRACKET RBRACKET
    (109) lista -> . LBRACKET elementos RBRACKET
    (110) diccionario -> . LBRACE pares RBRACE
    (118) funcion -> . FUNCTION ID LPAREN RPAREN LLLAVE instrucciones RLLAVE
    (119) funcion -> . FUNCTION ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE
    (120) funcioninbuilt -> . VARIABLE IGUAL funcionesdefin LPAREN operaciones RPAREN PUNTOYCOMA
    (121) funcioninbuilt -> . VARIABLE funcionesdefin LPAREN RPAREN PUNTOYCOMA
    (134) funcion_anonima -> . VARIABLE IGUAL FUNCTION LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE PUNTOYCOMA
    (139) arrow_function -> . VARIABLE IGUAL FN LPAREN parameter_list RPAREN ARROW expression PUNTOYCOMA
    (23) valor -> . NUMBER
    (24) valor -> . FLOAT
    (25) valor -> . STRING
    (26) valor -> . BOOLEAN
    (27) valor -> . VARIABLE
    (28) valor -> . ID
    (29) valor -> . expression
    (93) empty -> .
    (142) expression -> . VARIABLE
    (143) expression -> . NUMBER
    (144) expression -> . VARIABLE TIMES VARIABLE
    (145) expression -> . VARIABLE PLUS VARIABLE
    (146) expression -> . VARIABLE MINUS VARIABLE
    (147) expression -> . VARIABLE DIVIDE VARIABLE
    (148) expression -> . VARIABLE TIMES NUMBER
    (149) expression -> . VARIABLE PLUS NUMBER
    (150) expression -> . VARIABLE MINUS NUMBER
    (151) expression -> . VARIABLE DIVIDE NUMBER
    (152) expression -> . VARIABLE MOD VARIABLE

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINT_R resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    RLLAVE          shift and go to state 298
    PRINT           shift and go to state 17
    PRINT_R         shift and go to state 19
    ECHO            shift and go to state 20
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    FOR             shift and go to state 38
    LBRACKET        shift and go to state 23
    LBRACE          shift and go to state 39
    FUNCTION        shift and go to state 40
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 45
    ID              shift and go to state 41

  ! RLLAVE          [ reduce using rule 93 (empty -> .) ]
  ! PRINT           [ reduce using rule 93 (empty -> .) ]
  ! PRINT_R         [ reduce using rule 93 (empty -> .) ]
  ! ECHO            [ reduce using rule 93 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 93 (empty -> .) ]
  ! WHILE           [ reduce using rule 93 (empty -> .) ]
  ! IF              [ reduce using rule 93 (empty -> .) ]
  ! ELSE            [ reduce using rule 93 (empty -> .) ]
  ! FOR             [ reduce using rule 93 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 93 (empty -> .) ]
  ! LBRACE          [ reduce using rule 93 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 93 (empty -> .) ]
  ! NUMBER          [ reduce using rule 93 (empty -> .) ]
  ! FLOAT           [ reduce using rule 93 (empty -> .) ]
  ! STRING          [ reduce using rule 93 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 93 (empty -> .) ]
  ! ID              [ reduce using rule 93 (empty -> .) ]

    increment                      shift and go to state 16
    instruccion                    shift and go to state 47
    imprimir                       shift and go to state 7
    solicitud_datos                shift and go to state 8
    input                          shift and go to state 9
    indexacion                     shift and go to state 10
    estructurasControl             shift and go to state 11
    asignacion                     shift and go to state 12
    estructurasDatos               shift and go to state 13
    funciones                      shift and go to state 14
    operacion                      shift and go to state 15
    valor                          shift and go to state 18
    while                          shift and go to state 24
    if                             shift and go to state 25
    else                           shift and go to state 26
    for_statement                  shift and go to state 27
    array                          shift and go to state 28
    lista                          shift and go to state 29
    diccionario                    shift and go to state 30
    funcion                        shift and go to state 31
    funcioninbuilt                 shift and go to state 32
    funcion_anonima                shift and go to state 33
    arrow_function                 shift and go to state 34
    empty                          shift and go to state 48
    expression                     shift and go to state 42

state 298

    (83) for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .

    PRINT           reduce using rule 83 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    PRINT_R         reduce using rule 83 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    ECHO            reduce using rule 83 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    VARIABLE        reduce using rule 83 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    WHILE           reduce using rule 83 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    IF              reduce using rule 83 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    ELSE            reduce using rule 83 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    FOR             reduce using rule 83 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    LBRACKET        reduce using rule 83 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    LBRACE          reduce using rule 83 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    FUNCTION        reduce using rule 83 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    NUMBER          reduce using rule 83 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    FLOAT           reduce using rule 83 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    STRING          reduce using rule 83 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    BOOLEAN         reduce using rule 83 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    ID              reduce using rule 83 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    PHP_END         reduce using rule 83 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)
    RLLAVE          reduce using rule 83 (for_statement -> FOR LPAREN initialization PUNTOYCOMA condicion PUNTOYCOMA increment RPAREN LLLAVE instrucciones RLLAVE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PRINT in state 2 resolved as shift
WARNING: shift/reduce conflict for PRINT_R in state 2 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 2 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 2 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 2 resolved as shift
WARNING: shift/reduce conflict for IF in state 2 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 2 resolved as shift
WARNING: shift/reduce conflict for FOR in state 2 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 2 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 2 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 2 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 2 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 2 resolved as shift
WARNING: shift/reduce conflict for STRING in state 2 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 2 resolved as shift
WARNING: shift/reduce conflict for ID in state 2 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 4 resolved as shift
WARNING: shift/reduce conflict for PRINT_R in state 4 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 4 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 4 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 4 resolved as shift
WARNING: shift/reduce conflict for IF in state 4 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 4 resolved as shift
WARNING: shift/reduce conflict for FOR in state 4 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 4 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 4 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 4 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 4 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 4 resolved as shift
WARNING: shift/reduce conflict for STRING in state 4 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 4 resolved as shift
WARNING: shift/reduce conflict for ID in state 4 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 21 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 21 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 21 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 21 resolved as shift
WARNING: shift/reduce conflict for MOD in state 21 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 59 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 87 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 87 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 87 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 87 resolved as shift
WARNING: shift/reduce conflict for MOD in state 87 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 90 resolved as shift
WARNING: shift/reduce conflict for PRINT_R in state 90 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 90 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 90 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 90 resolved as shift
WARNING: shift/reduce conflict for IF in state 90 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 90 resolved as shift
WARNING: shift/reduce conflict for FOR in state 90 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 90 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 90 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 90 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 90 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 90 resolved as shift
WARNING: shift/reduce conflict for STRING in state 90 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 90 resolved as shift
WARNING: shift/reduce conflict for ID in state 90 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 96 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 96 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 96 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 96 resolved as shift
WARNING: shift/reduce conflict for MOD in state 96 resolved as shift
WARNING: shift/reduce conflict for POT in state 96 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 97 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 100 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 136 resolved as shift
WARNING: shift/reduce conflict for NOT_IDENTICAL in state 136 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 136 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 136 resolved as shift
WARNING: shift/reduce conflict for IDENTICAL in state 136 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 136 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 136 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 138 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 138 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 141 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 141 resolved as shift
WARNING: shift/reduce conflict for PRINT_R in state 141 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 141 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 141 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 141 resolved as shift
WARNING: shift/reduce conflict for IF in state 141 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 141 resolved as shift
WARNING: shift/reduce conflict for FOR in state 141 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 141 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 141 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 141 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 141 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 141 resolved as shift
WARNING: shift/reduce conflict for STRING in state 141 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 141 resolved as shift
WARNING: shift/reduce conflict for ID in state 141 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 218 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 221 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 221 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 221 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 221 resolved as shift
WARNING: shift/reduce conflict for MOD in state 221 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 228 resolved as shift
WARNING: shift/reduce conflict for PRINT_R in state 228 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 228 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 228 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 228 resolved as shift
WARNING: shift/reduce conflict for IF in state 228 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 228 resolved as shift
WARNING: shift/reduce conflict for FOR in state 228 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 228 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 228 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 228 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 228 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 228 resolved as shift
WARNING: shift/reduce conflict for STRING in state 228 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 228 resolved as shift
WARNING: shift/reduce conflict for ID in state 228 resolved as shift
WARNING: shift/reduce conflict for AND_LOGICAL in state 229 resolved as shift
WARNING: shift/reduce conflict for OR_LOGICAL in state 229 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 233 resolved as shift
WARNING: shift/reduce conflict for PRINT_R in state 233 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 233 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 233 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 233 resolved as shift
WARNING: shift/reduce conflict for IF in state 233 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 233 resolved as shift
WARNING: shift/reduce conflict for FOR in state 233 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 233 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 233 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 233 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 233 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 233 resolved as shift
WARNING: shift/reduce conflict for STRING in state 233 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 233 resolved as shift
WARNING: shift/reduce conflict for ID in state 233 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 234 resolved as shift
WARNING: shift/reduce conflict for PRINT_R in state 234 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 234 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 234 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 234 resolved as shift
WARNING: shift/reduce conflict for IF in state 234 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 234 resolved as shift
WARNING: shift/reduce conflict for FOR in state 234 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 234 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 234 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 234 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 234 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 234 resolved as shift
WARNING: shift/reduce conflict for STRING in state 234 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 234 resolved as shift
WARNING: shift/reduce conflict for ID in state 234 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 238 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 238 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 242 resolved as shift
WARNING: shift/reduce conflict for PRINT_R in state 242 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 242 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 242 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 242 resolved as shift
WARNING: shift/reduce conflict for IF in state 242 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 242 resolved as shift
WARNING: shift/reduce conflict for FOR in state 242 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 242 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 242 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 242 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 242 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 242 resolved as shift
WARNING: shift/reduce conflict for STRING in state 242 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 242 resolved as shift
WARNING: shift/reduce conflict for ID in state 242 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 261 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 261 resolved as shift
WARNING: shift/reduce conflict for PRINT_R in state 261 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 261 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 261 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 261 resolved as shift
WARNING: shift/reduce conflict for IF in state 261 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 261 resolved as shift
WARNING: shift/reduce conflict for FOR in state 261 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 261 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 261 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 261 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 261 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 261 resolved as shift
WARNING: shift/reduce conflict for STRING in state 261 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 261 resolved as shift
WARNING: shift/reduce conflict for ID in state 261 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 262 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 262 resolved as shift
WARNING: shift/reduce conflict for PRINT_R in state 262 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 262 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 262 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 262 resolved as shift
WARNING: shift/reduce conflict for IF in state 262 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 262 resolved as shift
WARNING: shift/reduce conflict for FOR in state 262 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 262 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 262 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 262 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 262 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 262 resolved as shift
WARNING: shift/reduce conflict for STRING in state 262 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 262 resolved as shift
WARNING: shift/reduce conflict for ID in state 262 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 263 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 263 resolved as shift
WARNING: shift/reduce conflict for PRINT_R in state 263 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 263 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 263 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 263 resolved as shift
WARNING: shift/reduce conflict for IF in state 263 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 263 resolved as shift
WARNING: shift/reduce conflict for FOR in state 263 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 263 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 263 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 263 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 263 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 263 resolved as shift
WARNING: shift/reduce conflict for STRING in state 263 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 263 resolved as shift
WARNING: shift/reduce conflict for ID in state 263 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 265 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 265 resolved as shift
WARNING: shift/reduce conflict for PRINT_R in state 265 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 265 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 265 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 265 resolved as shift
WARNING: shift/reduce conflict for IF in state 265 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 265 resolved as shift
WARNING: shift/reduce conflict for FOR in state 265 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 265 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 265 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 265 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 265 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 265 resolved as shift
WARNING: shift/reduce conflict for STRING in state 265 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 265 resolved as shift
WARNING: shift/reduce conflict for ID in state 265 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 266 resolved as shift
WARNING: shift/reduce conflict for PRINT_R in state 266 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 266 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 266 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 266 resolved as shift
WARNING: shift/reduce conflict for IF in state 266 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 266 resolved as shift
WARNING: shift/reduce conflict for FOR in state 266 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 266 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 266 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 266 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 266 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 266 resolved as shift
WARNING: shift/reduce conflict for STRING in state 266 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 266 resolved as shift
WARNING: shift/reduce conflict for ID in state 266 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 275 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 275 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 275 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 275 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 275 resolved as shift
WARNING: shift/reduce conflict for MOD in state 275 resolved as shift
WARNING: shift/reduce conflict for POT in state 275 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 277 resolved as shift
WARNING: shift/reduce conflict for PRINT_R in state 277 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 277 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 277 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 277 resolved as shift
WARNING: shift/reduce conflict for IF in state 277 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 277 resolved as shift
WARNING: shift/reduce conflict for FOR in state 277 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 277 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 277 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 277 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 277 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 277 resolved as shift
WARNING: shift/reduce conflict for STRING in state 277 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 277 resolved as shift
WARNING: shift/reduce conflict for ID in state 277 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 286 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 286 resolved as shift
WARNING: shift/reduce conflict for PRINT_R in state 286 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 286 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 286 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 286 resolved as shift
WARNING: shift/reduce conflict for IF in state 286 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 286 resolved as shift
WARNING: shift/reduce conflict for FOR in state 286 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 286 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 286 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 286 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 286 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 286 resolved as shift
WARNING: shift/reduce conflict for STRING in state 286 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 286 resolved as shift
WARNING: shift/reduce conflict for ID in state 286 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 287 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 287 resolved as shift
WARNING: shift/reduce conflict for PRINT_R in state 287 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 287 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 287 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 287 resolved as shift
WARNING: shift/reduce conflict for IF in state 287 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 287 resolved as shift
WARNING: shift/reduce conflict for FOR in state 287 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 287 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 287 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 287 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 287 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 287 resolved as shift
WARNING: shift/reduce conflict for STRING in state 287 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 287 resolved as shift
WARNING: shift/reduce conflict for ID in state 287 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 295 resolved as shift
WARNING: shift/reduce conflict for PRINT_R in state 295 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 295 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 295 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 295 resolved as shift
WARNING: shift/reduce conflict for IF in state 295 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 295 resolved as shift
WARNING: shift/reduce conflict for FOR in state 295 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 295 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 295 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 295 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 295 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 295 resolved as shift
WARNING: shift/reduce conflict for STRING in state 295 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 295 resolved as shift
WARNING: shift/reduce conflict for ID in state 295 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 297 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 297 resolved as shift
WARNING: shift/reduce conflict for PRINT_R in state 297 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 297 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 297 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 297 resolved as shift
WARNING: shift/reduce conflict for IF in state 297 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 297 resolved as shift
WARNING: shift/reduce conflict for FOR in state 297 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 297 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 297 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 297 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 297 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 297 resolved as shift
WARNING: shift/reduce conflict for STRING in state 297 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 297 resolved as shift
WARNING: shift/reduce conflict for ID in state 297 resolved as shift
WARNING: reduce/reduce conflict in state 4 resolved using rule (cuerpo -> instrucciones)
WARNING: rejected rule (empty -> <empty>) in state 4
WARNING: reduce/reduce conflict in state 5 resolved using rule (cuerpo -> empty)
WARNING: rejected rule (increment -> empty) in state 5
WARNING: reduce/reduce conflict in state 21 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (expression -> VARIABLE) in state 21
WARNING: reduce/reduce conflict in state 43 resolved using rule (valor -> NUMBER)
WARNING: rejected rule (expression -> NUMBER) in state 43
WARNING: reduce/reduce conflict in state 61 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (expression -> VARIABLE) in state 61
WARNING: reduce/reduce conflict in state 87 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (expression -> VARIABLE) in state 87
WARNING: reduce/reduce conflict in state 136 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (expression -> VARIABLE) in state 136
WARNING: reduce/reduce conflict in state 138 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (expression -> VARIABLE) in state 138
WARNING: reduce/reduce conflict in state 221 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (expression -> VARIABLE) in state 221
WARNING: reduce/reduce conflict in state 231 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (condicion_simple -> VARIABLE comparador VARIABLE) in state 231
WARNING: reduce/reduce conflict in state 231 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (expression -> VARIABLE) in state 231
WARNING: reduce/reduce conflict in state 235 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (comparacion -> VARIABLE comparadorNum VARIABLE) in state 235
WARNING: reduce/reduce conflict in state 235 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (expression -> VARIABLE) in state 235
WARNING: reduce/reduce conflict in state 238 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (expression -> VARIABLE) in state 238
WARNING: reduce/reduce conflict in state 271 resolved using rule (asignacion -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA)
WARNING: rejected rule (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA) in state 271
WARNING: reduce/reduce conflict in state 275 resolved using rule (operacion -> operacion operadorAritmetico operacion)
WARNING: rejected rule (operaciones -> operacion) in state 275
WARNING: Rule (condicion_simple -> VARIABLE comparador VARIABLE) is never reduced
WARNING: Rule (comparacion -> VARIABLE comparadorNum VARIABLE) is never reduced
WARNING: Rule (array -> VARIABLE IGUAL ARRAY LPAREN elementos RPAREN PUNTOYCOMA) is never reduced
